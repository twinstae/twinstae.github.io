import { j as element, y as text, k as claim_element, l as children, A as claim_text, d as detach_dev, n as attr_dev, o as add_location, i as insert_hydration_dev, E as append_hydration_dev, Q as listen_dev, H as noop, g as dispatch_dev, s as validate_slots, P as onMount, S as SvelteComponentDev, w as init, x as safe_not_equal } from '../index-328232cc.js';
import '../index-e9702746.js';

/* src/components/ScrollTopButton.svelte generated by Svelte v3.46.4 */
const file = "src/components/ScrollTopButton.svelte";

function create_fragment(ctx) {
	let button;
	let t;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			button = element("button");
			t = text("↑ 맨 위로");
			this.h();
		},
		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { id: true, class: true });
			var button_nodes = children(button);
			t = claim_text(button_nodes, "↑ 맨 위로");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(button, "id", "scroll-top-button");
			attr_dev(button, "class", "svelte-1wifdss");
			add_location(button, file, 19, 0, 487);
		},
		m: function mount(target, anchor) {
			insert_hydration_dev(target, button, anchor);
			append_hydration_dev(button, t);

			if (!mounted) {
				dispose = listen_dev(button, "click", /*click_handler*/ ctx[0], false, false, false);
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(button);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('ScrollTopButton', slots, []);

	onMount(() => {
		const btn = document.getElementById("scroll-top-button");

		window.onscroll = function () {
			scrollFunction();
		};

		function scrollFunction() {
			const limit = 256;

			if (btn.style.opacity == 0 && document.body.scrollTop > limit || document.documentElement.scrollTop > limit) {
				btn.style.opacity = 1;
			} else if (btn.style.opacity == 1) {
				btn.style.opacity = 0;
			}
		}
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ScrollTopButton> was created with unknown prop '${key}'`);
	});

	const click_handler = function topFunction() {
		document.documentElement.scrollTo({ top: 0, behavior: 'smooth' });
	};

	$$self.$capture_state = () => ({ onMount });
	return [click_handler];
}

class ScrollTopButton extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ScrollTopButton",
			options,
			id: create_fragment.name
		});
	}
}

export { ScrollTopButton as default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2Nyb2xsVG9wQnV0dG9uLjM2Y2JjMTcyLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TY3JvbGxUb3BCdXR0b24uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgb25Nb3VudCgoKT0+e1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2Nyb2xsLXRvcC1idXR0b25cIik7XG5cbiAgICB3aW5kb3cub25zY3JvbGwgPSBmdW5jdGlvbigpIHtzY3JvbGxGdW5jdGlvbigpfTtcblxuICAgIGZ1bmN0aW9uIHNjcm9sbEZ1bmN0aW9uKCkge1xuICAgICAgY29uc3QgbGltaXQgPSAyNTY7XG4gICAgICBpZiAoYnRuLnN0eWxlLm9wYWNpdHkgPT0gMCAmJiBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA+IGxpbWl0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgPiBsaW1pdCkge1xuICAgICAgICBidG4uc3R5bGUub3BhY2l0eSA9IDE7XG4gICAgICB9IGVsc2UgaWYgKGJ0bi5zdHlsZS5vcGFjaXR5ID09IDEpe1xuICAgICAgICBidG4uc3R5bGUub3BhY2l0eSA9IDA7XG4gICAgICB9XG4gICAgfVxuICB9KVxuPC9zY3JpcHQ+XG5cbjxidXR0b24gaWQ9XCJzY3JvbGwtdG9wLWJ1dHRvblwiIG9uOmNsaWNrPXtmdW5jdGlvbiB0b3BGdW5jdGlvbigpIHtcbiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG8oe1xuICAgICAgdG9wOiAwLFxuICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnXG4gICAgfSk7XG4gIH19PuKGkSDrp6gg7JyE66GcPC9idXR0b24+XG5cbjxzdHlsZT5cbiAgI3Njcm9sbC10b3AtYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYm90dG9tOiAxcmVtO1xuICAgIHJpZ2h0OiAxcmVtO1xuICAgIHotaW5kZXg6IDc7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBsaW5lYXI7XG4gIH1cbjwvc3R5bGU+XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O1lBd0JLLFFBQU0sQ0FBQSxDQUFBOzs7Ozs7Z0NBQU4sUUFBTSxDQUFBLENBQUE7Ozs7Ozs7Ozs7R0FMWCxvQkFLbUIsQ0FBQSxNQUFBLEVBQUEsTUFBQSxFQUFBLE1BQUEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FyQmpCLE9BQU8sQ0FBQSxNQUFBO0FBQ0MsRUFBQSxNQUFBLEdBQUcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLG1CQUFtQixDQUFBLENBQUE7O0FBRXZELEVBQUEsTUFBTSxDQUFDLFFBQVEsR0FBQSxZQUFBO0dBQWUsY0FBYyxFQUFBLENBQUE7OztXQUVuQyxjQUFjLEdBQUE7QUFDZixHQUFBLE1BQUEsS0FBSyxHQUFHLEdBQUcsQ0FBQTs7T0FDYixHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxJQUFJLFFBQVEsQ0FBQyxlQUFlLENBQUMsU0FBUyxHQUFHLEtBQUssRUFBQTtBQUN6RyxJQUFBLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQTtBQUNaLElBQUEsTUFBQSxJQUFBLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxJQUFJLENBQUMsRUFBQTtBQUMvQixJQUFBLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQTs7Ozs7Ozs7Ozs7Z0NBTXFCLFdBQVcsR0FBQTtFQUN6RCxRQUFRLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQSxFQUMvQixHQUFHLEVBQUUsQ0FBQyxFQUNOLFFBQVEsRUFBRSxRQUFPLEVBQUEsQ0FBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==

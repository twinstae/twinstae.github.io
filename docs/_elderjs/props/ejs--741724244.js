export default {"blog_list":[{"slug":"why-not-transfer","frontmatter":{"title":"수학적 사고력은 왜 전이되지 않을까?","excerpt":"수학, 코딩, 논리 등을 교육하면 사고력이나 문제해결 능력이 길러진다는 주장의 맹점을 파헤칩니다.","date":"2021-09-10T18:34:38.200461","author":"탐정토끼(Taehee Kim)","tag":"학습전이, 문제해결능력, 재능, 전략"},"html":"<p>결론부터 말하자면 수학, 코딩, 논리학, 철학, 인문고전을 공부한다고 해서 문제해결능력이 길러지지 않습니다.</p>\n<h2 id=\"얄팍한-편견들\">얄팍한 편견들</h2>\n<h3 id=\"주입식-교육의-한계\">주입식 교육의 한계</h3>\n<p>한국 교육의 문제는 뭘까요? 암기식 학력고사가 사고력을 묻는 수학능력시험으로 바뀐 지금도, 다들 주입식 교육이 문제라고 합니다. 세상은 변했는데 문제의 원인에 대한 생각은 여전히 피상적입니다.</p>\n<p>주입식 교육을 받다보니 현실 문제를 해결할 수 없다는 지적이 많이 나옵니다. 지식만 암기해서는 회사의 실무에서 만나는 복잡하고 새로운 문제를 해결할 수 없다는 거죠.</p>\n<h3 id=\"ㅇㅇ을-공부해야하는-이유--형식-도야-이론\">ㅇㅇ을 공부해야하는 이유? : 형식 도야 이론</h3>\n<blockquote>\n<p>전이 검사를 사용한 첫 번째 집단은 손다이크와 그 동료들이다. (Thorndike &#x26; Woodworth, 1901) 그들은 당시를 풍미한 '형식 도야(formal discipline)'의 원리를 검증하기 위하여 연구를 수행하였다. 이 원리에 따르면 라틴어와 같이 어려운 교과목을 학습하고 훈련하는 것은 일반적인 학습과 주의집중 기술을 발달시키는 것과 같이 광범위한 효과를 갖는다. 하지만 이러한 연구는 형식도야의 가정에 근거하여 교육경험을 고안하는 것이 유용한가에 대하여 심각한 의문을 제기하였다. 학습은 다양한 영역의 수행을 가능하게 하는 '일반 기술'이나 '정신 근육'의 발달이라기 보다는 구체적인 것을 배우는 것으로 이해할 수 있기 때문이다.</p>\n<p>[학습과학 - 뇌, 마음, 경험 그리고 교육 : 3장 학습과 전이]</p>\n</blockquote>\n<p>사고력이나 문제해결능력이 중요하다는 이야기가 계속 나왔습니다. 이런 주장의 레파토리는 조금씩 다르지만 다들 비슷한데요. 자기계발서 작가와 방송, 사교육 업체, 대충 생각한 정책들이 기회를 놓칠리 없습니다. 코딩 사고력이니, 인문고전 리딩으로 리드하라던가, 수학의 쓸모가 어쩌구... 트위터에도 ㅇㅇ을 공부해야하는 이유에 대해 말하는 분들이 정말 많습니다.</p>\n<p>그런데 저는 궁금합니다. 그러면 정말 이런 걸 공부하면 일반적인 문제해결능력이나 사고력이 길러질까요?</p>\n<h2 id=\"왜-지식은-실무로-전이되지-않는가\">왜 지식은 실무로 전이되지 않는가?</h2>\n<h3 id=\"지식은-맥락-의존적이고-특화되어-있다\">지식은 맥락 의존적이고, 특화되어 있다</h3>\n<blockquote>\n<p>특정 상황에서 학습한 것을 새로운 상황에 적용시킬 수 있는 능력인 전이는 학습경험의 유형을 이해하는 데 특히 중요하다. 교육학자는 학생이 특정 교육과정에서 경험한 문제부터 다른 학습문제로, 금년에 배운 것이 직장생활에 필요한 것으로 학습전이가 일어날 것을 바란다. 즉 전이는 특정과제를 '훈련시키는 것'보다 광범위하게 '가르치는 것'이 더 낫다는 믿음에 근거하고 있다.</p>\n<p>[학습과학 - 뇌, 마음, 경험 그리고 교육 : 3장 학습과 전이]</p>\n</blockquote>\n<p>수학이나 논리 같은 지식은 특정 '맥락'에 특화되어 있습니다. 수학을 공부하면 수학 문제를 잘 풀게될 뿐이지, 문제해결능력이 좋아지지 않습니다. 상황과 분야에 따라 해결해야하는 문제도, 방법도 매우 다르기 때문입니다.</p>\n<p>예를 들어 어떤 학생이 혼자서 어려운 무한 등비 급수 문제를 잘 풀어낸다고 합시다. 과연 이 학생은 자동차 공장에서 결함이 자꾸 생기는 이유도 논리적으로 분석해서 풀 수 있을까요? 다시 말해 수학 시험에 특화된 지식을, 자동차 공장으로 '전이(transfer)'시킬 수 있을까요?</p>\n<p>제가 읽어온 3권이 넘는 [인지심리학] 교과서부터 많은 책들은 그렇지 않다고 말합니다. 앞으로 이 다양한 연구를 하나씩 소개할텐데요.</p>\n<h2 id=\"시험과-야생의-차이\">시험과 야생의 차이</h2>\n<blockquote>\n<p>저는 이런 학교 학습과 반대되는 개념으로 '야생 학습'이 있다고 말합니다. 야생 학습의 특징은 아래와 같습니다.</p>\n<ul>\n<li>야생학습은 대부분 협력적이다 (학교 학습은 대부분 개별적이다)</li>\n<li>야생학습은 대부분 비순차적이다(학교 학습은 대부분 공부 순서가 정해져 있다.)</li>\n<li>... (이하 생략)</li>\n</ul>\n<p>[함께 자라기] 12p - 김창준 지음</p>\n</blockquote>\n<p>일단 그 이유를 이해하려면 학교와 실제 현장을 비교해볼 수 있습니다.</p>\n<p>보통 학교에서 배우는 수학이나 논리학 문제는 이미 잘 정식화되어 있습니다. 어떤 값이 주어졌고, 무엇을 구해야하는지 정확하게 알려줍니다. 시험에는 심지어 '범위'도 있죠. 유형을 달달 외우면 문제를 보자마자 척 하고 답을 찾는 경우도 많습니다.\n반면에 실제 현장에서는 문제를 정의하기조차 쉽지 않습니다. 예를 들어 기계에 결함이 있을 수도 있지만. 기계를 잘못 조작했을 수도 있습니다. 한편으로는 결함을 검사하는 장치가 잘못됐을 수도 있죠! \"테스트에는 버그가 없다고 장담할 수 있나?\"라는 말도 있지 않습니까?</p>\n<p>일반적인 학교 교육에서는 혼자 문제를 해결합니다. 시험을 여러 명이 같이 보진 않죠. 하지만 실무 현장에서는 다른 사람에게 협력을 구하지 않으면 기본적인 단서나 정보조차 얻기 쉽지 않습니다.</p>\n<p>시험에서는 정답만 찾으면 끝이지만. 회사에서는 정답을 찾았다고 해도 해결하기 어려울 수 있습니다. 예를들어 정규직 노동자를 해고하고, 비정규직 고용이 늘어나면서... 숙련된 직원들의 암묵지나 경험이 계속 사라지고 있다고 해보죠. 그러면 경영진에게 가서 비싸도 정규직 고용을 늘려야한다고 말해야할까요? 아마 경영진 분들은 그러면 돈이 들지 않느냐. 어떻게든 해결해보라고 하지 않을까요.</p>\n<h3 id=\"원래-지능이-좋은-거지-수학을-공부해서-길러지는-게-아니다\">원래 지능이 좋은 거지, 수학을 공부해서 길러지는 게 아니다</h3>\n<blockquote>\n<p>이 연구는 인재 선발에서 85년간 이뤄진 연구의 실용적이고 이론적인 함의를 요약하고자 한다. 메타 연구에 근거하여, 이 연구는 업무 성과와 훈련 성과를 예측하는 데 있어 19가지 선발 절차의 타당성(valididy), 그리고 일반 정신 능력(GMA)을 비롯해 다른 18가지 선발 절차를 짝지어 조합(combinations)한 방식의 효과를 보여주려 한다. 전체적으로 업무 성과를 예측하는데 가장 타당하고 실용적인 3가지 조합은 GMA와 작업 샘플 평가(평균 타당도 .63), GMA와 <a href=\"https://en.wikipedia.org/wiki/Employment_integrity_testing\">진실성 평가(intergrity test)</a> (평균 타당도 .65), 마지막으로 GMA와 구조화된 면접이었다. (평균 타당도 0.63)</p>\n<p>[The Validity and Utility of Selection Methods in Personnel Psychology: Practical and Theoretical Implications of 85 Years of Research Findings] - Frank L. Schmidt, John E. Hunter</p>\n</blockquote>\n<p>그래도 학자들은 일반적인 문제해결능력이 존재한다는 걸 밝혀내긴 했습니다. 그게 바로 GMA(general mental ability) 보통은 IQ라고 알고 계시는 일반지능 G요인(G factor) 인데요. 심리학자 스턴버그는 이런 일반지능을 3가지로 나눠서 분석지능, 창의지능, 실용지능 3가지가 있다고 주장하기도 했습니다.</p>\n<p>이런 IQ의 상대적 차이는 상당 부분 유전적으로 결정됩니다. (물론 여기에도 많은 논란이 있지만 나중에 또 글로 다루겠습니다) IQ가 높은 사람은 정말 모든 걸 잘 합니다. 영어도 잘 하고, 수학도 잘 하고, 대부분의 업무 수행능력이 좋습니다. 위에 인용문을 보시면 알 수 있듯이 어떤 테스트라도 GMA 즉 일반 지능을 같이 검사하는 게 가장 효과가 좋았습니다.</p>\n<p>심리학자 제프리 밀러는 [스펜트]라는 책에서는 학벌주의가 그래서 비효율적이고 차별적이라고 말합니다. 그냥 IQ테스트를 했으면 가난해도 똑똑한 학생이 뽑힐텐데. 입학사정관이니 스펙이니, 값비싼 대학 등록금으로 부자들만 스펙을 쌓을 수 있는 '과시'성 제도라고 말이죠.</p>\n<p>본론으로 돌아와서요. 이런 이야기를 하는 이유는 \"제가 보니까 수학을 잘 하는 사람들은 문제 해결도 잘 하고 똑똑하던데요?\"라고 말하는 분이 있어서 그렇습니다. 그 분들은 수학을 열심히 공부해서 통찰력이 생긴 게 아닙니다. 그냥 원래 머리가 좋으신 거죠.</p>\n<p>IQ가 높으면 대학도 잘 가고, 수학도 잘합니다. IQ를 통제하고 통계를 내보면 수학을 못하거나 안 좋은 대학을 나온 사람도 IQ만 높으면 일을 잘 합니다.</p>\n<p>반면에 IQ가 낮지만 수학을 잘하거나, 집에 돈이 많아서 좋은 대학에 간 사람은? 딱히 업무 능력이 더 좋아지지 않습니다. 왜냐면 수학에 특화되고, 시험에 특화된 지식을 배웠을 뿐이고. 그건 실무와 아무런 관련이 없으니까요.</p>\n<h2 id=\"만능-천재가-아니라-전문가를-기르는-교육\">만능 천재가 아니라 전문가를 기르는 교육</h2>\n<p>이렇게 이야기하면 세상을 이분법으로 보는 분들은 저를 유전자 결정론자로 밀어붙이면서, 신경 가소성 같은 걸 들먹이실지 모르겠습니다. 하지만 저는 재능이 모든 걸 결정한다고 믿지 않습니다... 그러면 제 생각은 무엇인지 이제 소개해볼게요.</p>\n<h3 id=\"천재가-하지-못하는-것\">천재가 하지 못하는 것</h3>\n<blockquote>\n<p>이는 전통적인 IQ의 개념을 송두리째 바꾼다. 이제 “홍길동은 수학은 잘 못하는데, 영어는 잘 해.”와 같은 표현은 틀린 말이 된다. 뇌는 2차방정식을 열심히 공부하면 2차방정식에 대한 지능이 향상된다. 이와같이 동일 아동이 수학의 어떤 내용은 다른 어떤 내용보다 더 흥미를 가지고 더 열심히 해서 더 높은 지능을 가질 수 있다.</p>\n<p><a href=\"https://21erick.org/column/187/\">[두뇌기반교육에서 길을 찾다!]</a> - 이찬승, 교육을 바꾸는 사람들 대표</p>\n</blockquote>\n<p>저는 쌍둥이입니다. 일란성 쌍둥이는 유전자가 100% 일치하고, 당연히 IQ도 비슷합니다. 그러니 저희는 재능 탓을 하질 못했습니다. 한 명은 되는데, 다른 한 명은 안 된다면... 그건 재능 탓일 수가 없으니까요. 학자들도 쌍둥이를 통해 유전자의 영향을 연구하곤 합니다.</p>\n<p>저희에게 미스터리 아닌 미스터리가 있습니다. 저는 물리학과에 갈 정도로 수학을 잘 하고, 저는 영어도 잘 합니다. 반면에 제 동생은 수학과 영어가 모두 9등급이었습니다.</p>\n<p>어렸을 때에는 큰 차이가 없었습니다. 저희 형제는 둘 다 영어를 못했습니다. 사교육... 유치원 때 눈높이 과외를 받긴 했는데. 선생님이 숙제를 내주셔도 절대 안 했거든요. 그 후로 학교 수업만 대충 들으니 영어 수업을 따라가질 못했습니다. 영어 성적이 30점이었던 걸 기억합니다.</p>\n<p>결정적 분기는 중학생 때였습니다. 저는 당시 열정적인 담임 선생님을 만났는데. 이 분이 공부법에 관심이 많고, 학생 한 명 한 명 멘토링을 해주셨어요. 물론 과학적으로 올바른 방법은 아니었지만. 저는 선생님과 같이 영어 공부를 시작했고, 열심히 교과서를 무식하게 통째로 외웠습니다. 시험은 어찌어찌 잘 봤고. 그 후로 영어 공부를 계속해나갈 수 있었어요.</p>\n<p>저는 그래서 재능을 믿지 않습니다. 머리가 좋은 사람들이 영어나 수학을 쉽게 배우는 건 사실이지만. 태어날 때부터 영어나 수학을 머리에 집어넣고 태어나는 사람은 없습니다. 즉... 어딘가 빠진 게 있다는 소리입니다.</p>\n<h3 id=\"특수한-상황에서-문제-해결-전략을-개선하기\">특수한 상황에서 문제 해결 전략을 개선하기</h3>\n<blockquote>\n<p>불과 네 번째 시간인데 스티브는 이미 절망하기 시작했다. 나는 실험이 두세 달은 지속되리라고 생각했지만, 실험이 시작된 첫째 주 목요일의 일이었다. 스티브의 말을 들어보니 계속하는 것은 그리 좋은 생각 같지 않았다. \"8개 혹은 9개쯤이 제 한계인 것 같습니다.\" 스티브가 말했다. 실험 시간마다 스티브의 말은 그대로 녹음되었다. \"특히 9개는 제가 사용하는 패턴, 그러니까 저만의 방법에 상관 없이 너무 힘듭니다. 어떤 방법을 쓰느냐는 정말 중요하지 않아요. 그저 너무 어려운 것 같습니다.\"</p>\n<p>(...)</p>\n<p>일반적으로 해결책은 '더 열심히 하기'가 아니라 '다르게 하기'다. 즉 방법의 문제다.</p>\n<p>스티브의 경우 22개의 숫자에 도달했 을 때 이런 장벽을 만났다. 스티브는 이들 숫자를 4개의 숫자로 이루어진 4개의 그룹으로 묶은 다음 여러가지 연상 방법을 이용해서 기억했다. 마지막에 남은 숫자 6개는 한 묶음으로 묶어 소리로 기억할 수 있을 때까지 읖조렸다. 그러나 22개를 넘어갈 방법을 찾을 수가 없었다. 4개씩 짝지은 4개의 묶음을 외우려고 할 즈음 순서가 헷갈렸기 때문이다. 결국 그는 3개 묶음과 4개 묶음을 모두 활용하는 아이디어를 생각해냈고. 덕분에 4개 묶음 4개, 3개 묶음 4개, 6개 짜리 암송 묶음 하나를 이용하여 최대 34개 숫자까지 외울 수 있는 돌파구를 마련했다.</p>\n<p>[1만 시간의 재발견 - 노력은 왜 우리를 배신하는가] - 안데르스 에릭슨, 로버트 풀 지음, 강혜정 옮김</p>\n</blockquote>\n<p>앤더스 에릭슨은 전문가들이 어떻게 의도적 수련을 해서 대가가 되었는지 연구해온 학자입니다. 에릭슨은 초창기에 '기억력'을 연구했는데요. 당시에 작업 기억은 7개가 한계라는 이른바, 매직 넘버 7 이론이 득세하고 있었습니다. 어떤 학자는 그것보다 더 적은 4개 밖에 안 된다고 주장하기도 했죠.</p>\n<p>하지만 그러면 궁금한 게 생깁니다. 옛날 그리스 시절부터 '기억술'이라는 게 있었습니다. 기억의 궁전을 만든다던가, 시를 짓는다던가 하는 방식으로... 수 십 명이 넘는 사람의 얼굴과 이름을 한 번에 기억하거나. 복잡한 책의 내용을 줄줄 외우는 놀라운 기술이 실제로 존재해왔습니다. 이런 기억술은 실제로 효과가 있다는 게 증명되었습니다.</p>\n<p>에릭슨은 그래서 실험자를 아무나 한 명 데려다가. 이런 기억술을 가르치고 무작위 숫자를 외우게 했습니다. 예를 들어 3813798633951162343137089813756 같은 숫자를 한 번 듣고 외우는 겁니다. 이 실험에 참가한 사람이 앞에서 본 '스티브' 씨였습니다.</p>\n<p>이 연습의 성과는 놀라웠습니다. 스티브 펠룬씨는 결국 82개의 무작위 숫자를 단 한 번 듣고 외울 수 있었습니다. 옛날이었으면 [세상의 이런 일이]나 [스타킹], 요즘이면 [뇌가 섹시한 남자] 같은 곳에 나올 수 있지 않을까요?</p>\n<p>중요한 건 전략입니다. 우리는 '특수한' 문제를 해결하는 전략을 배우고 개선해나갈 수 있습니다.</p>\n<p>물론 스티브 펠룬 씨는 이 실험을 통해 일반적인 문제해결 능력...을 얻지 못했습니다. 시를 외우기는 커녕. 다른 기억력 스포츠도 전혀 못했어요. 사람 얼굴을 외우거나 카드 순서를 외우는 일은 못했습니다. 이는 전이가 어렵다는 것을 보여주는 대표적인 연구 중에 하나로 인용되곤 합니다.</p>\n<p>하지만 더 큰 교훈은 따로 있습니다. 앞으로 새로운 문제를 만나고 절망하더라도. 계속해서 새로운 전략을 개발해나갈 수 있다는 거죠. 그리고 이런 전략은 남에게 알려줄 수도 있습니다.</p>\n<p>에릭슨 씨는 새로운 실험자 다리오 도나텔리씨를 데려왔어요. 스티브씨가 사용한 전략을 알려줬더니 이 분은, 더 빠르게 성장할 수 있었습니다. 몇 년이 지나고 다리오씨는 스티브씨의 기록을 뛰어넘어 100개가 넘는 숫자를 한 번만 듣고 외울 수 있게 됐습니다.</p>\n<h3 id=\"서로-다른-걸-뒤섞고-비교하고-일반화하기\">서로 다른 걸 뒤섞고 비교하고 일반화하기</h3>\n<blockquote>\n<p>체육 시간에 여덟 살짜리 아이들 한 무리가 바구니에 콩 주머니 던져넣기 연습을 했다. 그 중 반은 바구니에서 90센티미터 떨어진 곳에서 주머니를 던졌다. 나머지 반은 60센티미터와 120센티미터 떨어진 곳에서 번갈아 주머니를 던졌다. 12주 후 아이들은 90센티미터 떨어진 곳에서 콩 주머니 던져넣기 시험을 보았다. 이 중 월등히 뛰어난 성적을 거둔 아이들은 60센티미터와 120센티미터를 오가며 연습하고 <strong>90센티미터 떨어진 곳에서는 한번도 연습하지 않은</strong> 아이들이었다. (R, Kerr &#x26; B. Booth, Specific and varied practice of motor skill, Perceptual and Motor Skill 46 (1978)</p>\n<p>[어떻게 공부할 것인가 : 3장 뒤섞어서 연습하라] - 헨리 뢰디거, 마크 맥대니얼, 피터 브라운 지음, 김아영 옮김</p>\n</blockquote>\n<p>이 연구결과는 충격적입니다! 왜냐하면 90센티라는 상황 특화된 연습을 한 친구들이 오히려 실력이 떨어졌다는 거 아니에요?</p>\n<p>여기에는 중요한 함의가 있습니다. 우리는 실제 맥락과 비슷하지만 '일반화' 될 수 있는 지식을 배우는 게 좋습니다.</p>\n<p>예를 들어 에러가 났을 때 그 상황에만 쓸 수 있는 지식만 익힐 수도 있습니다. 이렇게 경력이 10년 쌓이면 버그를 잘 잡게 되고 유능한 프로그래머라는 소리를 들을지 모르죠.</p>\n<p>하지만 일반화해보면 어떨까요? 나는 어떤 에러를 자주 내는지? 여기에 어떤 패턴이 있는지? 예를 들어 method not found나 variable undefined, file does not exists 같은 에러는 다른 에러지만 비슷한 특성이 있습니다. 다들 이름에 오타를 내거나, 정의를 안 했거나, import를 안 해줬을 때 나는 에러라는 거죠.</p>\n<p>저는 이런 식으로 다양한 전략을 찾고 일반화했습니다. 프로그래밍 언어를 하나 배우면 다른 것도 비슷해서 배우기 쉽다고 합니다. 하지만 정말 그럴까요? 함수형 언어는 좀 많이 특이하고 당황스럽습니다. 저는 그래서 다양한 언어를 배우면서 비교해보곤 합니다. 공통점과 차이점을 찾아볼 수 있죠. 그러면 다르게 생겼지만 비슷한 '공통 원리'를 찾을 수도 있고요. 낯설고 차이가 있는 부분에 집중해서 공부할 수도 있습니다.</p>\n<p>그래서 학자들은 한 가지를 집중해서 배우는 것보다, 다양한 걸 섞어서 배우는 게 좋다고 합니다. 한 연구에서는 간단한 인공어 에스페란토를 먼저 1년 배우고 프랑스어를 나중에 1년 배운 학생들이, 프랑스어만 2년 공부한 학생보다 성적이 좋았습니다.</p>\n<p>비슷하게 C와 Python을 같이 배운 학생들이, 같은 시간 동안 하나만 집중해서 배운 학생보다 프로그래밍을 잘 했습니다. React와 Svelte를 배운 사람은 어떨까요? 프런트와 백엔드를 같이 배운 사람은? 궁금해집니다.</p>\n<p>여기에 힌트가 있습니다. 수학이나 논리학을 공부하면 자연스럽게 문제해결능력이 길러질거라는 건 환상입니다. 그보다는 실제로 내 업무 속에서 논리적이거나 추상화해서 해결해야하는 문제를 찾고, 나름대로 정식화해서 해결하는 연습을 해보는 게 좋습니다. 그러면서 수학이나 논리학을 공부하다가 '연결'할 수 있거나 '통찰'을 찾아서 빌려올 수도 있겠죠. 그러다보면 수학 공식을 하나도 쓰지 않고도 '수학적'으로 문제해결을 할 수 있을지도 모릅니다.</p>\n<h3 id=\"실제로-써먹는-교육\">실제로 써먹는 교육</h3>\n<blockquote>\n<p>교수 구성요소가 탈맥락화되었을 때, 학습자는 종종 \"지금 너희는 이것을 이해하지 못하겠지만, 나중에 이것는 너희에게 매우 중요할 것이다.\"라는 충고를 듣는다. 결과적으로 자료에 대해 학습하고자 하는 동기가 크게 감소된다. 더욱이 학습자가 소용하는 맥락도 알지 못한 채 많은 구성요소 스킬을 반드시 기억해야만 할 때, 학습자는 많은 경우 연상 기억을 재분류해야만 하고, 전체 문제를 다루게 되었을 때 기억을 잊어버리거나, 정보의 적절성을 인지하지 못하는 경향이 나타난다. 결국, 학습자는 필요한 정보를 사용해야 할 때 이를 인출할 수 없게 된다.\"</p>\n<p>[교수의 으뜸원리 - 효과적, 효욜적, 매력적 교수설계] M. David Merrill 지음. 임규연, 김영수, 김광수, 이현우, 정재삼 공역</p>\n</blockquote>\n<p>전이를 시키려면 전이를 염두에 두고 학습하고 가르쳐야합니다. 논리학이나 수학을 배우면 자연스럽게 문제해결능력이 길러지는 일은 없습니다. 왜냐하면 논리학이나 수학에서 쓰는 기호는 실제 문제 상황이나 사고방식과 다르니까요.</p>\n<p>철수와 영희가 나오는 이상한 실생활 응용문제를 만들어야 한다는 게 아닙니다. 진짜 문제를 풀어야한다는 거죠.</p>\n<p>프로그래밍을 공부하는 분들은 이따금 수학의 쓸모를 마주치게 됩니다. 예를 들어 게임 그래픽에서 진동을 표현하기 위해 사인 함수를 쓴다던가, 머신러닝에서 온갖 미적분이며 수리 통계학이 나오는 것이 그렇습니다. 그 외에 간단한 사칙 연산 같은 것들 말이죠. 학교에서 열심히 수학을 공부할 걸...이라고 생각하시기도 하지만 좀 이상합니다. 학교에서 이렇게 코딩으로 수학을 배워본 적이... 없습니다.</p>\n<p>저는 고등학생 분을 코칭한 적이 있습니다. 이 분은 인공지능을 배우고 싶어했는데요. 딥러닝 책을 공부하고 실습하는데 시그모이드 함수가 나왔습니다. 잘 모르면 시그모이드 함수가 매우 무서울 수 있죠.</p>\n<p>하지만 저는 같이 numpy와 matplotlib로 지수함수를 그려서 보여줬습니다. x 값이 변화함에 따라서 y 값이 변하는 걸 짚어주고. 이제 1 / e^x 의 그래프와 1 / 1 - e^x 그래프를 차례대로 그려보고요. 기울기나 상수를 바꿔가면서 그래프 모양이 변하는 과정을 관찰했습니다. 동시에 이런 게 머신러닝 모델을 학습시키는데 어떤 의미가 있는지 이야기해봤습니다.</p>\n<p>저는 블럭코딩으로 거북이를 움직이거나 알고리즘 퀴즈를 푸는 것보다, 이런 게 진짜 코딩 교육이 아닐까 싶습니다. 수학이 쓸모 있는 부분에서 쓸모를 찾고, 실제 상황에서 써보는 겁니다.</p>\n<p>이런 수학은 저희가 학교에서 배우는 수학과는 다를 겁니다. 배배 꼬아놓은 문제도 없고. 이상한 유형도 없습니다.</p>\n<p>한편으로 이런 수학이 필요 없는 상황도 많을 겁니다. 사람들은 이런 수학이 '쓸모' 있는 일부 사례만 이야기하면서, \"누구나 수학을 배워야 한다\"고 주장합니다. 저는 \"해야한다\"는 말은 독단의 단서라고 생각하곤 하는데요.</p>\n<p>앞서 자동차 공장 사례에서 보신 것처럼 야생에서는 중요한 기술이 더 많습니다. 그리고 통찰이 꼭 수학에서만 오리라는 법도 없습니다.</p>\n<p>마지막으로 제가 전에 트위터에 썼던 글을 옮기면서 마치겠습니다.</p>\n<blockquote>\n<p>우리는 그림 그리는 프로그래머, 영양학에 관심이 많은 프로그래머, 운동하는 프로그래머, 춤추는 프로그래머, 역사학을 전공한 프로그래머, 마트에서 일해본 프로그래머가 필요하다.</p>\n</blockquote>\n","data":{"tocTree":[{"depth":2,"text":"얄팍한 편견들","id":"얄팍한-편견들","i":0,"children":[{"depth":3,"text":"주입식 교육의 한계","id":"주입식-교육의-한계","i":1,"parent":true,"children":[]},{"depth":3,"text":"ㅇㅇ을 공부해야하는 이유? : 형식 도야 이론","id":"ㅇㅇ을-공부해야하는-이유--형식-도야-이론","i":2,"parent":true,"children":[]}]},{"depth":2,"text":"왜 지식은 실무로 전이되지 않는가?","id":"왜-지식은-실무로-전이되지-않는가","i":3,"children":[{"depth":3,"text":"지식은 맥락 의존적이고, 특화되어 있다","id":"지식은-맥락-의존적이고-특화되어-있다","i":4,"parent":true,"children":[]}]},{"depth":2,"text":"시험과 야생의 차이","id":"시험과-야생의-차이","i":5,"children":[{"depth":3,"text":"원래 지능이 좋은 거지, 수학을 공부해서 길러지는 게 아니다","id":"원래-지능이-좋은-거지-수학을-공부해서-길러지는-게-아니다","i":6,"parent":true,"children":[]}]},{"depth":2,"text":"만능 천재가 아니라 전문가를 기르는 교육","id":"만능-천재가-아니라-전문가를-기르는-교육","i":7,"children":[{"depth":3,"text":"천재가 하지 못하는 것","id":"천재가-하지-못하는-것","i":8,"parent":true,"children":[]},{"depth":3,"text":"특수한 상황에서 문제 해결 전략을 개선하기","id":"특수한-상황에서-문제-해결-전략을-개선하기","i":9,"parent":true,"children":[]},{"depth":3,"text":"서로 다른 걸 뒤섞고 비교하고 일반화하기","id":"서로-다른-걸-뒤섞고-비교하고-일반화하기","i":10,"parent":true,"children":[]},{"depth":3,"text":"실제로 써먹는 교육","id":"실제로-써먹는-교육","i":11,"parent":true,"children":[]}]}]},"permanlink":"/why-not-transfer/","tags":["학습전이","문제해결능력","재능","전략"]},{"slug":"fixation-to-insight","frontmatter":{"title":"고착에서 빠져나와 창의적 통찰을 얻는 법","excerpt":"한 가지 편견이 굳어지면, 새로운 생각을 못하게 되곤 하죠. 창의성 연구를 토대로 고착에서 빠져나와 창의적으로 문제를 해결하는 방법을 이야기해봅니다.","date":"2021-09-07T12:30:45.070457","author":"탐정토끼(Taehee Kim)","tag":"창의성, 고착, 통찰, 닻, 개방성, 연결"},"html":"<p>트위터에서 질문에 답이나 조언을 드릴 때마다 블로그에 글을 써보려고 합니다. 오늘은 이런 고민을 하는 트친님을 보았습니다.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ko\" dir=\"ltr\">창의성 연구에 그런 &#39;고착&#39;(한 가지 편견이 굳어져서 다른 생각을 못하는 것)을 막아주는 법들이 나오는데. 몇 가지 알려드릴까요?</p>&mdash; 탐정토끼 (Taehee Kim) (@stelo_kim) <a href=\"https://twitter.com/stelo_kim/status/1435018116090589188?ref_src=twsrc%5Etfw\">September 6, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>저는 오래 전부터 많은 창의성 책과 연구를 읽어왔습니다. 창의성 연구들은 이런 문제를 '고착'이라 불러요. 한 가지 편견이 머리에 박히니까, 새로운 생각을 떠올리지 못하는 겁니다.</p>\n<h2 id=\"창의성은-문제를-해결하기-위해-필요해요\">창의성은 문제를 해결하기 위해 필요해요</h2>\n<h3 id=\"옛날-연구--다양한-아이디어-떠올리기\">옛날 연구 : 다양한 아이디어 떠올리기</h3>\n<p>그래서 초창기 창의성 연구에서는 '아이디어를 다양하고 많이 떠올리는 게' 중요하다고 생각했습니다. 예를 들어 브레인 스토밍 같은 방법이 있는데요. 생각나는 방법을 검열하지 말고 모두 적어보는 겁니다. 이런 이야기 어디서 들어보시지 않았나요?</p>\n<p>성격5요인 중에 개방성이 높은 사람은 이런 걸 잘 합니다. 개방적인 사람들은 빨강 -> 피 -> 육식동물 -> 상어를 연상하거나. 망치를 쓰는 50가지 방법 같은 걸 떠올 릴 수 있습니다. 우리는 보통 이런 게 창의적인 사람이라고 생각하죠!</p>\n<h3 id=\"최신-연구--문제해결을-위한-창의성\">최신 연구 : 문제해결을 위한 창의성</h3>\n<p>하지만 요즘 창의성을 연구하는 학자들은 이런 관점에 의문을 품었습니다. 엉뚱한 아이디어가 성공하는 경우도 있지만, 실패하는 경우도 많죠. 그리고 여러 아이디어를 내도 그게 실제로 통하지 않으면 아무 소용이 없습니다.</p>\n<p>그래서 학자들은 '문제해결'의 관점에서 창의성을 다시 보기 시작했습니다. 예를 들어 수학 문제를 푼다면 초보자는 잘못된 방법을 쓰고 막히면서 '고착'될 겁니다. 안 되는 방법을 붙잡고 몇 시간 동안 끙끙 거리겠죠. 하지만 숙련된 문제해결자는 다양한 개념을 활용해서 창의적으로 문제를 풀어낼 수 있어요.</p>\n<h2 id=\"창의성의-3가지-경로--연결--절망--모순\">창의성의 3가지 경로 : 연결 / 절망 / 모순</h2>\n<p>그러면 어떻게 해야 고착(fixation)에서 벗어나서, 통찰(insight)을 었을 수 있을까요? 전문가 의사결정 연구의 선구자 게리 클라인씨는 책 [통찰]에서 창의적 통찰은 3가지 경로로 얻을 수 있다고 분류했습니다. 이건 단순히 주관적으로 끌어낸 분류가 아니라 다양한 사례를 일관되게 분류할 수 있는 연구 기법을 통해 정련된 것들이에요.</p>\n<ol>\n<li>연결 경로 : 이미 알고 있는 지식을 새로운 방식으로 연결하기</li>\n<li>모순 경로 : 모순을 설명하기 위해 새로운 틀을 만들고, 새로운 개념을 배우기</li>\n<li>창의적 절망 경로 : 막다른 골목으로 이어지는 잘못된 닻을 버리기</li>\n</ol>\n<p>다음 인포그래픽을 한 번 보시죠.</p>\n<p><img src=\"http://image.kyobobook.co.kr/images/book/illustrate/442/i9788952772442.jpg\" alt=\"\"></p>\n<p>아직 막연하시죠? 이 방법들을 실제 프로그래밍의 사례 속에서 하나씩 이야기해보겠습니다. 이제 매우 많은 방법을 소개드릴텐데요. 카탈로그처럼 생각해주세요. 마지막에 또 이야기하겠지만, 한 번 빠르게 구경해보시고 그 중에 흥미로운 친구만 쏙쏙 뽑아서 써보시면 좋습니다.</p>\n<h3 id=\"익숙한-닻을-버리고-거리를-두기\">익숙한 닻을 버리고, 거리를 두기</h3>\n<p>닻(Anchor)은 배가 떠내려가지 않게 땅에 걸어두는 아주 무거운 추입니다. 사람 마음에서 닻은 좋은 기준점이 되기도 하지만, 다르게 보면 '고착'의 상징이기도 합니다. 배가 출항해야하는데 항구에 묶여서 못 나간다고 생각해보세요! 그래서 심리학자들은 이런 현상을 두고 '닻 내리기 효과'라는 이름을 붙이기도 했어요.</p>\n<p>코딩을 할 때도 비슷한 일을 겪곤 합니다. 당연히 될 것 같은 게 안 되는 거에요. 에러가 나고 안 돌아가는데 이게 왜 안 되는 건지 모르겠습니다. 내가 아는 방법을 계속 써보는데 구현도 안 되고 막힙니다. 막다른 길에 몰립니다. 이걸 창의적 절망이라 합니다.</p>\n<p>여기서 빠져나오려면 닻을 버려야 합니다. 거리를 둬야 합니다.</p>\n<ol>\n<li>일단 물리적 거리를 둘 수 있습니다.\n<ul>\n<li>문제가 안 풀린다면... 컴퓨터에서 손을 떼세요.</li>\n<li>의자에서 일어나 커피라도 마시고 오세요.</li>\n<li>산책을 하고 오셔도 좋습니다.</li>\n<li>안 풀리는 문제를 붙잡고 있지 말고, 머리에서 문제를 비워버리세요.</li>\n<li>명상을 하면서 문제를 가만히 바라보고 있는 것도 좋은 방법입니다.</li>\n</ul>\n</li>\n<li>시간적으로 거리를 둘 수 있습니다.\n<ul>\n<li>며칠 동안 다른 일을 하다가 문제를 다시보니... 놀랍게도 해결책이 떠오르신 경험이 있지 않나요?</li>\n<li>아니면 자고 일어났더니 문제가 풀리기도 합니다. 왜냐면 사람은 자면서 기억을 정리하고, '익숙하지만 잘못된 방법'을 '까먹기' 때문입니다.</li>\n</ul>\n</li>\n<li>지금 내가 당연하게 생각하는 전제는 뭘까? 믿음이나 가정을 쭉 적어보고 의심해보세요.\n<ul>\n<li>이 가정이 틀렸다면? 이 가정이 맞는지는 어떻게 검증할 수 있을까요?</li>\n</ul>\n</li>\n<li>TDD에서 쓰는 '당연하게 테스트를 통과하는 구현'을 만들어 보는 것도 숨겨진 가정을 찾기 위한 방법입니다.\n<ul>\n<li>예를 들어 서버를 만든다면 DB를 쓰지 말고 바로 response로 하드코딩한 값을 돌려주게 해보세요.</li>\n<li>저는 어제 TDD 모임에서 board를 추가하는 테스트를 만들 때. 그냥 보드의 jsx를 하드코딩하고 찾아봤습니다. 그런데 찾을 수 없다고 에러가 나는 거에요!\n<ul>\n<li>알고보니 다른 테스트에서 render를 한 번 더 했었는데요. dom 의 상태가 바뀌면서 에러가 난 거였습니다. render를 하나만 남기니까 해결되더라고요. 만약에 기능을 처음부터 제대로 구현했다면, 다른 테스트에 문제가 있다는 걸 모르고 삽질을 했겠죠.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>익숙하지 않은 환경을 만드는 것도 방법입니다.\n<ul>\n<li>예를 들어 평소에 쓰지 않는 폰트나, 가독성이 떨어지는 폰트로 바꿔보세요. 이러면 같은 글이나 코드도 새롭게 볼 수 있습니다.</li>\n<li>전자 문서로 읽던 글을 인쇄해서 읽어보세요.</li>\n<li>아니면 글쓰기 책들이 조언하듯이 눈으로만 읽지 말고 소리내어 읽어보세요.</li>\n</ul>\n</li>\n</ol>\n<p>이런 방법을 배워도 써먹지 않으면 소용이 없겠죠. 몇 가지를 골라서 한 번 직접 적용해보면 어떨까요? 앞으로 막히고 답이 보이지 않을 때... 어떻게 해볼지 계획을 세워보세요. 사람은 미리 결심을 하고 계획을 세우면 더 잘 지키게 됩니다.</p>\n<h3 id=\"새로운-틀을-만들고-새로운-개념을-배우기\">새로운 틀을 만들고, 새로운 개념을 배우기</h3>\n<p>하지만 이렇게 익숙한 시선을 버린다고 해도... 그게 끝은 아닙니다. 문제의 원인을 안다고 해결책까지 알게 되는 건 아니니까요. 여전히 답이 안 보이실 수도 있어요.</p>\n<p>문제를 해결하려면 새로운 시선을 배워야 합니다. 만약에 누군가에게 배울 수 없다면 직접 해결책을 찾아야해요.</p>\n<ol>\n<li>풀이된 예제나 답지를 보면서, 어떤 단계로 문제를 푸는지 분석해봅니다.\n<ul>\n<li>다른 사람들은 같은 문제를 어떻게 풀었는지 찾아볼 수도 있죠.</li>\n<li>만약 답지나 다른 사람들의 풀이를 찾을 수 없다면, 물어볼 수 있는 사람이나 자료를 찾아보세요.</li>\n</ul>\n</li>\n<li>새로운 책을 읽거나, 낯선 개념을 접해보면 좋습니다.\n<ul>\n<li>예를 들어 다른 언어나 프레임워크를 배워보실 수 있죠.</li>\n<li>Java만 써왔다면 Python이나 Clojure 같은 함수형 언어를 배워보세요.</li>\n<li>모놀리식 서비스만 만들어왔다면 마이크로서비스를 접하고, 사이드 프로젝트를 해보세요.</li>\n</ul>\n</li>\n<li>주위를 새로운 사람이나 환경으로 채워봐도 좋습니다. 이직을 할 수는 없어도, 트위터에서 특이한 사람들을 팔로우해보세요.\n<ul>\n<li>다른 사람과 같이 짝 프로그래밍을 해보세요. 다른 사람은 나와 다른 시선으로 보고. 내가 보지 못하는 걸 볼 수 있습니다.</li>\n<li>코치나 선생님, 현명한 시니어에게 내 코드를 보여주고 멘토링을 받아보세요.</li>\n<li>회사에 코드 리뷰를 도입하는 것도 방법입니다.</li>\n<li>다만 리뷰해 주는 사람도 자기 사고과정을 분석하고 피드백을 주는 방법을 배우지 않으면 큰 효과가 없을 겁니다...</li>\n</ul>\n</li>\n<li>같은 문제나 과제를 다양한 방법으로 구현해보세요.\n<ul>\n<li>다른 인터페이스나 구조로 리팩토링해보고 장 단점을 따져보세요.\n<ul>\n<li>친구나 동료에게 보여주고 의견을 물어봐도 좋습니다.</li>\n<li>이렇게 만든 걸 나중에 버려도 됩니다. 통찰을 얻는 것만으로도 충분해요.</li>\n</ul>\n</li>\n<li>기회가 있으면 다른 스타일의 방법론이나 프레임워크, 언어로 구현해보세요. (ex: for문을 map, filter, reduce로)</li>\n<li>자동화 테스트를 배워보세요. 테스트가 있으면 망가트릴까 걱정하지 않고, 자유롭게 리팩토링을 할 수 있습니다.</li>\n</ul>\n</li>\n<li>하지만 생각보다 자주 답을 찾을 수 없는 신기한 '모순'과 마주치고는 합니다.\n<ul>\n<li>일단 이런 궁금증을 질문으로 적어두세요. 목록을 만들거나 노션 같은 곳에 쌓아두세요.</li>\n<li>대부분 계속 새로운 지식을 접하다보면 '우연히' 해법과 마주치게 될 겁니다.</li>\n</ul>\n</li>\n<li>여전히 답을 찾을 수 없다고요? 축하합니다. 이제 새로운 통찰이 필요할 것 같군요.</li>\n</ol>\n<p>직접 가설을 세우고 실험하면서 새로운 '틀'을 만들어낼 때가 되었습니다.</p>\n<h3 id=\"적응하고-변화하는-전문가\">적응하고 변화하는 전문가</h3>\n<p>옛날 학자들은 전문가가 단순히 지식이 많은 사람이라 생각했습니다. 많은 지식과 도구를 가지고 있으니, 문제를 척척 풀어낼 수 있다고 생각한 거죠. \"아, 이거 뻔하네. 전에 봤던 문제랑 비슷하네~\" 하고 술술 손이 문제를 풀어버리는 천재처럼 생각한 겁니다.</p>\n<p>그런데 이런 전문가들은 문제가 있었습니다. 새로운 패러다임이 등장하면 시대에 뒤떨어지고 적응하질 못했습니다. 새로운 문제를 주면 나는 이런 거 해본 적이 없다고 풀질 못합니다.</p>\n<p>IT 업계, 특히 요즘 프런트엔드는 빠르게 변하고 있습니다. HTML5와 ES6, 수 많은 툴체인과 프레임워크가 쏟아져 나오고 있죠. 누군가는 여기서 기회를 찾지만, 어떤 회사나 팀은 적응하지 못하고 망해버리기도 합니다.</p>\n<p>요즘 학자들은 새로운 전문가를 찾아 나섰습니다. 낯설고 처음 보는 문제에도 빠르게 적응하고 해결하는 전문가들이 있습니다. 새로운 프로그래밍 언어나 프레임워크도 금방 배우고요. '학습'의 달인이자, 전에 보지 못했던 방식으로 문제를 척척 해결하는 전문가들! 그래서 이런 분들의 능력을 '적응적 전문성'이라고 부릅니다.</p>\n<p>이런 전문가들은 맹목적으로 최신 기술이나 트렌드만 쫓지 않습니다. 서로 다른 기술의 장, 단점이나 '트레이드 오프'를 파악하고요. 상황에 맞게 필요한 기술을 사용하는 '유연함'을 갖추고 있습니다.</p>\n<h3 id=\"이미-알고-있는-지식-연결하기\">이미 알고 있는 지식 연결하기</h3>\n<p>세상에 새로운 지식은 없다는 말이 있습니다. 많은 것들이 변하지만, 변하지 않는 것들도 있습니다. 오히려 새로운 기술은 익숙한 기술을 새로운 방식으로 조합하고 있다고 할 수도 있습니다.</p>\n<p>HTML과 HTTP는 물리학자 팀 버너스리가 1989년 CERN이라는 연구소에서 만들었습니다. CERN은 힉스입자를 발견했던 거대 강입자 충돌기(LHC)가 있는 곳이기도 하죠. 원래 논문의 참고문헌과 링크를 쉽게 돌아다니고 공유하기 위해 만들었는데. 이제 수 많은 쇼핑몰이며 웹 사이트가 이 레거시 위에서 돌아갑니다.</p>\n<p>HTML5가 나오고 이제 HTTP 2.0과 HTTP3.0 이야기도 나오고 있지만... 기본 틀은 아직도 크게 변하지 않았습니다. 그래서 React를 하더라도 여전히 HTML이나 CSS 같은 마크업에 대해 잘 이해해야 합니다.</p>\n<p>이런 예시는 끝 없이 많습니다. 기존에 있던 것에서 영감을 받아 새로운 것이 탄생합니다. 생물학을 전공한 앨런 케이는, 세포들이 모여서 복잡한 일을 하는 것에 감명 받고 객체지향 프로그래밍을 만들었습니다. 객체지향 프로그래밍은 DDD에 영향을 줬고, 이제 마이크로서비스가 그 뒤를 이어가고 있죠.</p>\n<p>그러면 우리는 익숙한 걸 통해 새로운 것을 이해하고, 조합해서 새로운 걸 만들 수 있을까요?</p>\n<ol>\n<li>공부를 할 때 항상 전에 배운 것과 연결하려 해봅시다.\n<ul>\n<li>새로운 기술을 배우면 공통점과 차이점을 비교해보세요. 서로 장, 단점은 무엇이고 어떤 트레이드 오프가 있는지 찾아보세요. (트레이드 오프가 어떤 뜻인지 모른다면 인터넷을 찾아보세요!)</li>\n</ul>\n</li>\n<li>추상적인 말이나 표현을 보면 구체적인 내 경험을 떠올려보세요. 예를 들어 배포 자동화나 CI/CD에 대한 글을 읽는다면. AWS에 배포하고 환경을 설정하려 삽질했던 경험을 떠올려보세요.</li>\n<li>추상적인 개념을 다양한 곳에 적용해보고, 패턴을 찾아보세요.\n<ul>\n<li>테스트 자동화, 배포 자동화, script 자동화... 반복적인 타이핑을 자동화할 수 없을까요? Vim이나 단축키를 배워보세요. 뭔가 패턴이 있는데 귀찮게 반복되는 일이라면 자동화할 수 있는 경우가 많습니다.</li>\n<li>새로운 곳에 적용해서, 나만의 방법을 만들어보세요. 앞에서 거리두기를 이야기했었죠? 물리적 거리를 두는 방법은 또 뭐가 있을까요?</li>\n</ul>\n</li>\n<li>내가 아는 다른 분야나 지식을 비유해서 적용해보세요.\n<ul>\n<li>예를 들어 객체지향을 팀이나 조직에 비유해보면, 동아리를 운영했던 경험이 아키텍처 설계에 통찰을 줄 수도 있습니다.</li>\n<li>함수형 프로그래밍은 수학의 카테고리 이론을 적용해서 만들었습니다. 관계형 DB는 집합론을 이용해 만들었습니다.</li>\n<li>한 대학 입시 관련 시스템은 택배 시스템에서 아이디어를 얻어서 만들었다고 합니다.</li>\n</ul>\n</li>\n<li>뭘 배울 때마다 노트나, 노션 등에 정리해두고 시간 날 때마다 돌아보세요. \"내가 이런 것도 배웠었네? 여기에 써먹을 수 없을까?\"라는 통찰이 떠오를 겁니다.\n<ul>\n<li>저는 사놓고 쌓아둔 책의 목차를 자주 살펴봅니다. 책을 펼치면 마침 딱 필요했던 지식이 있는 경우도 많았어요.</li>\n<li>안키 같은 플래시 카드 앱으로, 몇 달 전에 배운 걸 복습해보셔도 비슷한 효과를 보실 수 있어요.</li>\n</ul>\n</li>\n<li>여러가지를 번갈아가면서 공부해보세요. 뒤섞이면 연결이 더 잘 일어납니다.\n<ul>\n<li>예를 들어 프런트와 백엔드를 같이 공부해볼 수 있어요. 저는 백엔드에서 많이 쓰이는 DDD에서 상태 관리를 테스트하는 방법을 찾았습니다. 스벨트 웹과 스벨트 네이티브가 같이 쓸 수 있는 공통 모듈을 만드는 법도 깨달을 수 있었습니다.</li>\n<li>또 다른 예로 영어 문법을 공부하다가 프로그래밍 언어를 공부하는데 도움이 되는 통찰을 찾을 수도 있습니다. 코칭을 받는 어떤 분은 CSS를 단어장으로 만들어서 외우고 계세요!</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"하나씩-적용해보면서-시행착오로-개선해나간다\">하나씩 적용해보면서 시행착오로 개선해나간다</h2>\n<p>와, 정말 많은 방법들이 있죠? 이 모든 걸 한 번에 다 배우고 적용하실 수는 없을 거에요. 앞에서도 말씀드렸지만 한 두 가지씩 내 삶에 직접 적용해보세요. 실제로 써보시면 여러 문제가 생길 겁니다. 이런 문제를 해결할 방법을 하나 둘 씩 개발하고 배워보시면 점점 많은 문제를 새로운 방법으로 푸실 수 있을 거에요.</p>\n<p>제가 전에 썼던 <a href=\"https://twinstae.github.io/daily-review-guide/\">일일회고 가이드</a>를 참고하셔도 좋겠죠. 매일 꾸준히 회고를 적어보고, 동료나 친구와 공유해보세요.</p>\n<p>창의적으로 문제를 해결하는 법에 대해 더 많은 걸 알고 싶으시거나, 연구와 근거가 궁금하시다면, 제가 트위터에 썼던 책 추천 타래를 읽어보세요.</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ko\" dir=\"ltr\">한 때에는 탐정이나 창의적 사고가 궁금해서 관련 책을 많이 읽었어요. 기억 나는 걸로는 [통찰], [틀 안에서 생각하기]나 [지그재그]나 [생각의 재구성] [블라인드 스팟] 같은 책이 추천할 법 하네요.<br><br>예를 들어 통찰은 인튜이션 등 전문가의 직관 연구로 유명한 게리 클라인이 쓴 책인데요.</p>&mdash; 탐정토끼 (Taehee Kim) (@stelo_kim) <a href=\"https://twitter.com/stelo_kim/status/1424575127874723840?ref_src=twsrc%5Etfw\">August 9, 2021</a></blockquote>\n<p>그 외에도 궁금하신 게 있으시면 댓글로 적어주세요. 도움이 되셨다면, 멍드립님이 만드신 <a href=\"https://homete.driip.me/stelo_kim\">호메테</a>에서 저를 칭찬해주실 수도 있어요 :)</p>\n","data":{"tocTree":[{"depth":2,"text":"창의성은 문제를 해결하기 위해 필요해요","id":"창의성은-문제를-해결하기-위해-필요해요","i":0,"children":[{"depth":3,"text":"옛날 연구 : 다양한 아이디어 떠올리기","id":"옛날-연구--다양한-아이디어-떠올리기","i":1,"parent":true,"children":[]},{"depth":3,"text":"최신 연구 : 문제해결을 위한 창의성","id":"최신-연구--문제해결을-위한-창의성","i":2,"parent":true,"children":[]}]},{"depth":2,"text":"창의성의 3가지 경로 : 연결 / 절망 / 모순","id":"창의성의-3가지-경로--연결--절망--모순","i":3,"children":[{"depth":3,"text":"익숙한 닻을 버리고, 거리를 두기","id":"익숙한-닻을-버리고-거리를-두기","i":4,"parent":true,"children":[]},{"depth":3,"text":"새로운 틀을 만들고, 새로운 개념을 배우기","id":"새로운-틀을-만들고-새로운-개념을-배우기","i":5,"parent":true,"children":[]},{"depth":3,"text":"적응하고 변화하는 전문가","id":"적응하고-변화하는-전문가","i":6,"parent":true,"children":[]},{"depth":3,"text":"이미 알고 있는 지식 연결하기","id":"이미-알고-있는-지식-연결하기","i":7,"parent":true,"children":[]}]},{"depth":2,"text":"하나씩 적용해보면서 시행착오로 개선해나간다","id":"하나씩-적용해보면서-시행착오로-개선해나간다","i":8,"children":[]}]},"permanlink":"/fixation-to-insight/","tags":["창의성","고착","통찰","닻","개방성","연결"]},{"slug":"json-vs-object","frontmatter":{"title":"자바스크립트 JSON vs 객체 무엇이 다른가요?","excerpt":"한 줄 요약 : JSON, 즉 Java Script Object Notation(자바스크립트 객체 표기법)은 js 객체를 문자열로 쓰는 방법입니다.","date":"2021-09-07T11:28:48.765170","author":"탐정토끼(Taehee Kim)","tag":"자바스크립트, 객체, JSON, 문자열"},"html":"<p>한 줄 요약 : JSON, 즉 Java Script Object Notation(자바스크립트 객체 표기법)은 js 객체를 문자열로 쓰는 방법입니다.</p>\n<blockquote>\n<p>하지만 도대체 json하고 객체하고 넘 비슷하게생겻는데 모가다르단거에요 ㅡㅡ........책보다보면 나오겟지..</p>\n</blockquote>\n<p>트위터에서 이런 고민을 하는 트친님을 봤습니다. 그래서 json이 뭔지 좀 적어볼게요.</p>\n<p>json은 문자열입니다. 글자죠. 제가 종이에 json을 적을 수도 있습니다. 그래서 따옴표( ' )로 감싸놓습니다. 문자열을 감싸는 따옴표와 문자열 안에 있는 따옴표를 구분하기 위해서 \\\\ 역슬래시를 이용해서 escape(빠져나가기, 무시) 처리를 해줍니다. 한국 키보드에서는 엔터 위에 원(화폐단위) 문자로 보이기도 해요.</p>\n<p>이런 문자열은 HTTP 네트워크를 타고 서버나 다른 기기와 데이터를 주고 받을 때에도 쓰이고요. 텍스트 파일로 데이터를 저장할 때도 씁니다. 제가 만든 프메 백업 뷰어도 데이터를 JSON으로 저장하고 있어요.</p>\n<p>다음 코드는 브라우저에서 F12를 누르시면 나오는 개발자 도구 Console 탭에서 직접 쳐보실 수 있어요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailJson </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">{</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">미야와키 사쿠라</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">,</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">message</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">안녕하세요. </span><span style=\"color: #EEFFFF\">\\\\\\\\\\\\\\\\</span><span style=\"color: #C3E88D\">(^ ^</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">}</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailJson</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;{\\\\&quot;name\\\\&quot;:\\\\&quot;미야와키 사쿠라\\\\&quot;,\\\\&quot;message\\\\&quot;:\\\\&quot;안녕하세요. \\\\\\\\\\\\\\\\(^ ^\\\\&quot;}&quot; 가 출력됩니다.</span></span></code></pre>\n<p>객체(object)는 코드가 아니라 그 코드를 가지고 메모리에 올라간 자료구조에요. 이 객체에서는 key를 가지고 이런저런 값을 꺼낼 수 있죠. 다른 언어에서는 보통 HashMap이나 Dictionary 같은 자료구조로 표현합니다. 보통 따옴표 없이 리터럴로 쓸 수 있지만, 빈 객체에 값을 하나씩 넣어서 만들 수도 있습니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailLiteral </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">미야와키 사쿠라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">message</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">안녕하세요. </span><span style=\"color: #EEFFFF\">\\\\\\\\</span><span style=\"color: #C3E88D\">(^ ^</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailLiteral</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// {name: &quot;미야와키 사쿠라&quot;, message: &quot;안녕하세요. \\\\(^ ^&quot;} 가 출력됩니다. 따옴표가 없죠?</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailFromEmpty </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{};</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 처음에는 비어 있습니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailFromEmpty</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">미야와키 사쿠라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\">// 값을 넣어줍니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailFromEmpty</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">message </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">안녕하세요. </span><span style=\"color: #EEFFFF\">\\\\\\\\</span><span style=\"color: #C3E88D\">(^ ^</span><span style=\"color: #89DDFF\">&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailFromEmpty</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// {name: &quot;미야와키 사쿠라&quot;, message: &quot;안녕하세요. \\\\(^ ^&quot;} 가 출력됩니다. 객체를 만들었어요.</span></span></code></pre>\n<p>보통 API 서버에서 값을 가져오면 JSON 문자열입니다. 이걸 JSON.parse에 넣으면 해석해서 객체로 만들어줍니다. 반대로 JSON.stringify 에 객체를 넣으면 문자열로 직렬화해줍니다. 통신선이나 전파를 타고 이동하려면 문자열처럼 직렬화되어 있어야하거든요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailJson2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">{</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">미야와키 사쿠라</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">,</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">message</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">:</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">안녕하세요. </span><span style=\"color: #EEFFFF\">\\\\\\\\\\\\\\\\</span><span style=\"color: #C3E88D\">(^ ^</span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">}</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailObject </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> JSON</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">parse</span><span style=\"color: #EEFFFF\">(sakuMailJson2)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailObject</span></span>\n<span class=\"line\"><span style=\"color: #545454\">//{name: &quot;미야와키 사쿠라&quot;, message: &quot;안녕하세요. \\\\(^ ^&quot;}</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sakuMailJson3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> JSON</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">stringify</span><span style=\"color: #EEFFFF\">(sakuMailObject)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">sakuMailJson3</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;{\\\\&quot;name\\\\&quot;:\\\\&quot;미야와키 사쿠라\\\\&quot;,\\\\&quot;message\\\\&quot;:\\\\&quot;안녕하세요. \\\\\\\\\\\\\\\\(^ ^\\\\&quot;}</span></span></code></pre>\n<p>요즘 대부분의 언어에서는 JSON을 다룰 수 있는 모듈이나 라이브러리를 제공합니다. JS는 웹 브라우저의 표준 언어고, 왠만한 언어는 모두 서버를 만드니까요. 예를 들어 파이썬에는 json.dumps와 json.loads 가 있고요. 객체보다는 dict (사전) 자료구조를 이용합니다. Java Spring에서는 보통 DTO라는 클래스로 객체를 만들어 넣지만, key-value를 저장하는 HashMap을 선호하는 분도 간혹 있습니다.</p>\n<p>옛날 사람들은 XML을 썼는데요. (그래서 Ajax 라는 말의 x가 xml이라는 뜻입니다) XML은 읽기 어렵고 불편했기 때문에, 점점 JSON이 득세하기 시작했습니다. 하지만 요즘은 또 json이 마음에 안 들었던 구글이 프로토콜버퍼(protobuf)라는 직렬화 방법을 직접 만들어서 gRPC(원격 프로시저 호출)같은 곳에 사용하고 있기도 합니다. gRPC는 <a href=\"https://blog.banksalad.com/tech/production-ready-grpc-in-golang/\">뱅크샐러드</a>를 비롯해 여러 회사들이 쓰고 있어요.</p>\n<p>'직렬화'라는 말이 나왔죠? 어떤 자료구조를 줄줄이 한 줄로 이어지는 문자열이나 바이트 스트림으로 만들면 직렬화 한다고 합니다. 0010111000111 같은 데이터 말이죠. 이런 걸 그래서 '선형적'이라고도 해요. 일직선이니까요.</p>\n<p>잠깐, json도 줄이 바뀌는 걸 보신 적이 있을텐데요. 줄이 바뀐 것처럼 보여도 사실 \\\n 줄바꿈 문자가 저장된 걸 해석해서 보여줄 뿐입니다. 자료구조는 메모리 곳곳에 파편화된 걸, 참조를 통해서 연결해놓는 경우가 많아요. 이런 게 비선형적인 데이터인데요. 네트워크 통신선이나 전파를 타고 데이터를 전송하려면 데이터가 하나씩 직렬화된 상태로 만들어야합니다.</p>\n<p>이쯤이면 당장 필요한 지식은 충분합니다. 하지만 JSON을 쓰다보면 여러 문제를 마주치실 거에요. 내가 쓰는 언어의 JSON 모듈 문서를 찾아보시는 것도 좋은 방법입니다.</p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/JSON\">MDN : JavaScript와 JSON의 차이</a></p>\n<p><a href=\"https://www.json.org/json-ko.html\">ECMA-404 The JSON Data Interchange Standard</a></p>\n<p><a href=\"https://docs.python.org/ko/3/library/json.html\">파이썬 : json — JSON 인코더와 디코더</a></p>\n<p>더 궁금하신 게 있으시면 댓글로 달아주세요.</p>\n","data":{"tocTree":[]},"permanlink":"/json-vs-object/","tags":["자바스크립트","객체","JSON","문자열"]},{"slug":"genealogy-of-iz-pm-backup-2","frontmatter":{"title":"아이즈원 프라이빗 메일 백업의 계보 - 2편","excerpt":"프메 백업에는 성공했지만, 프록시 서버와 인증서는 불편하고 어려웠습니다. 이번에는 프메 백업 개발자들이 어떻게 이 문제를 해결하려 했는지 이야기해보겠습니다.","date":"2021-08-30T16:19:37.680047","author":"탐정토끼(Taehee Kim)","tag":"오픈소스, 생태계, 아이즈원, 크롤링, 저작권, 파이썬"},"html":"<p><a href=\"https://twinstae.github.io/genealogy-of-iz-pm-backup-1/\">아이즈원 프라이빗 메일 백업의 계보 - 1편</a> 보러가기</p>\n<h2 id=\"지난-이야기\">지난 이야기</h2>\n<p>아이즈원이 해체를 발표하고, 팬덤인 위즈원들은 아이즈원 팬 전용 SNS인 프라이빗 메일을 보존하고 백업하려 했습니다. 하지만 8000장이 넘는 메일을 손으로 하나하나 스크린샷을 찍는 것 말고는 방법을 알지 못했죠.</p>\n<p>페이로드님은 대학생으로 아이즈원 기록 보관소 방주의 개발자 중에 한 분이었습니다. 페이님은 프메 앱의 구조를 알아내고, 프록시 서버로 토큰을 획득해, HTTP 요청으로 백업을 하는데 성공했습니다.</p>\n<p>하지만 프록시 서버와 보안 관련 인증서 처리는 일반인은 물론이고, 개발자도 사용하기 어려웠습니다. 프메 백업 개발자들은 백업을 더 쉽게 만들기 위해 머리를 싸매기 시작합니다...</p>\n<h2 id=\"저작권의-회색지대\">저작권의 회색지대</h2>\n<p>여기서 좀 걱정이 되기도 했습니다. 저희는 이용약관의 회색지대에 서 있었습니다. 약관에서 사용자가 직접 백업을 하라고 하긴 했지만요. 어떻게 보면 앱을 변조하고 토큰을 탈취하는 등 '비정상'적으로 앱을 이용하고 있는 것도 사실입니다. API를 이용하긴 해도, 메일 8000여개가 넘는 데이터를 다운 받으면서 CDN에 부하를 거는 것은 아닐까 걱정도 됐습니다.</p>\n<p>어떻게 보면 이 문제는 프메를 1명이 백업해서 모두에게 파일을 공유해버리면 간단하게 해결할 수 있는 일이었습니다. 하지만 위즈원들은 운영사의 권리를 나름 존중하는 방식으로 프메를 백업하고 싶었습니다. 그러려면 각자 구독한만큼의 프메만 정확하게 백업을 할 수 있게 해야했습니다.</p>\n<p>그래서 저희는 액세스 토큰을 이용한 '인증' 방식을 존중하면서, 그 외의 부분을 최대한 편리하게 만드는 식으로 문제를 해결해나가려 했습니다.</p>\n<h2 id=\"공용-프록시-서버와-복제앱\">공용 프록시 서버와 복제앱</h2>\n<h3 id=\"3가지-문제--서버-구축-인증서-토큰\">3가지 문제 : 서버 구축, 인증서, 토큰</h3>\n<p>지난 이야기에서 말씀 드렸듯이 문제는 크게 3가지 였습니다.</p>\n<ol>\n<li>프록시 서버를 직접 구축하기 어렵다.</li>\n<li>안드로이드 HTTPS 인증서 설정이 어렵다.</li>\n<li>토큰을 프로그램에 입력하기가 어렵다.</li>\n</ol>\n<h3 id=\"대안--공용-서버와-복제앱\">대안 : 공용 서버와 복제앱</h3>\n<blockquote>\n<p>안드로이드 정책상, 보안 인증서 규정을 우회할 방법이 없어서 결국 수정이 가해진 apk를 이용할 수 밖에 없습니다.\n어플 자체에 수정이 가해진건 아니고, 그냥 사용자 인증서도 사용할 수 있게끔 Manifest만 수정되어있는 버전입니다.</p>\n<p>[Android 프메 백업 가이드] - 페이</p>\n</blockquote>\n<p>페이님은 신버전 백업 툴을 제작하기 시작했습니다. 이 신 버전 백업툴은 이 세 가지 문제를 독특한 방식으로 해결하려 했습니다.</p>\n<ol>\n<li>도커로 프록시 서버 컨테이너를 AWS에 배포하고</li>\n<li>인증서 설정을 바꾼 복제앱을 다운 받아 설치하고 로그인하면</li>\n<li>토큰이 포함된 설정 파일과 스크립트를 다운 받을 수 있게 했습니다.</li>\n</ol>\n<p>이 방식은 그나마 좀 합리적이었습니다. 1번은 페이님이 직접 서버를 운영하셨으니. 일반 사용자는 복제앱을 다운 받아서, 와이파이로 프록시만 설정하고 로그인만 하면 스크립트를 다운 받을 수 있었죠. 사용 설명서도 친절하게 하나하나 따라할 수 있게 만들었습니다.\n<img src=\"https://twinstae.github.io/img/%ED%8E%98%EC%9D%B4-%EC%82%AC%EC%9D%B4%ED%8A%B8.webp\" alt=\"프메 백업 사이트. 복제 앱에서 받은 핀코드를 입력하면 설정파일과 스크립트를 다운 받을 수 있다.\"></p>\n<h3 id=\"프록시-다-썼으면-접속-끊어주세요\">\"프록시 다 썼으면 접속 끊어주세요...\"</h3>\n<blockquote>\n<p>어제부터 사용자가 많이 몰리고 있습니다..\n어제 하루 접속자 통계가 하루 1300명 정도 나왔습니다.</p>\n<p>[프메 백업 프록시 서버 접속 오류 관련] - 페이</p>\n</blockquote>\n<p>하지만 이 방식에는 큰 결함이 있었습니다. 서버가 자꾸 터진다는 것이었죠. 프록시 서버를 천 명 넘게 접속하는 것만 문제가 아니었습니다. 이미 접속한 사람이 와이파이 프록시를 끊어주지 않으면... 프록시에 연결된 채로 게임을 하고 웹서핑을 하는 등. 엄청난 트래픽이 몰리게 된 것이죠.</p>\n<p>서버가 자꾸 터지다보니, \"서버 또 죽은 건가요? ㅠㅠ\"하는 문의가 빗발쳤습니다. 페이님이 뭘 어떻게 할 방법이 없었고, 이 방식에 한계를 느끼는 분들이 나왔습니다.</p>\n<h2 id=\"스크립트-자동화\">스크립트 자동화</h2>\n<h3 id=\"원클릭-스크립트가-알아서-다-해줘요\">원클릭 스크립트가 알아서 다 해줘요~</h3>\n<blockquote>\n<p>2~3 클릭안에 끝나는 안드로이드 전용 프메 백업 대충 원클릭입니다.\n기존 프메 백업 가이드의 흐름을 매크로 비슷한 형태로 구현하였습니다.</p>\n<ul>\n<li>windows 10환경에서 작동합니다. 이전 버전은 작동 여부를 알 수 없습니다.</li>\n<li>nox가 설치되어 있지 않다는 전제로 합니다. nox가 깔려있지 않은 상태로 진행해주세요.</li>\n<li>제 환경에서 테스트를 완료하였고, 혹시라도 작동 안하면 댓글에 남겨주세요.</li>\n</ul>\n<p>[프메 백업 가이드 - 안드로이드 대충 원클릭] - 나예최</p>\n</blockquote>\n<p>다른 한편으로는 \"나예최\"라는 닉네임을 쓰는 디씨 최예나 갤러리의 개발자님이 계셨는데요. 이 분은 기존 백업 방식을 정리해서 친절한 가이드로 만들었고요. 그 후에는 '원클릭'이라 해서 자동화 스크립트를 만드셨습니다. 프록시 서버를 열고, Nox 에뮬레이터를 이용해 앱을 설치, 토큰을 받고, 백업하는 과정을 자동화한 것이죠.</p>\n<p>간단하게 설명했지만 놀라운 진보였습니다. 스크립트를 다운 받아서 실행만 하면 알아서 척척 프로그램을 설치하고 백업하는 모습에, 많은 위즈원이 놀랐습니다.</p>\n<h3 id=\"환경에-따른-오류와-버그들\">환경에 따른 오류와 버그들...</h3>\n<p>하지만 이 역시 버그에서 자유롭진 못했습니다. 이렇게 많은 걸 자동화하는 스크립트는 사용자 환경에 따라 작동이 안 되기도 했고요. 중간에 버그가 나면 모든 걸 '수동으로' 지우고 다시 시작해야했습니다.</p>\n<h2 id=\"비밀번호를-통한-이어받기\">비밀번호를 통한 이어받기</h2>\n<blockquote>\n<p>소녀시대/IU/IZ*ONE을 좋아하는 아재. 안드로이드 전문 14년차 개발자\n- 레디필님 트위터 프로필</p>\n</blockquote>\n<blockquote>\n<p>안드로이드 만이지만 프메 백업 앱 만들었어요.\n- 레디필님 트위터. 3월 28일. 혁명의 시작.</p>\n</blockquote>\n<p>안드로이드 백업의 혁명은 트위터에서 활동하신 레디필(@redifil)님에게서 시작됩니다.</p>\n<p>레디필님은 안드로이드 전용 백업 앱을 만드셨는데요. 앱 자체에서 제공하는 이어받기 기능을 이용했습니다.</p>\n<p>저희는 계속 '토큰'이 필요하다는 이야기를 반복하고 있습니다. 결국 이 모든 삽질은 액세스 토큰을 얻기 위한 삽질입니다. 그러면 원래 프메 앱은 어떻게 토큰을 발급 받을까요?</p>\n<p>앱을 처음 설치하고 가입하거나, 다른 핸드폰으로 전환하면 서버에게 요청을 보내서 인증을 받고 토큰을 발급받습니다. 특히 이 \"데이터 이어받기\"를 할 때에는 기존에 쓰던 앱에서 무작위로 생성된 \"비밀번호\"를 발급 받아서 입력하게 되는데요.</p>\n<p>다시 말해 이어받기 비밀번호만 알면 서버에 요청을 해서 인증을 수행하고 토큰을 받을 수 있다는 겁니다. 말 그대로 데이터를 이어받는 거죠. 단지 팬들이 만든 앱으로 이어받을 뿐입니다. 프록시 서버나 인증서 같은 꼼수를 쓸 필요가 없는 것이죠.</p>\n<p>그래서 트위터 안드로이드 백업앱은 큰 호평을 받았습니다. 앱을 다운 받아서 비밀번호만 입력하면 백업이 되니까요. 원래 앱의 데이터를 옮기는 방식이랑 크게 다를 게 없었습니다. 무엇보다 컴퓨터 없이 핸드폰으로만 백업을 받을 수 있어서, 군인처럼 컴퓨터를 사용할 수 없는 분들도 사용하실 수 있었죠.</p>\n<h3 id=\"비밀번호-방식이-널리-퍼지다\">비밀번호 방식이 널리 퍼지다.</h3>\n<p>이어받기 비밀번호를 이용한 방식은 이후로 나온 여러 백업 앱이 따라하면서 더 널리 퍼졌습니다. 나중에 이야기할 플러터 백업 앱, 제가 만든 파이썬 비동기 백업툴, Go를 이용한 백업툴도 이러한 비밀번호 방식과 토큰 방식을 같이 사용했습니다.</p>\n<p>어? 토큰 방식을 아직도 쓴다고요?</p>\n<h3 id=\"아이폰은-방법이-없나요\">\"아이폰은 방법이 없나요?\"</h3>\n<p>네. 아이폰은 비밀번호 이어받기 기능이 없었습니다. 프메 서비스가 종료될 때까지 저희는 여기에 답을 찾지 못했고요. 앞서 말씀 드린 프록시 서버로 직접 토큰을 따는 방식 밖에 없었습니다.</p>\n<h2 id=\"기술으로-안-되면-친절한-가이드와-as로-해결하기\">기술으로 안 되면 친절한 가이드와 AS로 해결하기</h2>\n<p>기술로 해결할 수 없는 부분은 결국 사람을 가르쳐서 해결해야 했습니다.</p>\n<p>저와 함께 \"백업이 빠른 남자\"라는 닉네임을 쓰는 위즈원이 같이 오픈 카톡방을 운영했습니다. 에러가 나서 찾아오는 수 많은 분들을 도와서 하나하나 알려드리고, 파이썬을 설치하고 백업까지 진행시켜 드렸죠. 특히 서버가 종료되기 전날은 아침부터 저녁까지 사람들이 끝 없이 몰려왔던 기억이 납니다.</p>\n<h3 id=\"파이썬-설치가-뭐-그렇게-어려워-어려워요\">파이썬 설치가 뭐 그렇게 어려워?... 어려워요.</h3>\n<blockquote>\n<p><strong>반드시 Add Python 3.X to PATH 옵션을 선택하여 활성화</strong> 시킨뒤에 설치해줍니다.</p>\n<p>[프메 백업 풀 가이드 : 파이썬 스크립트 구동] - 백업이 빠른 남자, IZ*PUZZLER</p>\n</blockquote>\n<p>페이님의 백업 툴은 파이썬을 이용합니다. 그래서 파이썬을 설치해야 했고... 많은 분들이 환경변수에서 막혔습니다. 그 외에도 윈도우7 사용자는 파이썬 3.9를 설치할 수 없다던가. Mac에서 python은 2버전을 가리키기 때문에, python3 라고 쳐야 된다던가. 여러 이슈가 많았죠.</p>\n<p>그리고 백업 툴이 사용하는 requests 같은 라이브러리도 pip으로 설치해야해서 머리가 아팠습니다. 이걸 bat 이나 sh 파일로 만들어보기도 했는데. Mac은 스크립트 권한 때문에 실행이 안 되서 직접 권한을 추가해주도록 했던 기억이 있네요. 어떤 분은 설치하다가 pip 이 날아가기도 했는데. python -m ensurepip 을 써서 pip을 복구할 수 있다는 것도 처음 알았습니다. 파이썬 버전이 여러 개 깔려 있어서 충돌 나는 분도 있었고요. 윈도우7에서는 유니코드 문자를 터미널에 출력하면 에러 난다는 것도 배웠습니다.</p>\n<p>정말 파이썬 설치하는 것조차 생각보다 어렵다는 걸 배웠습니다. 정말 그냥 다운 받아서 설치하면 끝이 아니더라고요. 여러 개발자들이 모여서 노션에 메뉴얼을 만들었는데. 개선하고 개선해도 안 읽는 분은 많았고, 읽으셨는데 저희가 생각지 못했던 예외 케이스가 끝 없이 나왔던 기억이 있습니다. 나중에는 유튜브 영상으로 따라할 수 있는 가이드를 만들어 제공했어요.</p>\n<p>하지만 이런 고민들도 결국 끝이 났습니다. 아이즈원 프메 서버가 서비스를 종료하면서, 이제 프메 백업은 불가능하게 되었으니까요.</p>\n<h2 id=\"다음-회-예고-속도전\">다음 회 예고. 속도전.</h2>\n<p>아직 할 이야기가 많습니다. 일단 제가 만든 프메 백업 뷰어 이야기는 아직 나오지도 않았고요. ;) 좀 더 기다리셔야할 것 같습니다. 왜냐하면 다음 시간에는 비동기를 이용해 프메 백업이 빨라진 과정을 소개해보려 합니다.</p>\n<p>사실 파이썬 백업 툴에는 큰 문제가 있었습니다. 백업에 1시간이 넘게 걸렸거든요. CDN에서 8000개가 넘는 HTML과 1만 개가 넘는 이미지를 불러오긴 했지만... 그렇다고 해도 너무 오래 걸렸습니다.</p>\n<p>이게 파이썬이 스크립트 언어라서 생기는 문제가 아니었습니다. 자바 안드로이드 백업 앱도 비슷한 시간이 걸렸습니다. 아니 자바는 수 백배 빠른데... 핸드폰이라서 느린 걸까요?</p>\n<p>아닙니다. 이 문제의 핵심 키워드는 블로킹(blocking)이었습니다. 다음 시간에는 shelter 개발자님과 제가 어떻게 비동기 동시성으로 파이썬에서 8분 만에 백업을 끝냈는지. Go 개발자님은 이 기록을 뚫고 1~3분으로 기록을 단축하실 수 있었는지 이야기해보겠습니다.</p>\n<p>다음 주 월요일에 만나요~</p>\n","data":{"tocTree":[{"depth":2,"text":"지난 이야기","id":"지난-이야기","i":0,"children":[]},{"depth":2,"text":"저작권의 회색지대","id":"저작권의-회색지대","i":1,"children":[]},{"depth":2,"text":"공용 프록시 서버와 복제앱","id":"공용-프록시-서버와-복제앱","i":2,"children":[{"depth":3,"text":"3가지 문제 : 서버 구축, 인증서, 토큰","id":"3가지-문제--서버-구축-인증서-토큰","i":3,"parent":true,"children":[]},{"depth":3,"text":"대안 : 공용 서버와 복제앱","id":"대안--공용-서버와-복제앱","i":4,"parent":true,"children":[]},{"depth":3,"text":"\"프록시 다 썼으면 접속 끊어주세요...\"","id":"프록시-다-썼으면-접속-끊어주세요","i":5,"parent":true,"children":[]}]},{"depth":2,"text":"스크립트 자동화","id":"스크립트-자동화","i":6,"children":[{"depth":3,"text":"원클릭 스크립트가 알아서 다 해줘요~","id":"원클릭-스크립트가-알아서-다-해줘요","i":7,"parent":true,"children":[]},{"depth":3,"text":"환경에 따른 오류와 버그들...","id":"환경에-따른-오류와-버그들","i":8,"parent":true,"children":[]}]},{"depth":2,"text":"비밀번호를 통한 이어받기","id":"비밀번호를-통한-이어받기","i":9,"children":[{"depth":3,"text":"비밀번호 방식이 널리 퍼지다.","id":"비밀번호-방식이-널리-퍼지다","i":10,"parent":true,"children":[]},{"depth":3,"text":"\"아이폰은 방법이 없나요?\"","id":"아이폰은-방법이-없나요","i":11,"parent":true,"children":[]}]},{"depth":2,"text":"기술으로 안 되면 친절한 가이드와 AS로 해결하기","id":"기술으로-안-되면-친절한-가이드와-as로-해결하기","i":12,"children":[{"depth":3,"text":"파이썬 설치가 뭐 그렇게 어려워?... 어려워요.","id":"파이썬-설치가-뭐-그렇게-어려워-어려워요","i":13,"parent":true,"children":[]}]},{"depth":2,"text":"다음 회 예고. 속도전.","id":"다음-회-예고-속도전","i":14,"children":[]}]},"permanlink":"/genealogy-of-iz-pm-backup-2/","tags":["오픈소스","생태계","아이즈원","크롤링","저작권","파이썬"]},{"slug":"genealogy-of-iz-pm-backup-1","frontmatter":{"title":"아이즈원 프라이빗 메일 백업의 계보 - 1편","excerpt":"아이즈원 프라이빗 메일을 백업하고 보존하기 위해 팬 개발자들은 여러 프로그램을 만들고 발전시켜왔습니다. 자발적으로 만들어진 오픈소스? 생태계의 한 사례로서 그 계보를 기록해보려 합니다.","date":"2021-08-23T13:07:25.978080","author":"탐정토끼(Taehee Kim)","tag":"오픈소스, 생태계, 아이즈원, 크롤링, 저작권, 파이썬"},"html":"<h2 id=\"한-오픈소스-생태계의-발전과-계보를-기록하다\">한 오픈소스 생태계의 발전과 계보를 기록하다.</h2>\n<p>이 수상한 제목을 누르고 들어오신 손님 여러분, 환영합니다. 먼저 이 시리즈를 읽으시면 무엇을 얻어가실 수 있을지 이야기해보려 합니다.</p>\n<h3 id=\"아이즈원-프라이빗-메일은-팬-전용-유료-sns-입니다\">아이즈원 프라이빗 메일은 팬 전용 유료 SNS 입니다.</h3>\n<p><img src=\"https://user-images.githubusercontent.com/13915810/131216834-c403256e-87be-4534-b913-fe661db8ac98.png\" alt=\"아이즈원 프라이빗 메일 광고. 일본 느낌이 물씬 풍기는 디자인이다.\"></p>\n<p>아이즈원 프라이빗 메일(이하 \"프메\")은 팬 전용 유료 구독 SNS 서비스입니다. 아이즈원이 데뷔한 직후인 2019년 초부터 해체한 2021년 4월 27일까지 아이즈원 멤버들이 팬들에게 메일을 보내주는 형식으로 운영됐습니다. 광고에서 일본 스타일을 느끼셨다면 정확합니다! 원래 AKB48에서 운영하던 서비스를 그대로 아이즈원에서 사용했거든요.</p>\n<h3 id=\"다양한-배경을-가진-개발자들-복잡한-기술적-도전\">다양한 배경을 가진 개발자들, 복잡한 기술적 도전</h3>\n<p>아이즈원 프메 백업 뷰어는 팬들이 자발적으로 시작한 프로젝트들입니다. 파이썬, JQuery부터 스벨트, 안드로이드, 플러터, Go까지 다양한 기술 스택을 가진 개발자들이 서로 다른 방향으로 백업 툴과 뷰어를 만들었습니다. 저희 개발자들은 현생과 서비스 종료라는 시간의 압박 속에서 다양한 이슈들을 해결해야 했습니다. 한국에서 해외까지 수 많은 실 사용자들에게 피드백이 들어왔고... 대부분은 프로그램은 커녕 컴퓨터도 잘 모르는 사람들이었죠.</p>\n<h3 id=\"발전--사용성을-개선하고-성능을-최적화하기\">발전 : 사용성을 개선하고, 성능을 최적화하기</h3>\n<p>처음에는 사용자가 직접 fiddler같은 프록시 서버를 띄우고 설정해야하는 불편한 구조였습니다. 하지만 일반인 사용자들은 파이썬 설치도 어려워했죠. 그래서 개발자들은 여러 자동화 스크립트를 발전시켰고, 결국 아이디와 비밀번호만 입력하면 될 수준으로 간단해졌습니다.</p>\n<p>백업 시간도 처음에는 파이썬 순차 요청으로 1~3시간이 걸렸지만, 최종적으로는 Go + 비동기 병렬성을 이용해 3분까지 단축했습니다.</p>\n<p>하지만 이러한 저희의 도전은 아이즈원 팬덤인 위즈원 커뮤니티 만의 이야기였고요. 개발자들조차 다른 프로젝트들이 어떻게 진행되어왔는지는 잘 몰랐습니다.</p>\n<h3 id=\"누구도-모르는-한-오픈소스-생태계의-역사\">누구도 모르는 한 오픈소스 생태계의 역사</h3>\n<p>최근에 <a href=\"https://twitter.com/lqez\">Hyun-woo Park(@lqez)</a> 님과 오픈소스 생태계에 대해 대화를 나눴습니다. 어쩌다가 아이즈원 프메 백업 뷰어에 대해 약간 이야기를 들려드렸는데요. 흥미로워하시면서 \"이게 오픈소스 아닌가요?\"라며 글로 써보는 게 어떻겠냐고 제안을 주셨습니다. 매주 월요일마다 글을 쓰기로 약속까지 받아내셨죠.</p>\n<p>생각해보면 이 글을 쓰기에 저만큼 괜찮은 사람도 없었습니다. 우연히 이 프로젝트의 초창기부터 참여해왔고요. 두 번째로 사용자가 많은 프메 백업 뷰어를 만들었습니다. 최근에 서로 다른 뷰어들의 데이터를 호환시키는 프로젝트를 하고, 개발자님들과 대화하면서 이런저런 내막을 들을 수도 있었죠. 무엇보다 현업으로 바쁜 다른 분들에 비하면, 저는 코칭을 하면서 나름 여유롭게 살고 있습니다.</p>\n<p>전에도 프메 백업 뷰어 이야기를 쓴 적은 있지만, 그건 제 개인적인 감정이나 소감 정도였습니다. 이 시리즈에서는 이 생태계가 어떻게 발전해왔는지, 오픈소스의 관점에서 이야기해보려 합니다. 다양한 기술적 난관과 해결책은 어떻게 보면 엉성해보이실 수도 있고, 어떤 면은 놀라우실 수도 있으리라 생각합니다. 부디 도움이 되길 바랍니다.</p>\n<p>여튼 그러한 이유로 앞으로 매주 월요일마다 글을 올리려 합니다. 5부작 정도로 계획하고 있습니다.</p>\n<p>이야기는 한 카이스트 대학생으로부터 시작합니다.</p>\n<h2 id=\"태초에-payload와-python이-있었다\">태초에 Payload와 Python이 있었다.</h2>\n<h3 id=\"아이즈원이-해체를-공식-발표하다\">아이즈원이 해체를 공식 발표하다.</h3>\n<blockquote>\n<p>Mnet은 10일 오후 보도자료를 통해 아이즈원의 프로젝트 종료를 공식 발표했다.</p>\n<ul>\n<li>[아이즈원, 4월 활동 종료...해체] 3월 10일 매일경제 : 스타투데이</li>\n</ul>\n</blockquote>\n<p>때는 2021년 3월 10일. 아이돌 그룹 아이즈원과 팬덤 위즈원은 3월 13일, 14일에 진행될 온라인 콘서트 [One, The Story]를 기다리고 있었고, 언론을 통해 아이즈원 해체 결정이 공식 발표되었습니다.</p>\n<p>위즈원 팬덤이 어떻게 반응했으며, 무슨 분투가 있었는지는 저희의 관심사가 아닙니다. 아이즈원은 결국 4월 27일 최종적으로 해체했습니다.</p>\n<h3 id=\"자기-책임-하에-백업합니다\">\"자기 책임 하에 백업합니다.\"</h3>\n<p>자연스럽게 프메 서비스도 종료하게 되었습니다. 운영팀은 자체 백업 기능을 제공하지 않았습니다.</p>\n<blockquote>\n<p>(22) 당사는 고객 정보 및 콘텐츠 저장 의무를 부담하지 아니하며, 그 완전성, 가용성에 대해 보증하지 아니합니다. 고객은 고객 정보 및 콘텐츠를 보전하고자 할 경우, 자기 책임 하에 백업합니다.</p>\n</blockquote>\n<p>그러면 저희에게 어떤 방법이 있었을까요?</p>\n<h3 id=\"수작업으로-스크린샷-찍어야-하나요\">\"수작업으로 스크린샷 찍어야 하나요...\"</h3>\n<blockquote>\n<p>제목 : 프메 어떻게 백업하나요. 정말</p>\n<p>일일히 수작업으로 스크린샷 찍어야 하나요...</p>\n<p>익명의 누군가</p>\n</blockquote>\n<p>사람들은 프메 데이터를 보존하기 위해서 '수동 백업'을 선택했습니다. 8천 장이 넘는 메일과 사진을 하나하나 스크린샷으로 찍어 보존하려 했죠. 이 단순 반복 노동에 수 많은 사람이 포기한 것은 둘째치고, 스크린샷은 용량이 어마어마했습니다. 열람이나 검색이 불편한 것도 있었고요.</p>\n<h3 id=\"백업-데이터-저장소--방주-izark\">백업 데이터 저장소 : 방주 IZ*ARK</h3>\n<p>위즈원 팬덤은 이런 사태를 전부터 예상하고 있었습니다. 프로젝트 그룹인 IOI나 Wanna One도 계약기간이 끝나자마자, 해체했으며. 재결합 시도가 있었으나 무산되었으니까요. 아이즈원은 괜찮은 성적을 냈지만, 안준영 PD의 투표 조작 사건을 겪으면서 몇 번이나 해체위기를 겪었었습니다.</p>\n<p>위즈원 팬덤은 아이즈원이 데뷔할 때 이미 IZ*ARK 이른바 '방주'라는 공유 구글 드라이브를 만들어, 모든 아이즈원의 활동을 기록하고 보존해왔습니다. 이 방주는 여전히 <a href=\"https://wiz-one.co.kr/\">SPACE*IZ (허브홈)</a>에서 운영 중 입니다. 공식 SNS와 활동한 모든 글과 이미지, 영상을 보존하고 있습니다.</p>\n<p><img src=\"/img/%EB%B0%A9%EC%A3%BC.webp\" alt=\"방주의 폴더들 트위터, 틱톡, 인스타, 페이스북, 유튜브 등등 모든 SNS와 활동 자료들이 모여 있다.\"></p>\n<p>그 방주 사이트의 구글 드라이브 연동, 인증 시스템을 개발한 사람이 바로 첫 번째 이야기의 주인공인 <a href=\"https://github.com/mdsnins\">Payload</a>(aka 페이좌) 입니다.</p>\n<h3 id=\"보안을-공부하던-카이스트-대학생은-방주-사이트-개발팀이-되는데\">보안을 공부하던 카이스트 대학생은 방주 사이트 개발팀이 되는데...</h3>\n<p>공개된 정보만 이야기하자면 페이님은 부산 과학고를 졸업한 카이스트 대학생으로, 원래는 보안 쪽에서 활동하시는 해커이신 모양입니다.</p>\n<p>원래는 DC인사이드의 아이즈원 멤버들 갤러리에서 활동하셨다고 합니다. 19년에는 팬 서포트를 위한 작은 플랫폼을 만들었는데요. 이게 방주 관리자인 똘배님의 눈에 띄어서 2019년 방주 개발팀에 합류하셨다고 합니다. 앞서 말씀드렸듯 구글 드라이브 연동을 통해 각종 백업 데이터를 관리하는 일을 해오신 거죠.\n<a href=\"https://gall.dcinside.com/mgallery/board/view/?id=mnet_k&#x26;no=18598539\">출처</a></p>\n<p>보안 쪽 지식 + 백업 사이트 개발을 합치면 어떻게 프메 백업의 아이디어를 떠올리셨을지 예상이 갑니다.</p>\n<h2 id=\"프록시-서버를-이용한-아이즈원-프메-백업-스크립트\">프록시 서버를 이용한 아이즈원 프메 백업 스크립트</h2>\n<blockquote>\n<p>정신 차리니 거대해져버린 이 프로젝트의 시작은, 너무나도 작은 프로젝트였습니다\n사용자가 HTTPS 프록시를 이용해서 모든 정보를 추출해내고, 사용법도 안 적혀 있던 참 단순하고, 불친절한 스크립트였습니다.</p>\n<p><a href=\"https://gall.dcinside.com/mgallery/board/view/?id=mnet_k&#x26;no=18826845\">IZPM 프로젝트 후기</a> 중에서 - 페이</p>\n</blockquote>\n<p>저(탐정토끼)는 당시에 이곳저곳 뒤지던 중에 이 초창기 파이썬 스크립트를 발견했습니다. 저도 처음에는 이게 도대체 뭐하는 건가 싶었는데요. 여러분이 웹에 대한 지식이 없다고 가정하고, 그 원리를 설명해보고자 합니다.</p>\n<h3 id=\"앱은-서버에게-http-요청을-보냅니다\">앱은 서버에게 HTTP 요청을 보냅니다.</h3>\n<p>프메는 안드로이드와 IOS에서 돌아가는 모바일 앱입니다. 하지만 내부적으로는 WebView를 이용한 웹 앱으로 되어 있죠.</p>\n<p><img src=\"/img/HTTP%EC%9B%B9%EC%84%9C%EB%B2%84.webp\" alt=\"HTTP 서버의 개념도\"></p>\n<blockquote>\n<p>출처 : <a href=\"https://developer.mozilla.org/ko/docs/Learn/Common_questions/What_is_a_web_server\">MDN : 웹 서버란 무엇일까?</a></p>\n</blockquote>\n<p>위 그림은 웹 브라우저와 HTTP 서버가 통신하는 모습을 그림으로 그려본 겁니다. 브라우저(저희는 모바일 앱)가 HTTP 규약에 맞춰서 요청(Request)을 보내면, 서버는 응답(Response)하면서 JSON 데이터나 파일을 돌려줍니다.</p>\n<p>프메 앱도 똑같습니다. 프메 API 서버에 JSON으로 된 메일 목록을 요청해서 보여줍니다. 각 메일을 클릭하면 CDN 서버에서 HTML 파일과 이미지를 불러옵니다. 예를 들어 JSON 파일은 이렇게 생겼습니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-json\"><span class=\"line\"><span style=\"color: #89DDFF\">{</span><span style=\"color: #EEFFFF\">&#39;mail_count&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\"> &#39;page&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\"> &#39;has_next_page&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> True</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\"> &#39;unread_count&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">1129</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\"> &#39;star_count&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\"> &#39;mails&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[{</span><span style=\"color: #EEFFFF\">&#39;member&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #EEFFFF\">&#39;id&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">12</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#39;name&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;깃털채연&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#39;realname_ko&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;이채연&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#39;realname_th&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;LEE CHAE YEON&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#39;realname_in&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;LEE CHAE YEON&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    &#39;image_url&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;https:</span><span style=\"color: #545454\">//img.izone-mail.com/artist/profile/starship/202010211113/d43bd42aa098239c7653b35c79e66d8c.jpg&#39;},</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;group&#39;: </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #EEFFFF\">&#39;id&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> &#39;name&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;IZ*ONE&#39;</span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;id&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;m</span><span style=\"color: #F78C6C\">00000</span><span style=\"color: #EEFFFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;subject&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">27</span><span style=\"color: #EEFFFF\">_제목&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;subject_ko&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">27</span><span style=\"color: #EEFFFF\">_제목&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;subject_in&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">27</span><span style=\"color: #EEFFFF\">_제목&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;subject_th&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">21</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #F78C6C\">27</span><span style=\"color: #EEFFFF\">_제목&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;content&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;메일의 첫 문장이 들어있었는데 마스킹했어요.&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;content_ko&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;메일의 첫 문장이 들어있었는데 마스킹했어요.&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;content_in&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;메일의 첫 문장이 들어있었는데 마스킹했어요. 인도네시아어 지원 같은 거 없고 한국어에요.&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;content_th&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;메일의 첫 문장이 들어있었는데 마스킹했어요. 태국어 지원 같은 거 없고 한국어에요.&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;receive_time&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #EEFFFF\">:</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #EEFFFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;receive_datetime&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #F78C6C\">2021-03-27</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #EEFFFF\">:</span><span style=\"color: #F78C6C\">50</span><span style=\"color: #EEFFFF\">:</span><span style=\"color: #F78C6C\">09</span><span style=\"color: #EEFFFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;detail_url&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> &#39;https:</span><span style=\"color: #545454\">//app-web.izone-mail.com/mail/m00000&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;detail_url_ko&#39;: &#39;https:</span><span style=\"color: #545454\">//app-web.izone-mail.com/mail/m00000&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;detail_url_in&#39;: &#39;https:</span><span style=\"color: #545454\">//app-web.izone-mail.com/mail/m00000&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;detail_url_th&#39;: &#39;https:</span><span style=\"color: #545454\">//app-web.izone-mail.com/mail/m00000&#39;,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;is_unread&#39;: True</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;is_star&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> False</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">   &#39;is_image&#39;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> True</span><span style=\"color: #89DDFF\">},</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">   ... (계속)</span></span></code></pre>\n<p>문제는 간단해졌습니다. 서버에 메일 목록 JSON과 HTML, 이미지를 HTTP 요청해서 파일로 저장하는 프로그램을 만들기만 하면되는 거죠. 페이님은 파이썬의 Requests 라는 라이브러리를 사용했습니다.</p>\n<p>하지만 여기서 보안이 우리를 가로 막습니다.</p>\n<h3 id=\"access-token을-이용한-사용자-인증\">access-token을 이용한 사용자 인증</h3>\n<p>만약에 이렇게 허술한 방식으로 앱을 만든다면... 결제하지 않은 사람도 누구나 서버에서 데이터를 빼갈 수 있을 겁니다. 그래서 대부분의 앱은 로그인과 인증을 요구하는데요. 프메 앱은 access-token을 이용한 방식을 활용하고 있었습니다.</p>\n<p>사용자가 로그인을 하면 토큰을 발급합니다. 그 후로 서버에 요청을 할 때마다 HTTP 헤더에 access-token을 달아주면, 서버에서는 토큰을 확인하고 데이터를 내어줍니다. 토큰이 없거나 잘못됐다면 접근을 금지시키죠.</p>\n<p>나중에 이야기할 프록시 서버로 HTTP 요청을 뜯어보면 이렇게 토큰이 있습니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-text\"><span class=\"line\"><span style=\"color: #EEFFFF\">PATCH /v1/application_settings HTTP/1.1129\nHost: app-api.izone-mail.com\n(중략)\nAccesss-Token: 1235ozrlga156156aneiqfqm &lt;- 이게 토큰입니다.\n(이하 생략)</span></span></code></pre>\n<p>그러면 이 토큰만 있으면 되겠네요? 여전히 문제가 있습니다. 일반 웹 페이지는 F12만 눌러도 편하게 이런 HTTP 요청을 뜯어볼 수 있는데요. 반면에 안드로이드나 아이폰 앱은 (당연하게도) 이런 HTTPS 요청을 뜯어볼 방법이 원래 없습니다. 웹 브라우저가 아니라 앱이니까요.</p>\n<p>이 토큰 하나를 얻기 위해 앞으로 수 많은 개발자들이 삽질을 하게 됩니다. 먼저 첫 번째 해법부터 만나보시죠.</p>\n<h3 id=\"토큰을-낚아채는-프록시-서버\">토큰을 낚아채는 프록시 서버</h3>\n<p><img src=\"/img/%ED%94%BC%EB%93%A4%EB%9F%AC.webp\" alt=\"피들러를 실행한 화면. 메뉴들과 요청한 url 목록이 보인다.\"></p>\n<p>페이님은 보안 쪽 배경이 있으시다고 했죠. 웹 보안 쪽에서는 Fiddler나 Burp같은 HTTP/HTTPS 프록시 서버를 많이 이용합니다. 이 프록시는 실제 서버 사이에서 요청을 가로채는 가짜 서버인데요. 이걸 나쁜 해커가 시도하면 우리의 소중한 보안 토큰과 개인정보를 가로챌 수도 있습니다. (이걸 중간자 공격이라 합니다.) 하지만 착한 해커들에게는 이런 요청을 뜯어보고 공부하기 위한 소중한 도구입니다. 사실 그 외에도 인터넷 연결이 잘 안 되는 지역이라던가, 많은 곳에서 유용한 목적으로 프록시 서버를 이용하고 있어요.</p>\n<p>컴퓨터에서 피들러나 버프 프록시 서버를 다운 받아서 실행하면, 특정 포트에서 서버가 대기하고 있게 됩니다. 이제 핸드폰의 와이파이 설정에서 내 컴퓨터의 서버와 포트에 수동으로 프록시를 연결해주면... 이제 앱이 인터넷으로 보내는 모든 요청을 가로채서 볼 수 있게 됩니다. 자세한 방법은 <a href=\"https://gall.dcinside.com/mgallery/board/view/?id=chaeyaena&#x26;no=551137\">이런 설명글</a>을 읽어보시거나, 인터넷에 검색해보세요.</p>\n<h3 id=\"아직-https-인증서가-남았다\">아직 HTTPS 인증서가 남았다.</h3>\n<p>하지만 앞에서 말씀드린 것처럼 수상한 프록시 서버는 중간자 공격에 이용될 수 있어요. 프록시 서버는 HTTP 요청은 뜯어볼 수 있지만, 암호화된 HTTPS 요청을 낚아채려면 프록시 서버의 인증서를 다운 받아서 신뢰한다고 설정해줘야 합니다.</p>\n<p>여기서 다시 한 번 보안정책이 발목을 잡는데요. 최신 안드로이드 앱은 기본적으로 사용자가 등록한 인증서를 신뢰하지 않습니다. 그러니 사용자 인증서를 등록하려면 여러 꼼수를 써야했어요. 저는 이리저리 고민하다가 인터넷을 뒤져보고, 안드로이드 에뮬레이터에 시스템 인증서로 삽입하는 방식을 사용했습니다.</p>\n<h3 id=\"준비-끝-백업-시작\">준비 끝! 백업 시작!</h3>\n<p>토큰을 확보했다면 준비는 끝났습니다. 처음에 말했듯이 서버에 요청을 보내서 파일을 다운로드 받으면 되는 것이죠. 초창기 버전의 스크립트인 <a href=\"https://github.com/mdsnins/IZPM-Backup/blob/5a08ced6bcd83170975560c6be4e5c3d83d440b5/pm.py\">pm.py</a>를 이용해서 저도 백업을 했습니다.</p>\n<p>초기 프로토타입인 만큼 이 친구는 단순했습니다. for문을 돌리면서 메일 목록을 불러오고요. 이렇게 다운 받은 목록은 불필요한 부분은 날려버리고, 필요한 부분만 json 형식으로 저장합니다. 메일 목록을 다 불러오면 다시 for문을 돌리면서 각 메일의 HTML과 이미지를 다운 받았습니다.</p>\n<h4 id=\"백업된-output-폴더-사진\">백업된 output 폴더 사진</h4>\n<p><img src=\"/img/%ED%94%84%EB%A9%94-%EB%B0%B1%EC%97%85-%EC%B4%88%EA%B8%B0.webp\" alt=\"백업된 폴더 사진\"></p>\n<h4 id=\"백업된-메일-html-파일들\">백업된 메일 html 파일들</h4>\n<p><img src=\"/img/%EB%A9%94%EC%9D%BC-html-%ED%8C%8C%EC%9D%BC%EB%93%A4.webp\" alt=\"메일 html 파일들\"></p>\n<h4 id=\"jquery-내장-뷰어\">JQuery 내장 뷰어</h4>\n<p>페이님은 JQuery와 iframe을 이용해서 단순한 HTML 뷰어도 같이 만들어 제공했습니다. 나름 예쁜 디자인으로 메일 파일을 열람해서 볼 수 있었습니다.\n<img src=\"/img/%EB%82%B4%EC%9E%A5%EB%B7%B0%EC%96%B4.webp\" alt=\"내장 뷰어 사진\"></p>\n<p>멋진 성과였습니다. 이제 손으로 하나하나 스크린샷을 찍을 필요가 없었습니다. 보안과 웹에 대한 지식을 활용해서 백업 과정을 자동화했으니까요. 메일은 모두 json과 HTML 파일이었기 때문에 용량도 8mb 정도 밖에 되지 않았습니다. (물론 이미지는 1기가를 넘었지만. 스크린샷은 8기가가 넘었습니다!)</p>\n<h2 id=\"과연-일반인이-프록시-서버를-쓸-수-있을까\">과연 일반인이 프록시 서버를 쓸 수 있을까?</h2>\n<p>하지만 여러 한계가 있었고, 이는 다른 개발자들과 페이님 스스로도 새로운 백업툴과 백업 뷰어를 만들기 시작하는 계기가 됩니다.</p>\n<p>당장 문제는 이게 너무 어렵다는 거였어요! 일반인이 프록시 서버를 설치하고, 와이파이 프록시를 설정하고, 인증서까지 설정... 할 수 있을까요? 설명서에는 다음 한 줄만 적혀 있었거든요.</p>\n<blockquote>\n<ol>\n<li>Burpsuite, Fiddler와 같은 HTTPS 프록시를 사용하여, 프라이빗 메일 패킷을 캡쳐합니다.</li>\n</ol>\n</blockquote>\n<p>이게 일반인은 물론이고 프로그래머도 구글링과 삽질을 해야 겨우 가능한 일이었죠. 저도 첫째날에 실패해서 2차 시도 만에 성공했습니다. 프메 백업 스크립트를 만들었지만, 몇 명 밖에 성공한 사람이 없는 상황이었습니다.</p>\n<p>다음 글에서는 개발자들이 어떻게 프메 백업을 쉽게 만들었는지 이야기해보겠습니다. 다음 주 월요일에 만나요~</p>\n<h2 id=\"자체-광고\">자체 광고</h2>\n<ul>\n<li>8월 24일 권은비 솔로 앨범 <a href=\"https://youtu.be/zAxDZuLfkZs\">Open</a> 발매</li>\n<li>8월 24일 최예나 웹 예능 <a href=\"https://www.youtube.com/playlist?list=PLAlM76XTWG8c_RrE3JgL7XOkbi6R4zLjC\">예나는 동물탐정</a> 첫 방송</li>\n<li>8월 24일 이채연 출연 <a href=\"https://youtu.be/YyPi7uBIWa8\">스트릿 우먼 파이터</a> 첫 방송</li>\n</ul>\n<p>많은 관심 부탁드려요~</p>\n","data":{"tocTree":[{"depth":2,"text":"한 오픈소스 생태계의 발전과 계보를 기록하다.","id":"한-오픈소스-생태계의-발전과-계보를-기록하다","i":0,"children":[{"depth":3,"text":"아이즈원 프라이빗 메일은 팬 전용 유료 SNS 입니다.","id":"아이즈원-프라이빗-메일은-팬-전용-유료-sns-입니다","i":1,"parent":true,"children":[]},{"depth":3,"text":"다양한 배경을 가진 개발자들, 복잡한 기술적 도전","id":"다양한-배경을-가진-개발자들-복잡한-기술적-도전","i":2,"parent":true,"children":[]},{"depth":3,"text":"발전 : 사용성을 개선하고, 성능을 최적화하기","id":"발전--사용성을-개선하고-성능을-최적화하기","i":3,"parent":true,"children":[]},{"depth":3,"text":"누구도 모르는 한 오픈소스 생태계의 역사","id":"누구도-모르는-한-오픈소스-생태계의-역사","i":4,"parent":true,"children":[]}]},{"depth":2,"text":"태초에 Payload와 Python이 있었다.","id":"태초에-payload와-python이-있었다","i":5,"children":[{"depth":3,"text":"아이즈원이 해체를 공식 발표하다.","id":"아이즈원이-해체를-공식-발표하다","i":6,"parent":true,"children":[]},{"depth":3,"text":"\"자기 책임 하에 백업합니다.\"","id":"자기-책임-하에-백업합니다","i":7,"parent":true,"children":[]},{"depth":3,"text":"\"수작업으로 스크린샷 찍어야 하나요...\"","id":"수작업으로-스크린샷-찍어야-하나요","i":8,"parent":true,"children":[]},{"depth":3,"text":"백업 데이터 저장소 : 방주 IZ*ARK","id":"백업-데이터-저장소--방주-izark","i":9,"parent":true,"children":[]},{"depth":3,"text":"보안을 공부하던 카이스트 대학생은 방주 사이트 개발팀이 되는데...","id":"보안을-공부하던-카이스트-대학생은-방주-사이트-개발팀이-되는데","i":10,"parent":true,"children":[]}]},{"depth":2,"text":"프록시 서버를 이용한 아이즈원 프메 백업 스크립트","id":"프록시-서버를-이용한-아이즈원-프메-백업-스크립트","i":11,"children":[{"depth":3,"text":"앱은 서버에게 HTTP 요청을 보냅니다.","id":"앱은-서버에게-http-요청을-보냅니다","i":12,"parent":true,"children":[]},{"depth":3,"text":"access-token을 이용한 사용자 인증","id":"access-token을-이용한-사용자-인증","i":13,"parent":true,"children":[]},{"depth":3,"text":"토큰을 낚아채는 프록시 서버","id":"토큰을-낚아채는-프록시-서버","i":14,"parent":true,"children":[]},{"depth":3,"text":"아직 HTTPS 인증서가 남았다.","id":"아직-https-인증서가-남았다","i":15,"parent":true,"children":[]},{"depth":3,"text":"준비 끝! 백업 시작!","id":"준비-끝-백업-시작","i":16,"parent":true,"children":[{"depth":4,"text":"백업된 output 폴더 사진","id":"백업된-output-폴더-사진","i":17,"parent":true,"children":[]},{"depth":4,"text":"백업된 메일 html 파일들","id":"백업된-메일-html-파일들","i":18,"parent":true,"children":[]},{"depth":4,"text":"JQuery 내장 뷰어","id":"jquery-내장-뷰어","i":19,"parent":true,"children":[]}]}]},{"depth":2,"text":"과연 일반인이 프록시 서버를 쓸 수 있을까?","id":"과연-일반인이-프록시-서버를-쓸-수-있을까","i":20,"children":[]},{"depth":2,"text":"자체 광고","id":"자체-광고","i":21,"children":[]}]},"permanlink":"/genealogy-of-iz-pm-backup-1/","tags":["오픈소스","생태계","아이즈원","크롤링","저작권","파이썬"]},{"slug":"front-map-by-job-posting","frontmatter":{"title":"채용공고로 그려보는 웹 프런트엔드의 지도","excerpt":"","date":"2021-08-13T11:03:04.295779","author":"탐정토끼(Taehee Kim)","tag":"작성 중"},"html":"<blockquote class=\"twitter-tweet\"><p lang=\"ko\" dir=\"ltr\">역시 뭘 배워야하나 싶으면 어디 로드맵 말고 채용공고를 읽어야.</p>&mdash; 탐정토끼 (Taehee Kim) (@stelo_kim) <a href=\"https://twitter.com/stelo_kim/status/1425327187247333377?ref_src=twsrc%5Etfw\">August 11, 2021</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n","data":{"tocTree":[]},"permanlink":"/front-map-by-job-posting/","tags":["작성 중"]},{"slug":"understanding-simple-server-network","frontmatter":{"title":"써보면서 배우는 HTTP 서버와 네트워크","excerpt":"0.0.0.0 은 무슨 뜻일까요? IP부터 CORS, method와 status 까지... 면접 질문이 아닙니다. 실제로 필요한 HTTP 네트워크에 대한 지식을 간단한 HTTP 서버를 만들어보며 배워봅시다.","date":"2021-08-12T19:28:27.107344","author":"탐정토끼(Taehee Kim)","tag":"작성 중"},"html":"<h2 id=\"이게-왜-필요하지---실제로-해보면서-배워요\">\"이게 왜 필요하지?\" -> 실제로 해보면서 배워요</h2>\n<h3 id=\"생활코딩-web1-심화편\">생활코딩 WEB1 심화편</h3>\n<h2 id=\"한-줄로-static-파일-서버-열기\">한 줄로 static 파일 서버 열기</h2>\n<h3 id=\"파이썬-설치하기\">파이썬 설치하기</h3>\n<h3 id=\"터미널-돌아다니기--cli-세계에-오신-걸-환영합니다\">터미널 돌아다니기 : CLI 세계에 오신 걸 환영합니다</h3>\n<p>pwd</p>\n<p>ls (dir)</p>\n<p>cd</p>\n<h3 id=\"html-파일을-만들기\">HTML 파일을 만들기</h3>\n<h3 id=\"python--m-httpserver-실행하기\">python -m http.server 실행하기</h3>\n<h3 id=\"pc-웹-브라우저에서-서버-접속하기\">PC 웹 브라우저에서 서버 접속하기</h3>\n<h3 id=\"핸드폰-웹-브라우저에서-서버-접속하기\">핸드폰 웹 브라우저에서 서버 접속하기</h3>\n<h2 id=\"under-the-hood-도대체-무슨-일이-일어난-거죠\">Under the Hood... 도대체 무슨 일이 일어난 거죠?</h2>\n<h3 id=\"큰-그림--브라우저와-서버가-요청과-응답을-주고-받았어요\">큰 그림 : 브라우저와 서버가 요청과 응답을 주고 받았어요</h3>\n<h3 id=\"개발자도구-network-탭-열어보기\">개발자도구 Network 탭 열어보기</h3>\n<h3 id=\"route-path--계층적-파일-경로\">Route Path : 계층적 파일 경로</h3>\n<p>디렉토리를 만들어요.</p>\n<p>디렉토리 안에 index.html을 만들어요.</p>\n<p>파일 경로 vs URL 경로</p>\n<h3 id=\"host--0000-은-무슨-뜻이죠\">Host : 0.0.0.0 은 무슨 뜻이죠?</h3>\n<p>호스트를 정해봅시다.</p>\n<h3 id=\"port-포트--80-3000-8000-이게-무슨-뜻이죠\">Port 포트 : 80, 3000, 8000... 이게 무슨 뜻이죠?</h3>\n<p>같은 포트에 서버를 하나 더 열어봅시다.</p>\n<h2 id=\"집-밖에서-내-서버에-접속하려면\">집 밖에서 내 서버에 접속하려면?</h2>\n<h3 id=\"192168-사설-ip--공유기가-할당해주는-주소\">192.168... 사설 IP : 공유기가 할당해주는 주소</h3>\n<h3 id=\"port-forwarding-포트-포워딩--공인-ip와-사설-ip를-연결하기\">Port Forwarding 포트 포워딩 : 공인 IP와 사설 IP를 연결하기</h3>\n<h3 id=\"라즈베리파이--미니-컴퓨터\">라즈베리파이 : 미니 컴퓨터</h3>\n<h3 id=\"termux--안-쓰는-안드로이드-폰을-리눅스-서버로-쓰기\">Termux : 안 쓰는 안드로이드 폰을 리눅스 서버로 쓰기</h3>\n<h3 id=\"클라우드-호스팅-서비스-서버리스-이용하기\">클라우드, 호스팅 서비스, 서버리스 이용하기</h3>\n<h3 id=\"status-code-상태-코드\">Status Code 상태 코드</h3>\n<p>304 Not Modified : 새로고침을 해봅시다.</p>\n<p>200 OK : 파일을 수정해봐요.</p>\n<p>404 Not Found : 없는 파일을 요청해봅시다.</p>\n<h2 id=\"swagger-open-api-로-http-요청과-응답-이해하기\">Swagger Open API 로 HTTP 요청과 응답 이해하기</h2>\n<h3 id=\"http-api-란\">HTTP API 란?</h3>\n<h3 id=\"http-method--get-post-patch-put-delete\">HTTP Method : Get, Post, Patch, Put, Delete</h3>\n<h3 id=\"query-params--\">Query Params : ?</h3>\n<h3 id=\"request-body--요청-본문\">Request Body : 요청 본문</h3>\n<p>요즘은 보통 json을 사용하지만, XML이나 protobuff도 있습니다.</p>\n<h3 id=\"request-header\">Request Header</h3>\n<h3 id=\"response-header\">Response Header</h3>\n<h3 id=\"상태코드-심화편\">상태코드 심화편</h3>\n<p>400 Bad Request : 잘못된 요청</p>\n<p>401 Unauthorized : 인증 필요</p>\n<p>403 Forbidden : 접근 거부</p>\n<p>Authorization 헤더를 달아봅시다</p>\n<h3 id=\"cache-control\">cache control</h3>\n<h2 id=\"현실-세상의-사이트를-돌아다녀보자\">현실 세상의 사이트를 돌아다녀보자</h2>\n<h3 id=\"도메인-이름과-dns\">도메인 이름과 DNS</h3>\n<h3 id=\"https-vs-http--ssl-인증서와-보안\">https vs http : SSL 인증서와 보안</h3>\n<h3 id=\"gzip\">gzip</h3>\n<h2 id=\"이제-어디로\">이제 어디로?</h2>\n<h3 id=\"커맨드라인-배워보기\">커맨드라인 배워보기</h3>\n<p>WSL2 사용하기\n리눅스 커맨드라인 생존 가이드</p>\n<p>curl</p>\n<h3 id=\"서버-만들어-보기\">서버 만들어 보기</h3>\n<h3 id=\"내가-쓰는-플랫폼과-언어에서-http-요청-보내기\">내가 쓰는 플랫폼과 언어에서 http 요청 보내기</h3>\n<p>js : axios, fetch, ky\npython : requests, httpx</p>\n<h3 id=\"http-스펙을-더-깊게-파고들기\">HTTP 스펙을 더 깊게 파고들기</h3>\n<p>MDN\nRFC</p>\n<p>그림으로 배우는 HTTP &#x26; Network Basic\nHTTP 완벽 가이드\n네트워크 하향식 접근</p>\n<p>김영한님 강의 <a href=\"https://www.inflearn.com/course/http-%EC%9B%B9-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC\">모든 개발자를 위한 HTTP 웹 기본 지식</a></p>\n<h3 id=\"http-20--http-30\">HTTP 2.0 / HTTP 3.0</h3>\n<p>Open API와 Swagger\ngRPC\nGraphQL</p>\n","data":{"tocTree":[{"depth":2,"text":"\"이게 왜 필요하지?\" -> 실제로 해보면서 배워요","id":"이게-왜-필요하지---실제로-해보면서-배워요","i":0,"children":[{"depth":3,"text":"생활코딩 WEB1 심화편","id":"생활코딩-web1-심화편","i":1,"parent":true,"children":[]}]},{"depth":2,"text":"한 줄로 static 파일 서버 열기","id":"한-줄로-static-파일-서버-열기","i":2,"children":[{"depth":3,"text":"파이썬 설치하기","id":"파이썬-설치하기","i":3,"parent":true,"children":[]},{"depth":3,"text":"터미널 돌아다니기 : CLI 세계에 오신 걸 환영합니다","id":"터미널-돌아다니기--cli-세계에-오신-걸-환영합니다","i":4,"parent":true,"children":[]},{"depth":3,"text":"HTML 파일을 만들기","id":"html-파일을-만들기","i":5,"parent":true,"children":[]},{"depth":3,"text":"python -m http.server 실행하기","id":"python--m-httpserver-실행하기","i":6,"parent":true,"children":[]},{"depth":3,"text":"PC 웹 브라우저에서 서버 접속하기","id":"pc-웹-브라우저에서-서버-접속하기","i":7,"parent":true,"children":[]},{"depth":3,"text":"핸드폰 웹 브라우저에서 서버 접속하기","id":"핸드폰-웹-브라우저에서-서버-접속하기","i":8,"parent":true,"children":[]}]},{"depth":2,"text":"Under the Hood... 도대체 무슨 일이 일어난 거죠?","id":"under-the-hood-도대체-무슨-일이-일어난-거죠","i":9,"children":[{"depth":3,"text":"큰 그림 : 브라우저와 서버가 요청과 응답을 주고 받았어요","id":"큰-그림--브라우저와-서버가-요청과-응답을-주고-받았어요","i":10,"parent":true,"children":[]},{"depth":3,"text":"개발자도구 Network 탭 열어보기","id":"개발자도구-network-탭-열어보기","i":11,"parent":true,"children":[]},{"depth":3,"text":"Route Path : 계층적 파일 경로","id":"route-path--계층적-파일-경로","i":12,"parent":true,"children":[]},{"depth":3,"text":"Host : 0.0.0.0 은 무슨 뜻이죠?","id":"host--0000-은-무슨-뜻이죠","i":13,"parent":true,"children":[]},{"depth":3,"text":"Port 포트 : 80, 3000, 8000... 이게 무슨 뜻이죠?","id":"port-포트--80-3000-8000-이게-무슨-뜻이죠","i":14,"parent":true,"children":[]}]},{"depth":2,"text":"집 밖에서 내 서버에 접속하려면?","id":"집-밖에서-내-서버에-접속하려면","i":15,"children":[{"depth":3,"text":"192.168... 사설 IP : 공유기가 할당해주는 주소","id":"192168-사설-ip--공유기가-할당해주는-주소","i":16,"parent":true,"children":[]},{"depth":3,"text":"Port Forwarding 포트 포워딩 : 공인 IP와 사설 IP를 연결하기","id":"port-forwarding-포트-포워딩--공인-ip와-사설-ip를-연결하기","i":17,"parent":true,"children":[]},{"depth":3,"text":"라즈베리파이 : 미니 컴퓨터","id":"라즈베리파이--미니-컴퓨터","i":18,"parent":true,"children":[]},{"depth":3,"text":"Termux : 안 쓰는 안드로이드 폰을 리눅스 서버로 쓰기","id":"termux--안-쓰는-안드로이드-폰을-리눅스-서버로-쓰기","i":19,"parent":true,"children":[]},{"depth":3,"text":"클라우드, 호스팅 서비스, 서버리스 이용하기","id":"클라우드-호스팅-서비스-서버리스-이용하기","i":20,"parent":true,"children":[]},{"depth":3,"text":"Status Code 상태 코드","id":"status-code-상태-코드","i":21,"parent":true,"children":[]}]},{"depth":2,"text":"Swagger Open API 로 HTTP 요청과 응답 이해하기","id":"swagger-open-api-로-http-요청과-응답-이해하기","i":22,"children":[{"depth":3,"text":"HTTP API 란?","id":"http-api-란","i":23,"parent":true,"children":[]},{"depth":3,"text":"HTTP Method : Get, Post, Patch, Put, Delete","id":"http-method--get-post-patch-put-delete","i":24,"parent":true,"children":[]},{"depth":3,"text":"Query Params : ?","id":"query-params--","i":25,"parent":true,"children":[]},{"depth":3,"text":"Request Body : 요청 본문","id":"request-body--요청-본문","i":26,"parent":true,"children":[]},{"depth":3,"text":"Request Header","id":"request-header","i":27,"parent":true,"children":[]},{"depth":3,"text":"Response Header","id":"response-header","i":28,"parent":true,"children":[]},{"depth":3,"text":"상태코드 심화편","id":"상태코드-심화편","i":29,"parent":true,"children":[]},{"depth":3,"text":"cache control","id":"cache-control","i":30,"parent":true,"children":[]}]},{"depth":2,"text":"현실 세상의 사이트를 돌아다녀보자","id":"현실-세상의-사이트를-돌아다녀보자","i":31,"children":[{"depth":3,"text":"도메인 이름과 DNS","id":"도메인-이름과-dns","i":32,"parent":true,"children":[]},{"depth":3,"text":"https vs http : SSL 인증서와 보안","id":"https-vs-http--ssl-인증서와-보안","i":33,"parent":true,"children":[]},{"depth":3,"text":"gzip","id":"gzip","i":34,"parent":true,"children":[]}]},{"depth":2,"text":"이제 어디로?","id":"이제-어디로","i":35,"children":[{"depth":3,"text":"커맨드라인 배워보기","id":"커맨드라인-배워보기","i":36,"parent":true,"children":[]},{"depth":3,"text":"서버 만들어 보기","id":"서버-만들어-보기","i":37,"parent":true,"children":[]},{"depth":3,"text":"내가 쓰는 플랫폼과 언어에서 http 요청 보내기","id":"내가-쓰는-플랫폼과-언어에서-http-요청-보내기","i":38,"parent":true,"children":[]},{"depth":3,"text":"HTTP 스펙을 더 깊게 파고들기","id":"http-스펙을-더-깊게-파고들기","i":39,"parent":true,"children":[]},{"depth":3,"text":"HTTP 2.0 / HTTP 3.0","id":"http-20--http-30","i":40,"parent":true,"children":[]}]}]},"permanlink":"/understanding-simple-server-network/","tags":["작성 중"]},{"slug":"daily-review-guide","frontmatter":{"title":"일일회고 가이드","excerpt":"일일회고는 매일 구체적인 학습 목표를 세우고, \"나는 어떤 방식으로 공부하는지? 나는 뭘 알고 뭘 모르는지? 지속적으로 점검하면서 알아차리고 개선\"해나갈 수 있게 도와줍니다.","date":"2021-08-12T09:44:35.533674","author":"탐정토끼(Taehee Kim)","tag":"회고, 메타인지, 애자일"},"html":"<p>일일회고는 다음 3가지를 적어보시면 됩니다. 간단하죠.</p>\n<blockquote>\n<ol>\n<li>오늘 어디에 도전해보셨고, 무엇을 배우셨나요?</li>\n<li>학습하시면서 궁금하신 부분이나, 어려웠던 점은 뭘까요?</li>\n<li>내일은 어떻게 해보고 싶으세요?</li>\n</ol>\n</blockquote>\n<p>일일회고는 메타인지를 활성화시키는 게 목적입니다.</p>\n<p>메타인지가 뭐냐고요? <strong>나는 어떤 방식으로 공부하는지? 나는 뭘 알고 뭘 모르는지? 지속적으로 점검하면서 알아차리고 개선해나가는 능력입니다.</strong> 이런 사람은 나날이 성장할 뿐만 아니라, 배우고 성장하는 속도가 점점 빨라질 수 밖에 없겠죠. 실제로 메타인지는 1.4 표준편차가 넘는 놀라운 효과 크기가 있는데요. 평범한 말로 옮겨보면 메타인지를 높일 수만 있다면, 수능 6등급이 1~2등급이 될 수도 있는 어마어마한 차이입니다.</p>\n<p>아직 좀 막연하시죠? 이제 예시를 보면서 안내를 드릴게요.</p>\n<h2 id=\"도전적이고-구체적인-목표를-세워보자\">도전적이고 구체적인 목표를 세워보자</h2>\n<p>어떤 목표를 세워야 할까요? 평소에 프로젝트를 하면서 모르거나, 궁금한 부분을 기록해두면 가장 좋습니다. 하지만 당장 아는 것도 없고 떠오르는 것도 없을 수도 있죠. 그런 때에는 채용공고들을 읽으면서, 요구하는 자격 조건들을 살펴보세요.</p>\n<p>예를 들어 프런트 개발자 공고를 보면 대부분 HTML과 CSS 등 마크업에 익숙하신 분을 찾습니다. 그러면 \"오늘은 HTML을 배우자!\"고 하면 될까요? 이런 목표는 좀 두루뭉술하죠. 뭘 어떻게 공부해야할지 감도 안 잡힙니다. 초보자는 \"HTML은 뭘 공부해야해요?\"라는 생각이 들 거고요. 또 조금 공부한 사람은 \"나는 이미 HTML은 좀 아는데?\"라고 자만하겠죠.</p>\n<h3 id=\"내가-모르는-부분-찾기\">내가 모르는 부분 찾기</h3>\n<p>그렇다면 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\">MDN</a>이라던가, <a href=\"https://www.w3schools.com/html/\">W3School</a>의 목차를 한 번 쭉 살펴보세요. 아니면 <a href=\"https://fastcampus.co.kr/dev_red_jcm\">좋은 강의 커리큘럼</a>도 좋습니다. 읽다보면 모르는 단어나, 알고는 있는데 정확하게 설명해보라면 못하겠는 친구가 있을 거에요. 모르는 게 너무 많아도 괜찮습니다. 그 중에 딱 1~3개만 골라보세요.</p>\n<p>예를 들어 저는 head 안에 들어가는 meta 태그가 궁금해졌어요. 최근에 charset을 UTF-8로 안 해줘서 한글이 깨지거나... open graph 설정이 안 되서 트위터에 링크 썸네일이 안 보이거나... viewport를 잘못 설정해서 모바일에서 화면이 깨지는 등등... meta 태그를 잘 몰라서 헤맸던 적이 있었거든요. metadata가 SEO(검색엔진 최적화)에도 중요하다고 하네요. 그래서 다음 3가지 학습 자료를 정했습니다.</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\">MDN : What’s in the head? Metadata in HTML</a></li>\n<li><a href=\"https://www.w3schools.com/html/html_head.asp\">W3School: HTML - The Head Element</a></li>\n<li><a href=\"https://html.spec.whatwg.org/multipage/semantics.html#the-meta-element\">HTML Living Standard: 4.2.5 The meta element</a></li>\n</ul>\n<h3 id=\"테스트할-수-있는-목표로-만들기\">테스트할 수 있는 목표로 만들기</h3>\n<p>저는 더 나아가서 목표를 측정하거나, 확인할 수 있게 만드시길 권해요. 자료 5페이지 읽기나 30분 공부하기 같은 걸 말하는 게 아니라요. 내가 이 개념을 공부해서, 어떤 문제를 해결할 수 있는 \"역량\"을 갖췄는지 테스트해보는 겁니다.</p>\n<p>저 같은 경우에는 원래 프로젝트를 하면서 느낀 점들이 있었어요. 그래서 다음과 같이 만들어봤습니다.</p>\n<p><strong>metadata 에는 무엇이 있고, 어떤 용도인지 설명할 수 있다.</strong></p>\n<ul>\n<li>meta tag의 property들을 외우고 설명할 수 있다.</li>\n<li>charset을 utf-8로 설정하지 않으면 한글이 깨지는 이유를 설명할 수 있다</li>\n<li>title tag를 설정할 수 있다.\n<ul>\n<li>F12 개발자 도구 Light House SEO 점수를 높인다.</li>\n<li>즐겨찾기나 tab 이름이 바뀌는 것도 확인한다.</li>\n</ul>\n</li>\n<li>open graph 를 설정해서 트위터에 카드와 썸네일이 뜨게 할 수 있다.\n<ul>\n<li>open graph의 각 propery를 외우고 설명할 수있다.</li>\n</ul>\n</li>\n<li>그 외에 더 많은 과제를 찾아본다</li>\n</ul>\n<h2 id=\"실제로-해보면서-기록하자\">실제로 해보면서 기록하자</h2>\n<h3 id=\"궁금한-것들을-기록하자\">궁금한 것들을 기록하자</h3>\n<p>구체적으로 자료를 읽고, HTML도 만들어보면서 실습하다보면 궁금한 게 생길 겁니다. 이게 뭐지? 자료를 찾아보다보면 의문이 풀리기도 하겠지만. 보통은 모르는 게 훨씬 더 많이 생길 겁니다. 일단은 \"이런 게 있구나\" 정도만 알아두세요. 그리고 어디 적어두세요. 나중에 새로운 목표가 될 겁니다.</p>\n<h3 id=\"어려웠던-부분을-기록하자\">어려웠던 부분을 기록하자</h3>\n<p>한편으로는 내가 공부하는 방식, 학습 전략도 기록해볼 필요가 있습니다.</p>\n<p>예를 들어 HTML에 대한 문서나 자료를 읽는다면 어떤 것부터 하시나요? 막막하고 이해가 안 가진 않나요?</p>\n<p>무슨 소리인지 모르겠어서 일단 영상이나 실습부터 해본다면... 영상이 없을 때에는 어떻게 할까요?</p>\n<p>이런 어려움과 고통을 \"원래 내가 머리가 나빠서\"라던가 \"아직 배경지식이 없어서\" 같이 퉁치고 지나가면 안 됩니다. 생각해보면 특히 이해하기 어려운 부분이 있을 수도 있고요. 그런 친구들은 어떤 특징이 있는지 생각해보세요.</p>\n<p>예를 들어...</p>\n<ul>\n<li>문서가 어렵다.\n<ul>\n<li>모르는 용어가 많다.\n<ul>\n<li>모르는 용어에 대해서 설명을 읽거나, 검색해봐도 뜻을 모르겠다.\n<ul>\n<li>전에 찾아봤었는데, 다시 보니까 기억이 안 난다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>이런 어려움과 고통을 잘 알아차리고 기록만 해둔다면, 막막했던 두려움은 해결할 수 있는 문제가 됩니다. 새로운 전략을 만들어서 시도해볼 수 있고요. 점점 더 효율적으로 공부하게 되고. 점점 효능감-나도 할 수 있다는 마음-이 쌓이게 될 거에요.</p>\n<h2 id=\"개선하고-실험하고-도전하자\">개선하고, 실험하고, 도전하자!</h2>\n<p>이렇게 쌓인 궁금증은, 내일을 위한 연료가 됩니다. 내일은 뭘 배울지 다시 새로운 목표를 세워보세요.</p>\n<p>비효율적인 옛날 습관과는 안녕입니다. 어려움을 해결할 방법을 생각해보세요. 전략을 세워서 어려움을 공략해야 합니다. 매일매일 새로운 방식으로 공부해보세요.</p>\n<p>예를 들어 모르는 용어가 많다면? 자료를 읽으면서 모르는 용어들을 정리해볼 수 있겠죠. 설명을 찾아봐도 이해가 안 간다면, 구체적인 예제를 찾아볼 수도 있습니다. 헷갈리는 부분을 직접 html에 쳐서 실험해볼 수도 있고요.</p>\n<p>그래도 모르겠다면 누군가 물어볼 사람을 찾을 수도 있습니다.</p>\n<p>자꾸 용어를 까먹는다면 단어장을 만들어서 외울 수도 있습니다. 그냥 읽기만 하면 까먹기 쉽죠. 스스로 질문을 던지고 설명할 수 있는지 테스트해보면 좋습니다. 이렇게 테스트를 해보면 어느 정도 익숙해진 용어가 있고, 여전히 어려운 용어가 있을 거에요. 어려운 용어 위주로 집중해서 테스트를 보면 더 좋겠죠.</p>\n<p>개선에는 끝이 없습니다. 처음부터 완벽할 수는 없어요. 대신 내일은 어떻게 해보자 하고 작은 목표를 1~3가지 세워보세요. 예를 들어 이렇게 할 수 있습니다.</p>\n<ul>\n<li>HTML 태그 단어장을 만들자.</li>\n<li>매일 어제 배운 개념을 테스트하고 복습하면서 시작하자.</li>\n<li>자료를 무작정 읽기만 하지 말자. 중간중간에 질문을 던지고 스스로 설명해보고, 이해했는지 점검하자.</li>\n</ul>\n<p>어려움을 명확하게 파악하기만 하면, 개선 방법을 찾는 건 생각보다 쉽습니다. 하지만 새로운 방법이 잘 떠오르지 않으실 수도 있죠. ㅠㅠ 그런 때에는 저 같은 코치나 다른 사람에게 질문도 해보시고, 도움을 받아보세요. 우리는 혼자가 아니니까요. 적극적으로 질문하고 도움을 구해보세요. 그리고 누군가 도움이 필요하면 여러분도 도움을 줄 수 있게 되시면 좋겠습니다.</p>\n","data":{"tocTree":[{"depth":2,"text":"도전적이고 구체적인 목표를 세워보자","id":"도전적이고-구체적인-목표를-세워보자","i":0,"children":[{"depth":3,"text":"내가 모르는 부분 찾기","id":"내가-모르는-부분-찾기","i":1,"parent":true,"children":[]},{"depth":3,"text":"테스트할 수 있는 목표로 만들기","id":"테스트할-수-있는-목표로-만들기","i":2,"parent":true,"children":[]}]},{"depth":2,"text":"실제로 해보면서 기록하자","id":"실제로-해보면서-기록하자","i":3,"children":[{"depth":3,"text":"궁금한 것들을 기록하자","id":"궁금한-것들을-기록하자","i":4,"parent":true,"children":[]},{"depth":3,"text":"어려웠던 부분을 기록하자","id":"어려웠던-부분을-기록하자","i":5,"parent":true,"children":[]}]},{"depth":2,"text":"개선하고, 실험하고, 도전하자!","id":"개선하고-실험하고-도전하자","i":6,"children":[]}]},"permanlink":"/daily-review-guide/","tags":["회고","메타인지","애자일"]},{"slug":"my-programming-story","frontmatter":{"title":"내가 코딩을 해온 이야기","excerpt":"제대로 된 로봇을 코딩하고 싶은 게 시작이었는데. 어쩌다 여기까지 왔는지 이야기해보려 합니다.","date":"2021-07-20T15:56:54.826458","author":"탐정토끼(Taehee Kim)","tag":"초고, 이야기"},"html":"<p>이따금씩 제가 어떻게 코딩을 시작했는지? 아니면 어떤 사람인지 궁금해하시는 분들이 있습니다. 그런 분들을 위해 TMI 솔직한 이야기를 적어봤습니다. 저도 특이하고 이상한 사람이지만, 동시에 평범하게 삽질하고 좌절하는 사람이라는 걸 알아주시면 좋겠습니다.</p>\n<h2 id=\"부모님은-프로그래머셨고-컴퓨터-학원에서-자랐다\">부모님은 프로그래머셨고, 컴퓨터 학원에서 자랐다.</h2>\n<p>이런 이야기는 어린 시절부터 시작하죠.</p>\n<p>제 부모님은 프로그래머이셨습니다. 그게 영향을 미치긴 했을 겁니다.</p>\n<p>어머니는 컴퓨터 학원을 하셨고, 저는 초등학교에 들어가기도 전부터 컴퓨터 학원에서 게임을 했습니다. 전화선으로 모뎀을 하던 시절도 기억나고요. 처음 광랜을 깔고 나서 아버지가 설명하시던 것도 기억이 납니다.</p>\n<p>집에는 아버지가 쓰신 두꺼운 프로그래밍 책이 있었지만, \"웹 마스터\"나 \"클리퍼 윈도우 프로그래밍\" 같은 주제였죠. 2008년에 아버지가 다니던 회사가 망해서 집에서 웹 사이트만 만들고 계시는 것도 보았습니다. 아버지는 그때도 지금도 JSP와 나모 웹 에디터를 쓰십니다.</p>\n<h2 id=\"친구들이-신기해하는-로봇을-만들고-싶었다\">친구들이 신기해하는 로봇을 만들고 싶었다.</h2>\n<p>제가 초등학생일 시절에 학교 방과후 활동으로 '로봇 제작'을 했습니다. \"하늘아이\"라는 회사였는데요. 라인트레이서라던가 이것저것 만들어 봤습니다. 특이한 블록코딩 시스템을 사용했는데, UI가 너무 비직관적이고 추상적이라 전혀 이해하질 못했습니다. 학년이 올라가면서 단계가 올라가고, 더 복잡한 로봇 키트를 만들었고요. 대회도 나갔습니다. 납땜하다가 부품이 타버려서 실패하고 돌아왔던 걸로 기억합니다.</p>\n<p>로봇을 만들면서 여러모로 즐거웠습니다. 내가 만든 게 돌아가고, 적외선 리모컨으로 조종도 하고요. 로봇을 가져오는 날이면 애들이 신기해하면서 자기도 해보겠다고 난리였습니다. 그 관심이 기쁘기도 하면서도, 저는 왕따였기 때문에 로봇이 부서지기도 하고 그랬죠.</p>\n<p>중학생이 되고 로봇 방과후도 사라졌습니다. 저는 좀 더 제대로 된 로봇을 만들고 싶었습니다. 도서관에 가서 책을 찾아보려는데, 너무 키가 작아서 어떤 누나가 꺼내줬던 게 기억이 납니다. 그 책은 [AVR 바이블]이었습니다.</p>\n<h2 id=\"avr과-c는-너무-어려웠다\">AVR과 C는 너무 어려웠다...</h2>\n<p>그때는 아두이노 같은 게 없었습니다. AVR은 대학생들이 졸작용으로 많이 쓰는 저렴한 칩인데, 아두이노도 AVR 기반입니다. 그래서 C로 직접 어떤 핀에 어떻게 신호가 들어오고 어떻게 나가는지... 저수준에서 직접 코딩해야했습니다. 기판도 부품을 사서 직접 납땜을 했습니다.</p>\n<p>어떻게 코드를 짰는지 기억은 잘 나지 않습니다. 이리저리 시도해봤지만 로봇은 돌아가지 않았습니다. 그게 납땜을 잘못했는지, 에러가 나면서 부품이 타버린 건지는 모르겠습니다. 아버지도 제 코드를 보고 고쳐보려 하셨지만, 결국 원인은 찾지 못하고 실패로 끝났습니다.</p>\n<h2 id=\"자바랑-sql만-할-줄-알면-된다\">자바랑 SQL만 할 줄 알면 된다!</h2>\n<p>저희 아버지가 늘 하시는 이야기 중에 하나입니다. 아버지는 제가 프로그래머가 되시길 바랬습니다. [자바의 정석]을 사서 공부했습니다. 책 내용은 그리 나쁘지 않았는데, 이게 실제로 뭘 만들어보지 않으니 재미가 없었습니다. Swing으로 이것저것 해보려던 기억 정도입니다.</p>\n<p>하지만 아버지의 바람과 달리, 저는 프로그래머가 될 생각이 없었습니다. 대신 저는 우연한 계기로 물리학에 빠지게 되었죠. -이건 또 이야기할 기회가 있을 겁니다.-</p>\n<p>고등학생 때 저는 물리학이 너무 좋았습니다. 진로를 고민하면서 복잡계 쪽이나, 물리 교사, 아니면 2014년 당시에 신생 학문이었던 \"데이터 과학\"은 어떨지 고민했습니다. 복잡계는 참 신기하고 미래가 있는 분야처럼 보였습니다. 이른바 통섭! 열풍과 함께 \"새로운 물리학은 사회 과학도 설명할 수 있지 않을까?\"하는 기대가 커졌으니까요. [카오스], [과학 콘서트], [복잡계 개론], [사회적 원자], [구글 신은 모든 것을 알고 있다], [넥서스], [사회적 원자], [링크] 같은 책을 열심히 읽었던 기억이 납니다.</p>\n<h2 id=\"빅데이터와-파이썬\">빅데이터와 파이썬</h2>\n<p>대학에 들어가고 갑자기 \"빅데이터\" 광풍이 몰아쳤습니다. 당시의 빅데이터는 지금처럼 \"딥러닝\" \"인공지능\"과는 좀 달랐습니다. 제가 좋아하는 물리학, 특히 복잡계랑 이런저런 관련이 있었습니다. 삼성 경제 연구소 SERI에서 [빅데이터 경영을 바꾸다]를 쓴 채승병 연구원은 원래 복잡계 물리학을 하시던 분입니다. 복잡계 물리학 연구자들은 하나 둘 씩 빅데이터 열풍에 탑승하기 시작했습니다.</p>\n<p>저도 데이터 과학을 좀 해봐야겠다고 생각해서 여러 책을 사서 읽고 공부했습니다. 그때는 통계 진영의 R과 전통 프로그래밍에 가까운 파이썬이 양강 구도를 이루고 있었는데요. 그래서 통계학도 공부했고 R도 어느 정도 다루게 되었습니다. 한편으로는 파이썬으로 Pandas나 Numpy, Scikit-Learn, NLTK, Matplot 등을 다루는 건 예나 지금이나 비슷했습니다.</p>\n<p>하지만 흐름은 점차 \"인공 신경망\", 즉 \"딥러닝\" 쪽으로 기울기 시작했습니다. 저는 딥러닝에 여러모로 관심이 있긴 했지만. 잘 모르기도 했고, 좀 공부한 뒤에는 불만을 느끼기 시작했습니다. 일단 피드백이 너무 느렸거든요. 어떤 모델의 원리를 머릿 속으로 생각하고 고민하고 기법을 적용해도. 모델이 학습하는 데에는 너무 오랜 시간이 걸렸습니다.</p>\n<h2 id=\"생활코딩으로-웹-개발을-시작하다\">생활코딩으로 웹 개발을 시작하다.</h2>\n<p>하루는 동생이 생활코딩이라는 사이트를 알려줬습니다. 취미삼아 HTML, CSS 기초부터 시작해서 웹 개발을 해보기 시작했습니다. 생각보다 재미있었습니다. 간단하게 Node도 써보고, 파이썬 Django와 Flask를 배워서 해봤습니다. 간단하고 이것저것 해보기 좋은 프레임워크였죠.</p>\n<p>이고잉님은 지금 생각해도 좀 독보적인 분입니다. 학습자의 마음을 헤아리는 말 한 마디 한 마디 하며, \"이걸 10억 번 해야한다고 생각해보세요!\"라는 명대사로 \"중복의 제거\" 같은 개념들을 제 마음에 심어주셨죠.</p>\n<p>하지만 저는 여전히 웹 개발자가 될 생각은 없었습니다.</p>\n<h2 id=\"군대에서-엑셀-개발자가-되다\">군대에서 엑셀 개발자가 되다.</h2>\n<p>저는 군대 갔고 통신병 보직을 받았습니다. 저희 부대에서 통신병은 행정병 일도 같이 했었는데요. 선임들은 간단한 엑셀 수식을 걸어서 이런저런 일을 편하게 하고 있었습니다. 저도 매일 엑셀 도움말을 보면서 이런저런 함수와 단축키를 익혔죠</p>\n<p>그 모습을 보던 행정 보급관님께서 하루는 저에게 \"경작서를 엑셀로 짤 수 있겠느냐?\"고 물어보셨습니다. 이게 제 첫 임무의 시작이었습니다.</p>\n<p>상황을 설명하면 이렇습니다.</p>\n<p>경작서는 몇 시부터 몇 시까지 누가 불침번을 설지, 당번을 정하는 계획표입니다. 모든 병사들이 골고루 돌아가면서 근무를 서야 불만이 없습니다. 문제는 당시에는 이 모든 걸 사람 머리로 해야했고, 경작서 양식에 손으로 기입했습니다. 실수로 누가 휴가를 가는데 근무를 편성하거나... 근무표를 짜놨는데 누가 휴가를 가서 근무표를 수정해야하면... 지옥이었죠. 상사이신 행정보급관님이 겨우 이런 업무 때문에 매일 야근을 하셨습니다. 아직 유치원생이신 아드님에게 전화가 걸려와 \"아빠 언제와. ㅠㅠ 나 혼자야. 무서워. 엄마도 아직 안 왔어.\" 같은 대화를 옆에서 듣고 있으면, 슬플 따름이었습니다.</p>\n<p>제 선임들도 이걸 시도해봤지만, 모두 실패했습니다. 군대에서는 파이썬은 물론이고, 엑셀의 VBA도 보안 때문에 금지되어 있습니다. 남은 건 오직 기본 함수들 뿐이죠. 이걸로 복잡한 프로그램을 작성할 수 있을까요? 저도 마찬가지로 실패했습니다.</p>\n<p>체념하고 재활용 쓰레기를 버리러 가는 중이었습니다. 그러다 머리 속에 유레카가 떠올랐습니다. 기능이 없으면 만들면 되죠. 기본 함수들을 조합해서 제가 원하는 기능을 만들 방법이 떠오른 것이었습니다!</p>\n<p>엑셀은 react처럼 반응형으로 동작합니다. 그때는 잘 몰랐지만, 저는 근무를 짜는 달력(상태)과 이를 경작서 문서 양식에 맞게 변환하는 시트를 분리했습니다. 그래서 달력에서 편하게 근무를 짤 수 있었고요. 누가 언제부터 언제까지 휴가를 가고, 근무를 몇 번 섰는지도 통계 대시보드를 만들어 넣었습니다.</p>\n<p>제가 만든 첫 엑셀 앱은 성공을 거뒀습니다. 점점 기능을 추가하면서 발전했고, 버그도 고쳤습니다. 예를들면 초기 버전에서는 30일이냐 31일이냐, 사람이 몇 명인지 등을 하드 코딩했습니다. 부대에 신입이 들어오고, 말년은 전역할 때마다 관련된 값을 바꿔줘야했죠. 이걸 derived하게 계산한 값으로 고쳤습니다.</p>\n<p>이 경작서 양식은 근처에 다른 부대로도 수출되고, 저는 출장AS를 다니기도 했습니다. 무엇보다 기쁜 일은 뭐였냐면, 나중에 저희 행보관님의 가족 분들이 부대를 방문하셨을 때였습니다. 행보관님이 저를 \"내 야근을 없애준 그 친구\"로 소개해주셨거든요.</p>\n<p>코딩이 사용자에게 가치를 전할 수 있다는 걸, 몸소 느끼고 체험했던 경험이었습니다.</p>\n<h2 id=\"사무-자동화-운동을-벌이다\">사무 자동화 운동을 벌이다.</h2>\n<p>한 번 성공을 맛본 저는 더 많은 걸 자동화하고 싶어졌습니다. 예를들어 휴가나 진급 같은 인사 관련 서류를 만들 때, 인사 행정병들은 병사들의 이름, 군번, 계급 같은 인적사항을 찾아서 하나하나 옮겨 적었습니다. 그래서 담당 병사들은 보통 이런 연명부를 통째로 외워야 했습니다. 역시 야근을 하지 않는 날이 없었죠.</p>\n<p>VLOOKUP과 여러 기능을 동원해서 자동으로 인사 명령지를 채워주는 친구를 만들었습니다. 여기서도 문제는 있었는데요. 군번은 유일키지만, 이름은 동명이인이 있을 수 있습니다. 문제는 군번을 외우기 힘들어서 이 프로그램을 만들었다는 것이죠. 동명이인을 따로 빼서 사람이 처리할 수 있도록 만들었습니다.</p>\n<p>이런 식으로 군수, 병기, 교육, 각종 현황 관리 등등... 다양한 업무를 자동화해나가던 중. 문제가 생겼습니다.</p>\n<h2 id=\"사람들의-말을-들어야한다\">사람들의 말을 들어야한다.</h2>\n<p>한 간부님이 저를 부르셨습니다. 제가 만든 양식이 편리하지만, 상부에서 내려준 공식 양식과 달라서 쓸 수 없다는 것이었죠. 처음에는 당황스러웠지만, 금세 해결책을 찾았습니다. 이 편리한 양식으로 관리하면, 알아서 '보고용' 양식으로 변환해주도록 만들었습니다.</p>\n<p>그 다음에는 새 양식이 불편하다, 사용법을 잘 모르겠다는 사람들이 나왔습니다. 사실 자동화는 편리하지만, 낯설기도 합니다. 지나치게 추상화를 하면 뭔가 간결하고 돌아가긴 하는데, 마치 이해하기 어려운 함수형 코드처럼 되죠. 이때도 이런 트레이드 오프를 고민한 끝에, 핵심이 아닌 기능들을 버렸습니다. 익숙한 핵심 기능만 남겨놓으니 직관적이고 편리한 친구가 되었습니다.</p>\n<p>하지만 여전히 새 양식은 잘 퍼지지 않았습니다. 이 양식은 저희 중대 뿐만 아니라 저희 대대 전체에서 쓰는 양식이었습니다. 대대에서 공식적으로 새 양식을 쓰기로 결정했지만, 옛날 양식을 써서 제출하는 사람들이 많았습니다.</p>\n<p>저는 각 중대를 돌면서 담당자(당직 근무자)를 만났습니다. 새 양식을 보여주고, 지금까지 우리가 삽질했던 걸 얼마나 쉽고 편리하게 할 수 있는지 보여줬습니다. 사실 모두 호의적인 반응을 보였습니다. 이런 양식이 있는 줄 몰랐다던가. 저번에 양식을 받았는데 어디에 뒀는지 모르겠다는 식의 답을 받았죠. 그래서 양식이 정착될 때까지 매번 파일을 전파해주고, 같이 사용법도 적어놓았습니다.</p>\n<p>어느새 새 양식은 널리 퍼졌고, 당연하게 여겨졌습니다.</p>\n<p>저는 전문하사로 7개월을 더 있었습니다. 후임들을 교육하고 단축키와 엑셀 함수를 알려줬습니다. 제가 없어도 사람들이 제 양식을 고치고 수정하는 모습을 보며. 저는 사회로 돌아왔습니다.</p>\n<h2 id=\"첫-팀-프로젝트에서-고통을-맛보다\">첫 팀 프로젝트에서 고통을 맛보다.</h2>\n<p>사회로 돌아오고, 이제 졸업이 얼마남지 않게 되었습니다. 저는 교내에 데이터 분석 스터디를 만들어 공부를 했습니다. 그러다 한 스터디원님이 같이 프로젝트를 해보자고 권유를 하셨죠. 급히 회의를 해서 기획서를 만들었고요. 제 첫 프로젝트인 [TRAS 한국 여행자 후기 분석 시스템]을 시작했습니다.</p>\n<p>결말부터 말하자면 프로젝트는 혼돈 그 자체였습니다. 팀장은 소프트웨어 학과 4학년인 분이었는데. 프런트도 백엔드도 할 줄 몰랐습니다. 딥러닝 모델을 만들겠다고 했는데, 깃허브에 커밋이 올라오질 않았습니다.</p>\n<p>그나마 손톱만한 지식을 가지고 있는 건 저 밖에 없었습니다. 성실하고 열정이 있으신 다른 팀원 분과 둘이서 크롤링하고, 전처리하고, 모델을 만들고, 백엔드 서버를 만들고, 프런트 React도 만들게 되었습니다.</p>\n<p>이때 얻은 교훈은 한 두 가지가 아닙니다. 프로젝트를 만들어보는 건 학습의 밀도가 달랐습니다. 1주일에 책을 2권씩 봤습니다. 하지만 책에 없는 게 더 많았죠. 공식 문서를 찾아보면서 삽질하고 삽질했습니다.</p>\n<p>한편으로는 웹 개발에 자신감이 생겼고, 데이터 분석 말고 웹 개발 쪽으로 가보는 건 어떨지 고민하기 시작했습니다.</p>\n<p>프로젝트를 끝날 때 즈음에 저는 절박함을 느꼈습니다. 제가 군대에서 한 막코딩으로는 한계가 있었습니다. 타입 변환을 까먹거나, 오타 하나로 몇 시간을 허비하는 삶은 싫었습니다. 팀원의 부족함을 탓하며 혼자서 모든 걸 떠앉기도 싫었습니다.</p>\n<h2 id=\"테스트-주도-개발과-설계\">테스트 주도 개발과 설계</h2>\n<p>막연히 테스트가 이 문제들을 해결해주지 않을까 싶었습니다. 그때 읽은 [테스트 주도 개발], [리팩토링]이 참 많은 걸 줬습니다. 코드를 단순하게 리팩토링하고 테스트를 만들면서, 몇 시간 씩 고민하는 일이 급격히 줄었습니다. 확신을 가지고 더 많은 책을 사서 읽고, 문서도 읽어보면서 이것저것 해봤습니다. [클린 소프트웨어], [그림으로 배우는 HTTP 네트워크], [객체지향의 사실과 오해], [오브젝트], [이펙티브 자바], [스프링 부트와 AWS로 직접 만드는 웹 서비스] 등등... 읽기만 하고 실습은 나중으로 미뤄둔 [자바 웹 넥스트 스텝], [토비의 스프링], [스프링 인 액션] 같은 친구들도 있네요.</p>\n<h2 id=\"삶을-풍요롭게-하는-코칭\">삶을 풍요롭게 하는 코칭</h2>\n<p>이때 쯤에 코칭도 시작했습니다. 처음에는 영어 과외를 했는데요. 그러다 데이터 과학 코칭을 시작했고, 결국 프로그래밍 코칭까지 갔습니다. 중,고등학생, 대학생, 대학원생, 회사원, 주니어 프로그래머 참 많은 분들을 만나서, 같이 고민하고 코딩했습니다. 그 중에는 국비를 다니시거나, 멋쟁이 사자처럼, 노마드 코더 같은 기존에 다른 강의나 부트캠프를 하고 계신 분도 많았습니다. 통계, 머신러닝, 딥러닝, 사무자동화, 백엔드, 프런트, 앱까지 참 이것저것 잡다하게 했습니다.</p>\n<p>제가 벤치마크하고 싶은 건 김창준님의 AC2인데요. 제 코칭은 피코치의 참여를 유도하거나, 생성적으로 진행하는 등... 여러 측면에서 부족한 게 더 많다고 느낍니다.</p>\n<h2 id=\"첫-회사에서-인턴-스타트업의-현실에-좌절하다\">첫 회사에서 인턴, 스타트업의 현실에 좌절하다.</h2>\n<p>이런저런 사정으로 아버지의 집에서 쫒겨나, 어머니와 함께 살게 되었습니다. 학교를 휴학하고, 취직하려 데브매칭을 보거나 이력서를 넣기 시작했는데요. 결과는 썩 만족스럽지 않았습니다. 프로그래머스 레벨3까지 문제를 모두 풀었더니, 코테는 만점이었지만... 데이터 분석가로 지원한 회사 중에 단 한 곳도 면접조차 가지 못했습니다.</p>\n<p>그러다 장고 Rest 프레임워크, 리액트, 딥러닝 스택을 가진 한 스타트업 인턴 모집 공고를 보게 됐습니다. 신입 정규직은 어려워도 인턴은 되지 않을까? 그 회사가 제 첫 회사인 S사였는데요. 면접을 보러간 자리에서 바로 합격하고, 다음 날 바로 출근하게 됐습니다. \"이 정도 능력이면 신입으로 가도 될 것 같은데, 왜 인턴으로 지원하셨냐?\"는 말이 기억에 남네요. (아무도 저 같은 신입은 받아주지 않아서요!)</p>\n<p>S사에 있는 1달 동안 정말 많은 걸 했습니다. 배우고 시도했던 걸 적어보겠습니다.</p>\n<p>처음 한 일이 WSL에 Cython 딥러닝 모델을 서빙하는 장고 + 리액트 개발환경을 구축하는 거였습니다. Docker를 쓰고 있는데도, 그냥 도커 run으로 돌아가질 않았습니다. DB는 실 DB에 연결되어 있어서 테스트 DB로 바꿨고, requirements.txt 버전은 안 맞았고, Cython은 특이한 커스텀 툴체인을 쓰는데 문서가 없어서... 여튼 에러 메세지 보면서 2시간 정도 만에 개발환경을 구축했습니다.</p>\n<p>제가 처음 고친 기능이 줌인 줌 아웃이었습니다. 수동으로 사이트에 접속해서, 로그인하고, 사진을 업로드하고, 줌인 줌아웃을 하는 식으로 테스트를 했습니다. 상태 관리는 redux를 쓰는데, 너무 번잡해서 한 번 실험을 해보고 싶으시다며 prop 내리기가 되어 있었습니다. 뷰에서 상태를 바꾸는 로직이 이런저런 컴포넌트에 흩어져 있었습니다.</p>\n<p>처음에 시연하면서 보여주시는데 에러가 났습니다. 눈 앞에서 에러 메세지를 보고, 코드를 수정하고, 다시 서버가 갱신되면, 다시 접속해서, 로그인하고... 뭐 그래도 원인을 찾지 못했죠. 며칠 후에 투자자 분이 사이트에서 직접 해보시는데 안 된다고 하시니, \"아직 프로토타입이고 상관 없다.\"고 말씀하셨던 게 기억이 납니다.</p>\n<p>저는 뷰에서 상태를 끌어내고 싶었습니다. Redux가 싫으시다니, MobX라는 게 있다고 알려드리고 원리를 설명했습니다. MobX 괜찮은 것 같다. 한 번 이사를 가보자. 사실 레거시가 대학생 프로젝트처럼 조그만해서 전환에 부담도 없었습니다.</p>\n<p>Cypress로 앞서 말한 End to End 테스트를 자동화했습니다. 이미지 파일 업로드, 마우스 스크롤을 어떻게 하는지 몰라서 헤맸던 기억이 납니다.</p>\n<p>그 다음에는 create-react-app에 내장된 jest로 상태 함수만 모아놓고 유닛 테스트를 했습니다. 상태 로직을 정확하게 구현했다는 확신을 얻고, 이제 기존 코드를 리팩토링 했습니다.</p>\n<p>이때 Mobile과 Desktop 뷰 컴포넌트가 따로 있었는데요. 설정 메뉴 모양만 다른데, 똑같은 상태 로직이 복사 붙여넣기 되어 있더군요. 이 공통 부분을 들어내고 통합했습니다. 그러니 복잡해서 전혀 다르게 보였던 Zoomable Image 컴포넌트가 사실은 동일하다는 걸 알게 됐습니다. 생각해보면 모바일이라고 PC와 다른 기능을 하지 않으니 당연했습니다. 공통 부분을 추출해서 Zoomable Image로 만들고, 프롭 내리기도 없애버렸습니다.</p>\n<p>이걸 가져갔더니 반응이 좋지 않았습니다. 모바일이랑 데스크탑의 기능이 달라질 수도 있는데, 지금 이렇게 추상화해놓으면 나중에 쓰기 불편해질 수도 있다는 것이었죠. 그렇게 생각할 수도 있죠.</p>\n<p>그 후로 계속 뭔가 잘못됐다는 느낌을 받았습니다. GitHub Issue조차 없어서 매번 구두로 전달 받아야했고요. 백엔드 API 문서가 있는지 물었는데, 역시 없었습니다. 장고 REST에서 자동으로 swagger open API를 만들어주는 툴 정도라도 있었으면 좋았을텐데요.</p>\n<p>하루는 \"지금 하고 있는 건 언제 끝나냐?\"는 질문을 받고, \"어디까지 해서 보여드리면 되겠습니까?\"하고 물었는데요. 그때 지시사항은 \"전에 말할대로 한 번 고쳐봐라.\"였습니다. 지시가 모호해서 질문을 한 건데 \"그런 건 스스로 생각해야한다.\"던가 \"책임감이 없다.\"는 식의 답변을 들었습니다. 그래서 \"제가 적어둔 작업 목록을 보여드릴테니, 그 중에 뭘 할지 골라주시면 시간을 추정하기 쉬울 것 같다.\"고 말씀을 드렸는데요. \"아까 전에는 그렇게 말 안 하지 않았냐?\"는 답이 돌아왔죠.</p>\n<p>물론 이런 업무 절차가 미비할 수 있습니다. 하지만 개선에 대한 의견을 받아들이지 않는 건 다른 문제죠. 이 이야기를 드리니 \"나는 대표인데 왜 신입인 너에게 맞춰야 하냐.\"는 답을 들었습니다. 그 외에 명대사로 \"왜 나에게 설명하듯이 말하느냐.\" \"내가 얼마나 많은 프로젝트를 만들었는지 아느냐?\" \"내가 풀스택 6년차인데\" 등이 있습니다.</p>\n<p>결국 1달만에 그만두기로 했습니다. 나오면서 제가 했던 작업들과, 프로젝트 구조와 방향, 환경 설정 방법을 정리한 문서를 만들어 남겼습니다.</p>\n<p>\"1년은 버텨봐야하는 거 아니냐\" \"요즘 애들은 근성이 없다.\"고 생각하시는 분이 있다면, 별로 드릴 말씀은 없네요. 환경을 무시하고 사람의 성격을 판단할 수 있다는 심리학적 통찰력에 박수를 보내드립니다. ;)</p>\n<h2 id=\"프메-백업-뷰어를-만들다\">프메 백업 뷰어를 만들다.</h2>\n<p>첫 회사를 그만두고 고민이 많았습니다. 때로는 먼저 연락이 오기도 하고, 제가 지원서를 넣기도 했는데. 1차에서 떨어진 경우도 많았고, 면접에서 떨어지기도 했습니다.</p>\n<p>면접에서 떨어져도 보통 정중하게 복사 붙여넣기한 인사만 받기 때문에, 왜 떨어졌는지는 알 수 없었습니다. 내가 비전공자라서 그럴까? Python Django는 역시 너무 마이너한 게 아닐까? 저에 대한 의심만 커졌죠. 임상 심리사님과 상담을 하면서 이런 불확실성을 어떻게 받아들여야할지?... 고민했고, 지금도 고민하고 있습니다.</p>\n<p>그러다 연습이 아닌 새로운 프로젝트 [프메 백업 뷰어]를 시작하게 되었습니다.</p>\n<p>저는 아이돌 그룹 아이즈원의 팬인데요. 3월 10일 아이즈원이 해체하면서, 아이즈원 팬덤은 충격과 슬픔에 빠졌습니다. 할 수 있는 건 없고 무력감만 남았죠.</p>\n<p>요즘 아이돌은 프라이빗 메일, 혹은 버블이라는 서비스가 있습니다. 아이돌 멤버들이 팬들과 메세지를 공유하는 팬 전용 SNS 같은 느낌인데요. 아이즈원이 활동을 종료하면서 아이즈원 프라이빗 메일도 서비스를 종료하게 되었습니다. 앱 이용약관은 \"자기 책임 하에 백업할 것\"을 요구했는데요. 팬들은 8천 장이 넘는 메일을 스크린샷을 찍어서 하나하나 백업하고 있었습니다.</p>\n<p>이때 한 개발자가 프라이빗 메일의 REST API 서버에 요청을 보내서 1시간에 걸쳐 8천 장의 메일을 불러와 저장하는, 이른바 프메 백업 툴을 만들었습니다. 저도 이 툴로 백업을 했는데. 받고 보니 문제가 있었습니다.</p>\n<p>메일 백업은 HTML과 이미지, 그리고 메일 목록과 정보가 담긴 json 파일로 이루어져 있습니다. JQuery로 만든 간단한 뷰어가 있긴 했지만, 볼 수 있는 걸 제외하면 아무 기능도 없었습니다.</p>\n<p>저는 마침 관심을 두고 있던 FastAPI, Svelte와 tailwind를 가지고 다양한 기능을 갖춘 뷰어를 만들면 어떨까 싶었습니다.</p>\n<p>그렇게 프메 백업 뷰어 프로젝트를 시작해서, 팬들과 지속적으로 공유했습니다. 처음에는 설치조차 불편했지만 스크립트를 만들어 자동화했고요. 다양한 기능을 추가해나갔습니다</p>\n<ul>\n<li>날짜 달력</li>\n<li>파파고 번역</li>\n<li>검색</li>\n<li>태그</li>\n<li>서버를 이용한 데이터 동기화</li>\n<li>좋아요</li>\n<li>다크모드</li>\n<li>프로필 사진 바꾸기, 직접 업로드하기</li>\n<li>영상 스트리밍</li>\n<li>N 년전 오늘</li>\n<li>앨범</li>\n<li>사진 크게 보기</li>\n<li>비동기 메일 백업</li>\n</ul>\n<p>팬들의 반응과 의견은 큰 힘이 되었습니다.</p>\n<p>한편으로는 에러가 두려웠습니다. ;) 사용자는 정말 다양한 방법으로 실수를 할 수 있습니다. 사용자의 실수를 예측하고, 에러가 나더라도 적절하게 대처할 수 있게 만들어야 했습니다. 윈도우와 안드로이드만 사용해온 저에게, 맥과 사파리에서 일어나는 크로스 플랫폼, 크로스 브라우징 이슈를 해결해나가는 것도 새로웠습니다.</p>\n<p>백엔드에서는 당연하게 생각했던 여러 설계 원칙을, 프런트 엔드에도 적용하게 됐습니다. End to End 테스트는 확실하지만 너무 느립니다. 테스트를 피하게 되고 코드가 꼬이게 됩니다. 하지만 테스트 없이 View와 State가 뒤섞인 코드는 재사용하기 어렵고, 리팩토링하기 고통스럽죠.\n도메인-상태의 로직으로 더 끌어내서, 의존성 없이 Jest만으로 테스트할 수 있게 만드니... 많은 문제가 저절로 풀렸습니다.</p>\n<p>이 외에도 배운 건 많지만 다음 이야기로 넘어가죠.</p>\n<h2 id=\"내가-가치-있게-생각하는-일을-해나가자\">내가 가치 있게 생각하는 일을 해나가자.</h2>\n<p>마지막은 감성적인 이야기입니다. 저는 최근에 삶의 방향을 잡았습니다.</p>\n<blockquote>\n<p>최근에 삶의 방향을 정했는데. 생계도 안정적이니 소수자이지만 유망한 기술을 더 쉽고 정확하게 배울 수 있게 하는 일에 헌신해볼 생각이다.</p>\n<p>FastAPI, Svelte, Scala, Clojure, Elixir, 그래프 데이터베이스 등을 진흥시키기 위해서. 자료를 정리하고, 깊이 있는 튜토리얼을 열심히 만들 겁니다.</p>\n</blockquote>\n<p>제 삶에 즐거움, 가치는 크게 2가지가 있다고 생각합니다. 하나는 문제를 풀고 해결하고 알아가는 즐거움이고, 다른 하나는 사람들과 함께 하면서 도움이 되고 있다는 느낌입니다.</p>\n<p>첫 번째 즐거움을 느끼는 분이 얼마나 되실지 모르겠습니다. 수학이나 물리, 프로그래밍이 재미있다고 느끼는 사람은 괴짜가 아닐까요. ;) 일이나 공부, 성공 같은 '기준'에 맞춰서 힘들고 '해야하는 것'으로 여겨지기 쉽습니다. 저도 그런 압박감을 느끼곤 합니다.</p>\n<p>두 번째는 좀 특별합니다. 이건 단순히 나 혼자 방에 틀어박혀서 공부만 해서는 얻기 힘드니까요. 잘못 흐르면 관심에 집착하거나, 공허해질 수 있지만. 사람은 원래 사회적인 동물입니다. 행복에 대한 연구들은 인간 관계가 행복에 가장 중요한 요소 중에 하나라고 이야기하고 있죠. 당장 가족, 친구, 직장, 취미, 사랑까지 넘쳐나는 관계들을 생각해보세요! 서로 도움을 주고 받고 감사하는 관계가 많다면 더욱 즐거울 수 밖에 없을 겁니다.</p>\n<p>저는 여러모로 운이 좋았다고 생각합니다. 중학교 때 저의 친구가 되어주셨던 사서 안미주 선생님과, 고등학교 때 마찬가지로 도와주셨던 정윤지예 선생님. 역시 은인이신 장영두 선생님... 여러 은인 분들 덕분에 죽고 싶을 때 죽지 않았고요. 책을 좋아하게 되었고, 영어를 포기하지 않았습니다.</p>\n<p>저는 학습과학과 전문성에 관심을 가지고 많은 걸 배웠습니다. 학습원리들을 프로그래밍에 적용하면서, 빠르게 배우고 성장할 수 있었다고 생각합니다. 물리학과인 제가 컴퓨터 공학과 학부생 분들을 코칭하고 있으니까요.</p>\n<p>프로그래밍 코칭을 하면서 생계에도 큰 걱정 없이 살고 있습니다. 제가 생계가 곤란하고 힘들었다면, 취업에 더 집착하고 두려워할 수 밖에 없었을 겁니다. 전에 배민 커넥트 배달을 했었는데, 시간 당 1만원 정도 꽤 벌었지만 정말 힘들었습니다. 프로그래밍 코칭은 돈도 더 많이 벌고, 제가 더 좋아하고 즐기는 일이기도 합니다. 제가 하루 8시간씩 코칭을 하진 않아서, 수익이 많진 않지만. 저는 원래 검소하고, 밥도 직접 해먹기 때문에 괜찮은 것 같네요.</p>\n<p>저 역시 제가 아직 모르는 게 많고, 부족하다는 걸 압니다. 하지만 지금까지 그래왔듯이, 앞으로도 성장해나갈 것임을 믿습니다. 생태계를 위해 기여하고, 가치를 전해보고 싶습니다.</p>\n<p>프메 백업 뷰어에서 그랬던 것처럼, 제가 관심을 가지고 공부 중인 기술과, 함수형, TDD, 애자일 같은 방법론을 더 퍼트리고 싶습니다.</p>\n","data":{"tocTree":[{"depth":2,"text":"부모님은 프로그래머셨고, 컴퓨터 학원에서 자랐다.","id":"부모님은-프로그래머셨고-컴퓨터-학원에서-자랐다","i":0,"children":[]},{"depth":2,"text":"친구들이 신기해하는 로봇을 만들고 싶었다.","id":"친구들이-신기해하는-로봇을-만들고-싶었다","i":1,"children":[]},{"depth":2,"text":"AVR과 C는 너무 어려웠다...","id":"avr과-c는-너무-어려웠다","i":2,"children":[]},{"depth":2,"text":"자바랑 SQL만 할 줄 알면 된다!","id":"자바랑-sql만-할-줄-알면-된다","i":3,"children":[]},{"depth":2,"text":"빅데이터와 파이썬","id":"빅데이터와-파이썬","i":4,"children":[]},{"depth":2,"text":"생활코딩으로 웹 개발을 시작하다.","id":"생활코딩으로-웹-개발을-시작하다","i":5,"children":[]},{"depth":2,"text":"군대에서 엑셀 개발자가 되다.","id":"군대에서-엑셀-개발자가-되다","i":6,"children":[]},{"depth":2,"text":"사무 자동화 운동을 벌이다.","id":"사무-자동화-운동을-벌이다","i":7,"children":[]},{"depth":2,"text":"사람들의 말을 들어야한다.","id":"사람들의-말을-들어야한다","i":8,"children":[]},{"depth":2,"text":"첫 팀 프로젝트에서 고통을 맛보다.","id":"첫-팀-프로젝트에서-고통을-맛보다","i":9,"children":[]},{"depth":2,"text":"테스트 주도 개발과 설계","id":"테스트-주도-개발과-설계","i":10,"children":[]},{"depth":2,"text":"삶을 풍요롭게 하는 코칭","id":"삶을-풍요롭게-하는-코칭","i":11,"children":[]},{"depth":2,"text":"첫 회사에서 인턴, 스타트업의 현실에 좌절하다.","id":"첫-회사에서-인턴-스타트업의-현실에-좌절하다","i":12,"children":[]},{"depth":2,"text":"프메 백업 뷰어를 만들다.","id":"프메-백업-뷰어를-만들다","i":13,"children":[]},{"depth":2,"text":"내가 가치 있게 생각하는 일을 해나가자.","id":"내가-가치-있게-생각하는-일을-해나가자","i":14,"children":[]}]},"permanlink":"/my-programming-story/","tags":["초고","이야기"]},{"slug":"string-escape","frontmatter":{"title":"문자열 escape, format, injection attack","excerpt":"SQL이나 HTML, JSON도 모두 문자열이죠. 코드를 문자열로 만들 때의 편리함과 취약점에 대해 알아봅니다.","date":"2021-07-17T12:38:53.894790","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 문자열, escape, format, injection attack"},"html":"<h3 id=\"escape-이건-코드인가-문자열인가\">Escape: 이건 코드인가 문자열인가?</h3>\n<p>문자열 리터럴을 만들 때 머리 아픈 부분은... 엔터나 따옴표 같은 특수문자를 어떻게 처리하냐는 것입니다.</p>\n<h3 id=\"format-문자열-템플릿에-동적으로-데이터-넣기\">format: 문자열 템플릿에 동적으로 데이터 넣기</h3>\n<h3 id=\"자동-형변환-다른-타입을-문자열로-변환하기\">자동 형변환: 다른 타입을 문자열로 변환하기</h3>\n<h3 id=\"injection-공격--eval과-sql-injection\">Injection 공격 : eval과 SQL Injection</h3>\n<h3 id=\"인덱스가-0부터-시작하는가\">인덱스가 0부터 시작하는가?</h3>\n<p>포트란, Lua, Julia</p>\n<h3 id=\"인덱스-슬라이싱이-가능한가\">인덱스 슬라이싱이 가능한가?</h3>\n<h3 id=\"인덱스-for-vs-iterator\">인덱스 for vs Iterator</h3>\n<h3 id=\"정규표현식\">정규표현식</h3>\n","data":{"tocTree":[{"depth":3,"text":"Escape: 이건 코드인가 문자열인가?","id":"escape-이건-코드인가-문자열인가","i":0,"children":[]},{"depth":3,"text":"format: 문자열 템플릿에 동적으로 데이터 넣기","id":"format-문자열-템플릿에-동적으로-데이터-넣기","i":1,"children":[]},{"depth":3,"text":"자동 형변환: 다른 타입을 문자열로 변환하기","id":"자동-형변환-다른-타입을-문자열로-변환하기","i":2,"children":[]},{"depth":3,"text":"Injection 공격 : eval과 SQL Injection","id":"injection-공격--eval과-sql-injection","i":3,"children":[]},{"depth":3,"text":"인덱스가 0부터 시작하는가?","id":"인덱스가-0부터-시작하는가","i":4,"children":[]},{"depth":3,"text":"인덱스 슬라이싱이 가능한가?","id":"인덱스-슬라이싱이-가능한가","i":5,"children":[]},{"depth":3,"text":"인덱스 for vs Iterator","id":"인덱스-for-vs-iterator","i":6,"children":[]},{"depth":3,"text":"정규표현식","id":"정규표현식","i":7,"children":[]}]},"permanlink":"/string-escape/","tags":["작성 중","문자열","escape","format","injection attack"]},{"slug":"string-immutable","frontmatter":{"title":"문자열은 왜 불변인가?","excerpt":"많은 언어에서 문자열은 불변입니다. 불변 자료형은 단점도 있고, 함수형 언어에서나 많이 쓰이는데. 문자열은 어쩌다 불변 객체가 표준이 되었을까요?","date":"2021-07-16T18:32:59.350932","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 문자열, 불변, 함수형"},"html":"<h3 id=\"문자열은-보통-불변입니다\">문자열은 보통 불변입니다.</h3>\n<p>대부분의 언어에서 문자열은 불변(Immutable)입니다. 변하지 않는다고 하면 이해하기 어려워하는 사람들이 있을텐데. 정확하게 말하면 문자열을 수정할 때, 새로운 문자열을 복사해서 만든다는 이야기다. 이걸 Copy on Write 라고도 한다. 파이썬에서 가변(mutable)한 자료형인 List와 비교해서 알아보자.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-python\"><span class=\"line\"><span style=\"color: #545454\"># 문자열</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 문자 List. 타입은 사실 List[str] 이지만...</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">b </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">h</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">e</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">l</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">l</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">o</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 값을 복사한다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">a_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> a</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 레퍼런스를 복사한다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">b_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> b</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># &quot;, world&quot;를 뒤에 붙인다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">a_copy </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">, world</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 마찬가지. 이번에는 겹 따옴표를 써봤다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">b_copy </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">,</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">w</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">o</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">r</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">l</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">d</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">a</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;hello&quot; 원본은 그대로</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">a_copy</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;hello, world&quot; 복사본은 수정됐다.</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">b</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39;,&#39;,&#39; &#39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39;] 원본도 같이 변했다!!!</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">b_copy</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;,&#39;,&#39;,&#39; &#39;,&#39;w&#39;,&#39;o&#39;,&#39;r&#39;,&#39;l&#39;,&#39;d&#39;] </span></span></code></pre>\n<p>변수는 메모리에 특정한 위치를 가리키는 레퍼런스를 들고 있다. 그런데 불변인 값은 메모리의 내용을 수정할 수 없다. 그래서 값을 수정하면 메모리에 새로운 위치에 값을 복사해서 쓰고, 변수에 새로운 위치를 가리키는 레퍼런스를 넣어놓는다. a_copy를 수정해도 a는 예전 위치를 가리키고 있기 때문에, 아무런 영향이 없다.</p>\n<p>반면에 리스트는 메모리의 값을 수정할 수 있어서, 항상 같은 위치를 가리키고 있다. 그러니 복사한 다른 변수가 값을 수정하면 원본도 바뀌는 것입니다.</p>\n<h3 id=\"불변성의-성능-이슈\">불변성의 성능 이슈.</h3>\n<p>사실 불변 자료형은 함수형 프로그래밍에서는 많이 쓰지만, 다른 언어에는 흔하지 않습니다. 파이썬에서도 List는 가변입니다.</p>\n<p>불변 자료형은 매번 값을 새로 쓰기 때문에 성능에 불리한 면이 있었습니다. 내가 책을 하나 새로 샀다고 합시다. 가변 책장이라면 책을 새로 꽂으면 끝납니다. 하지만 불변 책장에서는 책장을 새로 만들어서 기존에 있던 책들을 모두 옮겨야 합니다...</p>\n<p>실제로 매우 많은 문자열을 합칠 때, 이 문제는 심각한 고민입니다. Python에서 문자열을 합칠 때 앞에서 본 + 연산자를 쓸 수 있습니다. 한 두 개는 이래도 괜찮지만, 문자열 수백 수천 개를 합칠 때에는 같은 문자열을 지우고 만들기를 수백 수천 번 반복하니 비효율적일 수 밖에 없습니다.</p>\n<p>그래서 Python에서는 이렇게 많은 문자열을 합칠 때에는 join을 쓰기를 권장합니다. join은 미리 모든 문자열을 합칠 수 있는 공간을 만들어두고, 한 번에 새 문자열을 만들기 때문에 빠릅니다. JS도 비슷하게 for이나 reduce보다 join을 사용하라 합니다. Java에서는 StringBuilder나 StringBuffer를 추천합니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-python\"><span class=\"line\"><span style=\"color: #EEFFFF\">very_large_data_list </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">장원영</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">홍다희</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">나북희</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> ...</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">김민주</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">result_1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">for</span><span style=\"color: #EEFFFF\"> name </span><span style=\"color: #89DDFF\">in</span><span style=\"color: #EEFFFF\"> very_large_data_list</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #545454\"># 합쳐서 새 문자열을 만든다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    line </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> name </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #545454\"># result를 지우고 새 문자열을 또 만든다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    result_1 </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> line</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 한 번에 모든 문자열을 합친다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">result_2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">very_large_data_list</span><span style=\"color: #89DDFF\">)</span></span></code></pre>\n<p>하지만 애초에 String이 가변이었다면 이런 고민은 하지 않아도 됩니다. 그러면 왜 불변성을 유지하는 걸까요?</p>\n<h3 id=\"불변-자료구조는-해싱-캐싱할-수-있고-안전하다\">불변 자료구조는 해싱, 캐싱할 수 있고, 안전하다.</h3>\n<p>앞서 말했듯이 함수형 프로그래밍에서는 적극적으로 불변 자료구조를 쓴다. 심지어 Clojure나 Elixir 같은 언어에서는 기본적으로 불변 Linked List를 사용한다. (대부분 주류 언어에서는 ArrayList를 쓴다.) 흔히 함수형의 장점이라 알려진 것들이 불변성의 장점인 경우가 많다.</p>\n<p>먼저 불변 값은 쉽게 Hash key로 쓸 수 있다. 문자열은 보통 HashMap이나 dict, HashSet 등등에서, key로 많이 쓰인다. 특히 js의 객체는 모두 HashTable로 되어 있다. 문자열이 가변이라면 매번 hash 값이 변할 수 있어서 믿을 수 없을 것입니다. 하지만 불변하는 값은 hash를 한 번 계산해두면 변할 일이 없어서 안심할 수 있다.</p>\n<p>그래서 불변 자료구조는 캐싱으로 재사용하기 쉽다. 똑같은 값을 가진 새로운 데이터를 만들 때, 메모리에 새로 공간을 만들 필요가 없다. 원래 있던 변수 중에 똑같은 값을 찾아서 메모리에 똑같은 위치를 가리키는 레퍼런스만 달아주면 끝입니다. 예를 들어 \"Hello, World\" 라는 문자열 1천 개를 만든다면 가변 자료구조는 1천 개의 공간이 필요하지만, 불변 자료구조는 원본 하나 저장할 공간만 있으면 된다. 앞서 말한 hash함수를 이용하면 O(1) 만에 값을 찾을 수 있으니 성능 상으로도 유리하다.</p>\n<p>또 멀티 쓰레드나 동시성을 쉽게 다룰 수 있다. 요즘처럼 멀티코어가 당연해지는 세상에서는 정말 중요한 성질입니다. 가변 상태는 디버깅하기 매우 귀찮기 때문입니다.</p>\n<p>이런 이유로 파이썬에서는 str 뿐만 아니라 int, float, bool, tuple 같은 많은 기본 데이터 타입을 모두 불변 객체로 쓰고 있다.</p>\n<p>이유는 이 밖에도 더 있겠지만. 일단 \"불변이 생각보다 나쁘지 않구나, 함수형 언어도 좀 배워봐야겠다\"는 정도만 알고 넘어가자.</p>\n","data":{"tocTree":[{"depth":3,"text":"문자열은 보통 불변입니다.","id":"문자열은-보통-불변입니다","i":0,"children":[]},{"depth":3,"text":"불변성의 성능 이슈.","id":"불변성의-성능-이슈","i":1,"children":[]},{"depth":3,"text":"불변 자료구조는 해싱, 캐싱할 수 있고, 안전하다.","id":"불변-자료구조는-해싱-캐싱할-수-있고-안전하다","i":2,"children":[]}]},"permanlink":"/string-immutable/","tags":["작성 중","문자열","불변","함수형"]},{"slug":"string-encoding","frontmatter":{"title":"문자, 문자열, 한글 인코딩","excerpt":"한글을 어떻게 컴퓨터에 0101로 저장할 수 있을까요? UTF-8 이 있기까지 인코딩의 역사에 대해 이야기합니다.","date":"2021-07-16T18:22:02.346816","author":"탐정토끼(Taehee Kim)","tag":"작성 중, std, 문자열, 인코딩, 한글, 유니코드, UTF-8"},"html":"<h2 id=\"char-array와-string을-구분하는가\">Char Array와 String을 구분하는가?</h2>\n<p>문자열은 원래 문자(Char) 배열(Array)이었습니다. 예를 들어 \"tae\" 는 문자열인데 't', 'a', 'e' 라는 3가지 문자로 이루어져 있죠.</p>\n<p>char는 C나 Java 같이 저수준을 다루는 고급 언어에서 문자를 나타내는 원시(primitive) 자료형입니다. 영어로 문자를 뜻하는 character의 줄임말입니다. 이런 언어에서는 보통 char 리터럴은 <code>'s'</code> 같이 홑 따옴표(single quote)로 감싸줍니다. 변수명과 헷갈리기도 하고 1은 int 정수 자료형이지만 '1'은 문자이기 때문입니다.</p>\n<p>특히 C 같은 언어에서는 문자열이 정말 char의 배열일 뿐이죠.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-c\"><span class=\"line\"><span style=\"color: #C792EA\">char</span><span style=\"color: #EEFFFF\"> hello</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">H</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">e</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">l</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">l</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">o</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">}</span></span></code></pre>\n<p>문자열을 단지 포인터를 이용해 사용하기도 하는데. 포인터는 배열의 첫 번째 글자를 가리키게 합니다. 문제는 문자열의 길이를 모른다는 것인데, 그래서 문자열 끝에는 \\\\0 null 문자를 붙여서 \"끝났습니다.\"하고 표시해준다는 규칙이 있습니다.</p>\n<p><code>[ H | e | l | l | o | \\\\0 ]</code></p>\n<p>이걸 실제 이진수로 변환하면 이렇겠죠.</p>\n<p><code>[ 1001000 | 1100101 | 1101100 | 1101100 | 1101111 ]</code></p>\n<p>C를 사용해본 적이 없으면 이해가 잘 가지 않을텐데. 이렇듯 단순히 문자 배열로 취급하면 여러모로 귀찮을 수 밖에 없습니다! 저수준에서 메모리에 데이터가 어떻게 저장되고, 어떻게 불러오는지 매번 신경 써야 한다니.</p>\n<h3 id=\"문자열-string은-보통-불변-객체다\">문자열 String은 보통 불변 객체다.</h3>\n<p>반면 요즘 대부분의 언어에서는 String을 불변 객체로 포장해서 사용합니다. C++에도 std::string이 있죠. 이런 객체들은 보통 특정 메모리 내의 위치를 가리키는 포인터가 아니라, 레퍼런스를 들고 있습니다. 그래서 값을 바꾸면 자동으로 새로운 위치를 찾아서 값을 저장하고, 레퍼런스를 바꿔치기합니다. 이러한 불변성에 대해서는 <a href=\"/string-immutable\">문자열은 왜 불변 객체일까?</a>에서 다룹니다.</p>\n<p>문자열 리터럴을 만들기 위해서는 보통 <code>\"Hello\"</code>처럼 겹따옴표로 감싸줍니다.</p>\n<p>그런데 python 이나 javascript 같은 언어에서는 한 글자도 string 으로 취급합니다. 이런 언어에서는 문자열을 만들 때 <code>\"</code> 던 <code>'</code>던 원하는 쪽을 마음대로 쓰면 됩니다. 그래서 다음과 같은 코드가 가능하죠.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> h_1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">H</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> h_2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">H</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> hello_1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> hello_2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">Hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>js에서는 보통 ' 홑 따옴표를 많이 쓰는데. html 같은 문자열 안에 \"\"가 들어 있어도 따로 이스케이프해줄 필요가 없기 때문입니다.</p>\n<h3 id=\"문자열-인코딩은-문자를-0101-이진수에-대응시키는-방식\">문자열 인코딩은 문자를 0101 이진수에 대응시키는 방식</h3>\n<p>컴퓨터에 모든 데이터는 01010011 이진수 바이트로 저장합니다. int는 좀 이해하기 쉽지만, float이나 다른 자료구조가 저장되는 방식은 머리가 아픕니다. 특히 언어를 막론하고 가장 많이 쓰이는 String은 생각보다 만만치 않은 자료형(data type)입니다.</p>\n<p>컴퓨터는 자료형의 규칙에 따라 0101 을 해석하는데. 앞에서 문자열은 문자의 배열이라고 했었죠? 그러니 문자를 표기하는 방법이 필요한데. 요즘 가장 많이 쓰이는 표준은 유니코드, UTF-8입니다.</p>\n<p>유니코드는 기본적으로 문자표라고 생각합시다. 유니코드 문자표는 각 문자를 숫자에 대응시킵니다.</p>\n<p>예를들어 \"123Hello세계\"라는 문자열을 유니코드로 표현하면 <code>49, 50, 51, 72, 101, 108, 108, 111, 49464, 44228</code> 가 됩니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-null\"><span class=\"line\"><span style=\"color: #EEFFFF\">49 -&gt; &#39;1&#39;\n72 -&gt; &#39;H&#39;\n&#39;세&#39; -&gt; &#39;49464&#39;</span></span></code></pre>\n<p>같은 식으로 대응되는 것입니다.</p>\n<p>당연하지만 세상에는 다양한 문자표가 있고, 어떤 문자표를 쓸지 고민하게 됩니다. 이걸 보통 인코딩(Encoding)이라 부르는데. 문자를 코드로 어떻게 적을지에 대한 규칙입니다.</p>\n<h3 id=\"ascii--american-standard-code-for-information-interchange\">ASCII : American Standard Code for Information Interchange</h3>\n<p>태초에는 ASCII 문자표라는 걸 많이 썼습니다. 아스키의 장점은 미국 사람들이 쓰는 알파벳만 넣어서, 총 문자는 128개 이하, 즉 7비트 밖에 안 되는 가벼운 친구였다는 거죠. 하지만 미국인용 정보 교환 표준 코드(American Standard Code for Information Interchange)라는 이름처럼, 아스키로는 한글이나 다른 문자를 적을 방법이 없었습니다.</p>\n<p>그래서 사용자 이름을 한글로 짓거나, 폴더 이름을 한글로 하면 프로그램이 깨지는 경우가 아직도 종종 있습니다. 프로그램이 아스키는 읽는데 한글은 못 읽기 때문입니다.</p>\n<h3 id=\"다양한-언어들의-인코딩-난립\">다양한 언어들의 인코딩 난립</h3>\n<p>이게 싫었던 CJK(China Japan Korea)를 비롯해 여러 나라 사람들이 자기 나라별로 표준을 만들기 시작했는데. 지금 수 많은 충전기 양식이 난립하듯이, 이게 개발자들에게는 정말 고통스러웠습니다. 다른 코덱을 쓰는 프로그램에 데이터를 보내면 매번 인코딩을 변환해야했으니까요. 까먹고 변환을 안 해서 에러와 장애가 일어나고, 사이트를 들어갔는데 보이지 않는 일도 흔했다고 합니다.</p>\n<p>한글만해도 EUC-KR, CP949 같은 친구들을 이따금 보게 될 것입니다.</p>\n<h3 id=\"세계-표준-유니코드-등장\">세계 표준 유니코드 등장</h3>\n<p>그래서 세계 표준을 만들자는 움직임이 있었고, 그렇게 나온 문자표가 유니코드입니다! 유니코드에는 중국 한자, 한글, 아랍어는 물론이고, 타밀어나, 티벳 문자까지 온갖 문자가 모두 들어 있습니다.</p>\n<p>유니코드 코드 포인트로 된 텍스트 파일을 열어보면 다음처럼 생겼습니다.</p>\n<p>원본은 <code>\"간장공장 이모지\"</code>입니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-plaintext\"><span class=\"line\"><span style=\"color: #EEFFFF\">&quot;\\\\uac04\\\\uc7a5\\\\uacf5\\\\uc7a5 \\\\uc774\\\\ubaa8\\\\uc9c0&quot;</span></span></code></pre>\n<p>문제는 이렇게 많은 문자표를 만들다보니 표가 너무 길어졌다는 건데. 앞에서 보셨듯이 한글은 49464 처럼 매우 크기가 크지 않나요? 그래서 1바이트로 처리되는 아스키와 달리, 한글은 최소 3바이트가 필요하고, 더 뒤에 있는 고문자나 이모티콘은 4바이트가 필요할 수도 있습니다.</p>\n<p>여기서 고민이 생기는데. 고정 길이 배열로 저장하는 게 속도는 빠르지만. 그러면 당연히 가장 긴 데이터에 맞출 수 밖에 없습니다. 영어로만 되어 있어서 1바이트면 되는 문자도, 한 글자에 4바이트씩 쓴다면... 용량이 4배로 늘어날 것입니다.</p>\n<h3 id=\"utf-8-메모리-효율적인-가변길이-유니코드-인코딩\">UTF-8 메모리 효율적인 가변길이 유니코드 인코딩</h3>\n<p>그래서 GO의 개발자이기도 한 켄 톰슨과 롭 파이크는 UTF-8을 만들었습니다. UTF-8은 Unicode Transformation format의 약자입니다. 즉 유니코드를 가변 길이로 변환해서 저장하는 포맷입니다. 영어는 1바이트만 쓰고, 한글 같이 복잡한 문자만 3바이트를 써서 저장하도록 했죠.</p>\n<p>요즘 대부분의 언어와 파일은 이제 UTF-8을 표준으로 택하고 있습니다. 예를들어 파이썬3나 js 같은 언어에서 코드와 문자열은 기본적으로 UTF-8 인코딩을 이용합니다. 그래서 한글로 변수나 함수명을 짓는 것도 가능하죠.</p>\n<p>UTF-8은 메모리는 덜 먹지만, 길이가 들쭉날쭉하기 때문에 성능 상으로는 불리한 면이 있습니다. 단순하게 문자열 길이를 셀 때를 생각해보세요. 고정 길이라면 메모리 길이와 같겠지만, 가변 길이에서는 정말 문자 개수를 하나하나 세야 합니다.</p>\n<p>또 한글은 여전히 고통스럽습니다. UTF-8은 영어만 1바이트거든요. 한글은 여전히 3바이트나 차지합니다. (EUC-KR은 2바이트 였습니다.) 이러나저러나 미국 중심의 표준입니다.</p>\n<blockquote>\n<p>사실 한글이 처리되는 방식은 더 복잡합니다. 예를들어 맥과 윈도우가 처리하는 방식이 다르다던가요. 한글을 자음과 모음 각각을 저장할 수도 있고, 완성형을 저장할 수도 있기 때문입니다. (\"ㄱㅣㅁ ㅌㅐ ㅎㅡㅣ\" vs \"김태희\") 더 궁금하신 분은 다음 링크를 살펴봐주세요.</p>\n<ul>\n<li><a href=\"https://gist.github.com/Pusnow/aa865fa21f9557fa58d691a8b79f8a6d\">한글과 유니코드</a>: 한글 정규화, 단위, 정렬 문제</li>\n<li>파이썬\n<ul>\n<li><a href=\"https://docs.python.org/ko/3.8/howto/unicode.html\">파이썬 공식 문서: 유니코드 HOWTO</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=w-3oMfBjXCI\">한상곤: 문자열? 그런 달달한 것이 남아있긴 한가? - PyCon APAC 2016</a></li>\n<li><a href=\"https://www.python.org/dev/peps/pep-0393/\">PEP 393 -- Flexible String Representation</a></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>그래도 표준이 있는 게, 없는 것보다는 나은 것 같습니다. 해외 라이브러리도 UTF-8만 지원하면 쓸 수 있고요. 많은 언어들이 UTF-8을 채택하면서 한국어 쓰기가 점점 편해졌습니다. 불과 몇 년 전만 해도 인터넷 익스플로러는 EUC-KR(CP949)를 쓰고 있었습니다. 서버에서 보내준 한글 데이터가 다 깨지는 참사가 일어나기도 했죠.</p>\n<p>하지만 이제 익스플로러도 지원 종료되었으니... UTF-8의 미래는 밝습니다.</p>\n<p>여전히 파일이나 DB에 데이터를 저장할 때라던가, 통신으로 날아온 JSON을 읽어들일 때 우리는 Encoding을 신경 써야합니다. 한글이 깨지는 경우도 종종 있을 겁니다. 같은 유니코드라도 UTF-8 인코딩 말고 다른 친구도 있습니다. UTF-16이나 이모티콘, UCS-2 같은 복병이 숨어 있기도 합니다. 낯선 프로그래밍 언어를 쓰는데 글자가 깨진다면, 인코딩 설정을 한 번 의심해보시고, 검색어에 \"UTF-8\"이나 \"encoding\" 같은 단어를 넣어보세요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-python\"><span class=\"line\"><span style=\"color: #89DDFF\">import</span><span style=\"color: #EEFFFF\"> json</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">data </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">id</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">김태희</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 한글</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 유니코드 코드 포인트 -&gt; 아스키에 있는 문자로만!</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">json_unicode_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> json</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dumps</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">data</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;{&quot;id&quot;: 1, &quot;name&quot;: &quot;\\\\\\\\uae40\\\\\\\\ud0dc\\\\\\\\ud76c&quot;}&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># UTF-8로 바로 변환되게 합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">json_raw_utf_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> json</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">dumps</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #EEFFFF\">ensure_ascii</span><span style=\"color: #89DDFF\">=False)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;{&quot;id&quot;: 1, &quot;name&quot;: &quot;김태희&quot;}&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># UTF-8 인코딩으로 텍스트 파일에 저장합니다.</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">with</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">open</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">test.txt</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">w</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #EEFFFF\">encoding</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">UTF-8</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">as</span><span style=\"color: #EEFFFF\"> f</span><span style=\"color: #89DDFF\">:</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    f</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">write</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">json_text</span><span style=\"color: #89DDFF\">)</span></span></code></pre>\n","data":{"tocTree":[{"depth":2,"text":"Char Array와 String을 구분하는가?","id":"char-array와-string을-구분하는가","i":0,"children":[{"depth":3,"text":"문자열 String은 보통 불변 객체다.","id":"문자열-string은-보통-불변-객체다","i":1,"parent":true,"children":[]},{"depth":3,"text":"문자열 인코딩은 문자를 0101 이진수에 대응시키는 방식","id":"문자열-인코딩은-문자를-0101-이진수에-대응시키는-방식","i":2,"parent":true,"children":[]},{"depth":3,"text":"ASCII : American Standard Code for Information Interchange","id":"ascii--american-standard-code-for-information-interchange","i":3,"parent":true,"children":[]},{"depth":3,"text":"다양한 언어들의 인코딩 난립","id":"다양한-언어들의-인코딩-난립","i":4,"parent":true,"children":[]},{"depth":3,"text":"세계 표준 유니코드 등장","id":"세계-표준-유니코드-등장","i":5,"parent":true,"children":[]},{"depth":3,"text":"UTF-8 메모리 효율적인 가변길이 유니코드 인코딩","id":"utf-8-메모리-효율적인-가변길이-유니코드-인코딩","i":6,"parent":true,"children":[]}]}]},"permanlink":"/string-encoding/","tags":["작성 중","std","문자열","인코딩","한글","유니코드","UTF-8"]},{"slug":"development-environment-15minutes","frontmatter":{"title":"개발환경 구축 지도","excerpt":"개발환경을 구축하는데 필요한 다양한 개념들을 정리하고, 큰 그림을 그립니다.","date":"2021-07-14T10:11:26.973689","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 개발환경"},"html":"<h2 id=\"지도를-챙기고-필요한만큼-배우자\">지도를 챙기고, 필요한만큼 배우자</h2>\n<h2 id=\"내가-이해할-수-있고-감당할-수-있나\">내가 이해할 수 있고 감당할 수 있나?</h2>\n<h2 id=\"작고-단순한-것부터-시작하자\">작고 단순한 것부터 시작하자</h2>\n<h2 id=\"가설을-세우고-실험으로-검증하기\">가설을 세우고 실험으로 검증하기</h2>\n<h2 id=\"일반적이고-보편적인-개념을-배우자\">일반적이고 보편적인 개념을 배우자</h2>\n<h2 id=\"프로그램을-어디에서도-실행하게-해주는-환경변수-path\">프로그램을 어디에서도 실행하게 해주는 환경변수 PATH</h2>\n<h2 id=\"운영체제와-cpu에-맞는-프로그램-설치하기\">운영체제와 CPU에 맞는 프로그램 설치하기</h2>\n<h2 id=\"사용하는-버전-확인하기\">사용하는 버전 확인하기</h2>\n<p>Breaking Change</p>\n<h2 id=\"명령줄-command-line\">명령줄 Command Line</h2>\n<h2 id=\"컴파일러-인터프리터-런타임\">컴파일러, 인터프리터, 런타임</h2>\n<h3 id=\"gcc-리눅스-진영의-c-컴파일러\">GCC: 리눅스 진영의 C 컴파일러</h3>\n<h3 id=\"javac-자바-컴파일러\">javac: 자바 컴파일러</h3>\n<h3 id=\"cpython-파이썬-공식-인터프리터-구현체\">CPython: 파이썬 공식 인터프리터 구현체</h3>\n<h4 id=\"pypy\">PyPy</h4>\n<h3 id=\"node-js-런타임\">Node: js 런타임</h3>\n<h4 id=\"deno-rust로-다시-만든-jsts-런타임\">Deno: Rust로 다시 만든 Js/Ts 런타임</h4>\n<h3 id=\"babel-모던-자바스크립트를-위한-트랜스파일러\">Babel: 모던 자바스크립트를 위한 트랜스파일러</h3>\n<h3 id=\"tsc-타입스크립트-트랜스파일러\">TSC: 타입스크립트 트랜스파일러</h3>\n<h2 id=\"repl-console-명령줄에서-코드-실험하기\">Repl, Console: 명령줄에서 코드 실험하기</h2>\n<h3 id=\"python\">Python</h3>\n<h3 id=\"브라우저-개발자-도구-console\">브라우저 개발자 도구 Console</h3>\n<h2 id=\"빌드-패키지-의존성-관리-도구\">빌드, 패키지, 의존성 관리 도구</h2>\n<h3 id=\"gradle-java-패키지-관리-빌드-도구\">gradle: Java 패키지 관리, 빌드 도구</h3>\n<h3 id=\"npm-yarn-js-패키지-관리-도구\">npm, yarn: js 패키지 관리 도구</h3>\n<h3 id=\"webpack-rollup-vite-js-모듈-번들러\">webpack, rollup, vite: js 모듈 번들러</h3>\n<h3 id=\"pip-파이썬-기본-패키지-관리-도구\">pip: 파이썬 기본 패키지 관리 도구</h3>\n<h3 id=\"poetry-현대적인-파이썬-패키지-관리-도구\">poetry: 현대적인 파이썬 패키지 관리 도구</h3>\n<h3 id=\"apt-get-우분투-리눅스-패키지-관리-도구\">apt-get: 우분투 리눅스 패키지 관리 도구</h3>\n<h2 id=\"curl-wget-인터넷에서-파일-다운-받기\">curl, wget: 인터넷에서 파일 다운 받기</h2>\n<h2 id=\"sh-쉘-스크립트\">sh: 쉘 스크립트</h2>\n<h2 id=\"프로젝트-템플릿\">프로젝트 템플릿</h2>\n<h2 id=\"프레임워크-라이브러리-모듈\">프레임워크, 라이브러리, 모듈</h2>\n<h2 id=\"서로-다른-프로젝트-간에-버전-관리하기\">서로 다른 프로젝트 간에 버전 관리하기</h2>\n<h2 id=\"docker-개발환경을-컨테이너-째로-다운-받으세요\">Docker: 개발환경을 컨테이너 째로 다운 받으세요.</h2>\n<h2 id=\"각종-설정-config-파일\">각종 설정 config 파일</h2>\n<h2 id=\"텍스트-편집기\">텍스트 편집기</h2>\n<h3 id=\"vs-code-오픈소스-텍스트-에디터-플러그인-생태계\">VS Code: 오픈소스 텍스트 에디터, 플러그인 생태계</h3>\n<h3 id=\"jetbrain-똑똑한-통합-개발-환경\">JetBrain: 똑똑한 통합 개발 환경</h3>\n<h3 id=\"vim-강력한-단축키-커맨드-라인-최적화\">Vim: 강력한 단축키, 커맨드 라인 최적화</h3>\n<h3 id=\"그-외-emacs-sublime-text-notepad-메모장\">그 외: Emacs, Sublime Text, Notepad++, 메모장...</h3>\n<h2 id=\"문법-검사와-lsp\">문법 검사와 LSP</h2>\n<h2 id=\"git-프로젝트-버전-관리\">Git: 프로젝트 버전 관리</h2>\n<h2 id=\"배포-자동화\">배포 자동화</h2>\n<h3 id=\"github-action\">GitHub Action</h3>\n<h3 id=\"jenkins\">Jenkins</h3>\n<h2 id=\"브라우저-에뮬레이터\">브라우저, 에뮬레이터</h2>\n<h2 id=\"테스트-도구\">테스트 도구</h2>\n","data":{"tocTree":[{"depth":2,"text":"지도를 챙기고, 필요한만큼 배우자","id":"지도를-챙기고-필요한만큼-배우자","i":0,"children":[]},{"depth":2,"text":"내가 이해할 수 있고 감당할 수 있나?","id":"내가-이해할-수-있고-감당할-수-있나","i":1,"children":[]},{"depth":2,"text":"작고 단순한 것부터 시작하자","id":"작고-단순한-것부터-시작하자","i":2,"children":[]},{"depth":2,"text":"가설을 세우고 실험으로 검증하기","id":"가설을-세우고-실험으로-검증하기","i":3,"children":[]},{"depth":2,"text":"일반적이고 보편적인 개념을 배우자","id":"일반적이고-보편적인-개념을-배우자","i":4,"children":[]},{"depth":2,"text":"프로그램을 어디에서도 실행하게 해주는 환경변수 PATH","id":"프로그램을-어디에서도-실행하게-해주는-환경변수-path","i":5,"children":[]},{"depth":2,"text":"운영체제와 CPU에 맞는 프로그램 설치하기","id":"운영체제와-cpu에-맞는-프로그램-설치하기","i":6,"children":[]},{"depth":2,"text":"사용하는 버전 확인하기","id":"사용하는-버전-확인하기","i":7,"children":[]},{"depth":2,"text":"명령줄 Command Line","id":"명령줄-command-line","i":8,"children":[]},{"depth":2,"text":"컴파일러, 인터프리터, 런타임","id":"컴파일러-인터프리터-런타임","i":9,"children":[{"depth":3,"text":"GCC: 리눅스 진영의 C 컴파일러","id":"gcc-리눅스-진영의-c-컴파일러","i":10,"parent":true,"children":[]},{"depth":3,"text":"javac: 자바 컴파일러","id":"javac-자바-컴파일러","i":11,"parent":true,"children":[]},{"depth":3,"text":"CPython: 파이썬 공식 인터프리터 구현체","id":"cpython-파이썬-공식-인터프리터-구현체","i":12,"parent":true,"children":[{"depth":4,"text":"PyPy","id":"pypy","i":13,"parent":true,"children":[]}]},{"depth":3,"text":"Node: js 런타임","id":"node-js-런타임","i":14,"parent":true,"children":[{"depth":4,"text":"Deno: Rust로 다시 만든 Js/Ts 런타임","id":"deno-rust로-다시-만든-jsts-런타임","i":15,"parent":true,"children":[]}]},{"depth":3,"text":"Babel: 모던 자바스크립트를 위한 트랜스파일러","id":"babel-모던-자바스크립트를-위한-트랜스파일러","i":16,"parent":true,"children":[]},{"depth":3,"text":"TSC: 타입스크립트 트랜스파일러","id":"tsc-타입스크립트-트랜스파일러","i":17,"parent":true,"children":[]}]},{"depth":2,"text":"Repl, Console: 명령줄에서 코드 실험하기","id":"repl-console-명령줄에서-코드-실험하기","i":18,"children":[{"depth":3,"text":"Python","id":"python","i":19,"parent":true,"children":[]},{"depth":3,"text":"브라우저 개발자 도구 Console","id":"브라우저-개발자-도구-console","i":20,"parent":true,"children":[]}]},{"depth":2,"text":"빌드, 패키지, 의존성 관리 도구","id":"빌드-패키지-의존성-관리-도구","i":21,"children":[{"depth":3,"text":"gradle: Java 패키지 관리, 빌드 도구","id":"gradle-java-패키지-관리-빌드-도구","i":22,"parent":true,"children":[]},{"depth":3,"text":"npm, yarn: js 패키지 관리 도구","id":"npm-yarn-js-패키지-관리-도구","i":23,"parent":true,"children":[]},{"depth":3,"text":"webpack, rollup, vite: js 모듈 번들러","id":"webpack-rollup-vite-js-모듈-번들러","i":24,"parent":true,"children":[]},{"depth":3,"text":"pip: 파이썬 기본 패키지 관리 도구","id":"pip-파이썬-기본-패키지-관리-도구","i":25,"parent":true,"children":[]},{"depth":3,"text":"poetry: 현대적인 파이썬 패키지 관리 도구","id":"poetry-현대적인-파이썬-패키지-관리-도구","i":26,"parent":true,"children":[]},{"depth":3,"text":"apt-get: 우분투 리눅스 패키지 관리 도구","id":"apt-get-우분투-리눅스-패키지-관리-도구","i":27,"parent":true,"children":[]}]},{"depth":2,"text":"curl, wget: 인터넷에서 파일 다운 받기","id":"curl-wget-인터넷에서-파일-다운-받기","i":28,"children":[]},{"depth":2,"text":"sh: 쉘 스크립트","id":"sh-쉘-스크립트","i":29,"children":[]},{"depth":2,"text":"프로젝트 템플릿","id":"프로젝트-템플릿","i":30,"children":[]},{"depth":2,"text":"프레임워크, 라이브러리, 모듈","id":"프레임워크-라이브러리-모듈","i":31,"children":[]},{"depth":2,"text":"서로 다른 프로젝트 간에 버전 관리하기","id":"서로-다른-프로젝트-간에-버전-관리하기","i":32,"children":[]},{"depth":2,"text":"Docker: 개발환경을 컨테이너 째로 다운 받으세요.","id":"docker-개발환경을-컨테이너-째로-다운-받으세요","i":33,"children":[]},{"depth":2,"text":"각종 설정 config 파일","id":"각종-설정-config-파일","i":34,"children":[]},{"depth":2,"text":"텍스트 편집기","id":"텍스트-편집기","i":35,"children":[{"depth":3,"text":"VS Code: 오픈소스 텍스트 에디터, 플러그인 생태계","id":"vs-code-오픈소스-텍스트-에디터-플러그인-생태계","i":36,"parent":true,"children":[]},{"depth":3,"text":"JetBrain: 똑똑한 통합 개발 환경","id":"jetbrain-똑똑한-통합-개발-환경","i":37,"parent":true,"children":[]},{"depth":3,"text":"Vim: 강력한 단축키, 커맨드 라인 최적화","id":"vim-강력한-단축키-커맨드-라인-최적화","i":38,"parent":true,"children":[]},{"depth":3,"text":"그 외: Emacs, Sublime Text, Notepad++, 메모장...","id":"그-외-emacs-sublime-text-notepad-메모장","i":39,"parent":true,"children":[]}]},{"depth":2,"text":"문법 검사와 LSP","id":"문법-검사와-lsp","i":40,"children":[]},{"depth":2,"text":"Git: 프로젝트 버전 관리","id":"git-프로젝트-버전-관리","i":41,"children":[]},{"depth":2,"text":"배포 자동화","id":"배포-자동화","i":42,"children":[{"depth":3,"text":"GitHub Action","id":"github-action","i":43,"parent":true,"children":[]},{"depth":3,"text":"Jenkins","id":"jenkins","i":44,"parent":true,"children":[]}]},{"depth":2,"text":"브라우저, 에뮬레이터","id":"브라우저-에뮬레이터","i":45,"children":[]},{"depth":2,"text":"테스트 도구","id":"테스트-도구","i":46,"children":[]}]},"permanlink":"/development-environment-15minutes/","tags":["작성 중","개발환경"]},{"slug":"persistence-layer","frontmatter":{"title":"영속성 계층","excerpt":"영속성 계층은 프로그램의 상태와 데이터를 관리, 저장, 복원합니다. 파일부터 데이터베이스, DDD의 레포지토리 패턴도 소개합니다.","date":"2021-07-13T19:44:17.038983","author":"탐정토끼(Taehee Kim)","tag":"작성 중, DDD, 계층형 아키텍처, 영속성, 파일, 데이터베이스, 레포지토리 패턴"},"html":"<h2 id=\"영속성은-프로그램이-종료되어도-상태를-유지하고-다시-불러올-수-있게-합니다\">영속성은 프로그램이 종료되어도 상태를 유지하고, 다시 불러올 수 있게 합니다.</h2>\n<h2 id=\"파일-시스템\">파일 시스템</h2>\n<h2 id=\"데이터베이스\">데이터베이스</h2>\n<h3 id=\"sql-관계형-데이터-베이스\">SQL 관계형 데이터 베이스</h3>\n<h4 id=\"orm-객체-관계-맵핑\">ORM 객체 관계 맵핑</h4>\n<h4 id=\"두-개의-모자\">두 개의 모자</h4>\n<h3 id=\"nosql\">NoSQL</h3>\n<h4 id=\"key-value\">Key-Value</h4>\n<h4 id=\"document\">Document</h4>\n<h4 id=\"graph\">Graph</h4>\n<h4 id=\"search-engine\">Search Engine</h4>\n<h2 id=\"repository-pattern\">Repository Pattern</h2>\n","data":{"tocTree":[{"depth":2,"text":"영속성은 프로그램이 종료되어도 상태를 유지하고, 다시 불러올 수 있게 합니다.","id":"영속성은-프로그램이-종료되어도-상태를-유지하고-다시-불러올-수-있게-합니다","i":0,"children":[]},{"depth":2,"text":"파일 시스템","id":"파일-시스템","i":1,"children":[]},{"depth":2,"text":"데이터베이스","id":"데이터베이스","i":2,"children":[{"depth":3,"text":"SQL 관계형 데이터 베이스","id":"sql-관계형-데이터-베이스","i":3,"parent":true,"children":[{"depth":4,"text":"ORM 객체 관계 맵핑","id":"orm-객체-관계-맵핑","i":4,"parent":true,"children":[]},{"depth":4,"text":"두 개의 모자","id":"두-개의-모자","i":5,"parent":true,"children":[]}]},{"depth":3,"text":"NoSQL","id":"nosql","i":6,"parent":true,"children":[{"depth":4,"text":"Key-Value","id":"key-value","i":7,"parent":true,"children":[]},{"depth":4,"text":"Document","id":"document","i":8,"parent":true,"children":[]},{"depth":4,"text":"Graph","id":"graph","i":9,"parent":true,"children":[]},{"depth":4,"text":"Search Engine","id":"search-engine","i":10,"parent":true,"children":[]}]}]},{"depth":2,"text":"Repository Pattern","id":"repository-pattern","i":11,"children":[]}]},"permanlink":"/persistence-layer/","tags":["작성 중","DDD","계층형 아키텍처","영속성","파일","데이터베이스","레포지토리 패턴"]},{"slug":"api-layer","frontmatter":{"title":"웹 인터페이스 계층","excerpt":"REST, gRPC, GraphQL, Socket, PubSub 등등... API 계층은 외부에서 들어온 요청을 작업으로 변환하고, 결과를 응답으로 변환하고 전달합니다.","date":"2021-07-13T18:30:36.653907","author":"탐정토끼(Taehee Kim)","tag":"작성 중, DDD, 계층형 아키텍처, API, REST, gRPC, GraphQL, WebSocket, PubSub"},"html":"<h2 id=\"웹-인터페이스는-서버가-외부와-통신하는-방법이자-계약입니다\">웹 인터페이스는 서버가 외부와 통신하는 방법이자, 계약입니다.</h2>\n<h2 id=\"수단과-양식-통신-프로토콜\">수단과 양식, 통신 프로토콜</h2>\n<h3 id=\"http-hypertext-transfer-protocol-하이퍼-텍스트-전송-규약\">HTTP: HyperText Transfer Protocol 하이퍼 텍스트 전송 규약</h3>\n<blockquote>\n<p>Hypertext Transfer Protocol (HTTP) is an application-layer protocol for transmitting hypermedia documents, such as HTML. It was designed for communication between web browsers and web servers, but it can also be used for other purposes. HTTP follows a classical client-server model, with a client opening a connection to make a request, then waiting until it receives a response. HTTP is a stateless protocol, meaning that the server does not keep any data (state) between two requests. Though often based on a TCP/IP layer, it can be used on any reliable transport layer, that is, a protocol that doesn't lose messages silently like UDP does. RUDP — the reliable update of UDP — is a suitable alternative.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP\">MDN HTTP 문서</a></p>\n</blockquote>\n<blockquote>\n<p>The Hypertext Transfer Protocol (HTTP) is an application-level protocol for distributed, collaborative, hypermedia information systems. It is a generic, stateless, protocol which can be used for many tasks beyond its use for hypertext, such as name servers and distributed object management systems, through extension of its request methods, error codes and headers [47]. A feature of HTTP is the typing and negotiation of data representation, allowing systems to be built independently of the data being transferred.</p>\n<p><a href=\"https://datatracker.ietf.org/doc/html/rfc2616\">RFC2616 Hypertext Transfer Protocol -- HTTP/1.1 스펙</a></p>\n</blockquote>\n<h4 id=\"restful-representational-state-transfer-표현적-상태-전이\">RESTful: Representational state transfer 표현적 상태 전이</h4>\n<blockquote>\n<p>Client-Server, Stateless, Cache, Uniform Interface, Layered System</p>\n<p>Roy Thomas Fielding의 논문</p>\n<p><a href=\"https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm\">Architectural Styles and the Design of Network-based Software Architectures</a></p>\n</blockquote>\n<h4 id=\"openapi\">OpenAPI</h4>\n<blockquote>\n<p>The OpenAPI Specification (OAS) defines a standard, language-agnostic interface to RESTful APIs which allows both humans and computers to discover and understand the capabilities of the service without access to source code, documentation, or through network traffic inspection. When properly defined, a consumer can understand and interact with the remote service with a minimal amount of implementation logic.\nAn OpenAPI definition can then be used by documentation generation tools to display the API, code generation tools to generate servers and clients in various programming languages, testing tools, and many other use cases.</p>\n<p><a href=\"https://swagger.io/specification/\">Swagger 공식 사이트의 OpenAPI 소개</a></p>\n</blockquote>\n<h4 id=\"동사로-api만들기-rest를-넘어서\">동사로 API만들기: REST를 넘어서</h4>\n<h3 id=\"grpc-google-remote-procedure-call-구글-원격-프로시저-호출\">gRPC: google Remote Procedure Call 구글 원격 프로시저 호출</h3>\n<blockquote>\n<p>gRPC is a modern open source high performance Remote Procedure Call (RPC) framework that can run in any environment. It can efficiently connect services in and across data centers with pluggable support for load balancing, tracing, health checking and authentication. It is also applicable in last mile of distributed computing to connect devices, mobile applications and browsers to backend services.</p>\n<p><a href=\"https://grpc.io/about/\">About gRPC 공식 홈페이지</a></p>\n</blockquote>\n<h3 id=\"graphql-graph-query-language-진화하는-api를-위한-질의-언어\">GraphQL: Graph Query Language 진화하는 API를 위한 질의 언어</h3>\n<blockquote>\n<p>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.</p>\n<p><a href=\"https://graphql.org/\">GraphQL 공식 사이트</a></p>\n</blockquote>\n<h3 id=\"websocket-양방향-실시간-이벤트-기반-통신을-위한-api\">WebSocket: 양방향, 실시간, 이벤트 기반 통신을 위한 API</h3>\n<blockquote>\n<p>The WebSocket API is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\">MDN The WebSocket API 문서</a></p>\n</blockquote>\n<blockquote>\n<p>Socket.IO enables real-time, bidirectional and event-based communication.\nIt works on every platform, browser or device, focusing equally on reliability and speed.</p>\n<p>대표적인 소켓 통신 라이브러리. <a href=\"https://socket.io/\">Socket.IO 공식 사이트</a></p>\n</blockquote>\n<h3 id=\"pubsub-게시자-구독자-패턴-비동기-메세징-api\">PubSub: 게시자-구독자 패턴. 비동기 메세징 API</h3>\n<blockquote>\n<p>SUBSCRIBE, UNSUBSCRIBE and PUBLISH implement the Publish/Subscribe messaging paradigm where (citing Wikipedia) senders (publishers) are not programmed to send their messages to specific receivers (subscribers). Rather, published messages are characterized into channels, without knowledge of what (if any) subscribers there may be.\nSubscribers express interest in one or more channels, and only receive messages that are of interest, without knowledge of what (if any) publishers there are. This decoupling of publishers and subscribers can allow for greater scalability and a more dynamic network topology.</p>\n<p><a href=\"https://redis.io/topics/pubsub\">Redis Pub/Sub 공식 문서</a></p>\n</blockquote>\n","data":{"tocTree":[{"depth":2,"text":"웹 인터페이스는 서버가 외부와 통신하는 방법이자, 계약입니다.","id":"웹-인터페이스는-서버가-외부와-통신하는-방법이자-계약입니다","i":0,"children":[]},{"depth":2,"text":"수단과 양식, 통신 프로토콜","id":"수단과-양식-통신-프로토콜","i":1,"children":[{"depth":3,"text":"HTTP: HyperText Transfer Protocol 하이퍼 텍스트 전송 규약","id":"http-hypertext-transfer-protocol-하이퍼-텍스트-전송-규약","i":2,"parent":true,"children":[{"depth":4,"text":"RESTful: Representational state transfer 표현적 상태 전이","id":"restful-representational-state-transfer-표현적-상태-전이","i":3,"parent":true,"children":[]},{"depth":4,"text":"OpenAPI","id":"openapi","i":4,"parent":true,"children":[]},{"depth":4,"text":"동사로 API만들기: REST를 넘어서","id":"동사로-api만들기-rest를-넘어서","i":5,"parent":true,"children":[]}]},{"depth":3,"text":"gRPC: google Remote Procedure Call 구글 원격 프로시저 호출","id":"grpc-google-remote-procedure-call-구글-원격-프로시저-호출","i":6,"parent":true,"children":[]},{"depth":3,"text":"GraphQL: Graph Query Language 진화하는 API를 위한 질의 언어","id":"graphql-graph-query-language-진화하는-api를-위한-질의-언어","i":7,"parent":true,"children":[]},{"depth":3,"text":"WebSocket: 양방향, 실시간, 이벤트 기반 통신을 위한 API","id":"websocket-양방향-실시간-이벤트-기반-통신을-위한-api","i":8,"parent":true,"children":[]},{"depth":3,"text":"PubSub: 게시자-구독자 패턴. 비동기 메세징 API","id":"pubsub-게시자-구독자-패턴-비동기-메세징-api","i":9,"parent":true,"children":[]}]}]},"permanlink":"/api-layer/","tags":["작성 중","DDD","계층형 아키텍처","API","REST","gRPC","GraphQL","WebSocket","PubSub"]},{"slug":"python-async-db","frontmatter":{"title":"파이썬 비동기 DB 비교 - 1. 큰 그림","excerpt":"파이썬에서 비동기 DB를 SQLDriver, ORM, NoSQL까지 다양한 방법으로 구현해보고 비교해보려 합니다. 큰 그림을 그려보면서 시작합니다.","date":"2021-07-13T11:23:44.765012","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 비동기, 파이썬, 데이터베이스"},"html":"<h2 id=\"asyncio-db를-다양한-방식으로-구현해보고-비교합니다\">AsyncIO DB를 다양한 방식으로 구현해보고 비교합니다.</h2>\n<h2 id=\"비동기는-쓰레드-하나single-thread로도-차단blocking-없이-더-많은-요청을-처리할-수-있습니다\">비동기는 쓰레드 하나(single thread)로도 차단(Blocking) 없이 더 많은 요청을 처리할 수 있습니다.</h2>\n<h2 id=\"파이썬에서는-asyncio와-asyncawait-키워드로-비동기를-처리합니다\">파이썬에서는 AsyncIO와 async/await 키워드로 비동기를 처리합니다.</h2>\n<h2 id=\"다양한-db를-사용해서-구현해보고-비교해봅니다\">다양한 DB를 사용해서 구현해보고 비교해봅니다.</h2>\n<h3 id=\"sql-driver--sqliteaiosqlite-postgresqlasyncpg\">SQL Driver : SQLite/aiosqlite, PostgreSQL/asyncpg</h3>\n<h3 id=\"orm-객체-관계-맵퍼--sqlalchemy-tortoise\">ORM 객체 관계 맵퍼 : SQLAlchemy, Tortoise</h3>\n<h3 id=\"next-generation--edgedb\">Next-Generation? : EdgeDB</h3>\n<h3 id=\"key-value-키-값--redisasync-redis\">Key-Value 키-값 : Redis/async-redis</h3>\n<h3 id=\"document--mongodbmotor\">Document : MongoDB/Motor</h3>\n<h3 id=\"graph--neo4jaioneo4j\">Graph : Neo4j/aioneo4j</h3>\n","data":{"tocTree":[{"depth":2,"text":"AsyncIO DB를 다양한 방식으로 구현해보고 비교합니다.","id":"asyncio-db를-다양한-방식으로-구현해보고-비교합니다","i":0,"children":[]},{"depth":2,"text":"비동기는 쓰레드 하나(single thread)로도 차단(Blocking) 없이 더 많은 요청을 처리할 수 있습니다.","id":"비동기는-쓰레드-하나single-thread로도-차단blocking-없이-더-많은-요청을-처리할-수-있습니다","i":1,"children":[]},{"depth":2,"text":"파이썬에서는 AsyncIO와 async/await 키워드로 비동기를 처리합니다.","id":"파이썬에서는-asyncio와-asyncawait-키워드로-비동기를-처리합니다","i":2,"children":[]},{"depth":2,"text":"다양한 DB를 사용해서 구현해보고 비교해봅니다.","id":"다양한-db를-사용해서-구현해보고-비교해봅니다","i":3,"children":[{"depth":3,"text":"SQL Driver : SQLite/aiosqlite, PostgreSQL/asyncpg","id":"sql-driver--sqliteaiosqlite-postgresqlasyncpg","i":4,"parent":true,"children":[]},{"depth":3,"text":"ORM 객체 관계 맵퍼 : SQLAlchemy, Tortoise","id":"orm-객체-관계-맵퍼--sqlalchemy-tortoise","i":5,"parent":true,"children":[]},{"depth":3,"text":"Next-Generation? : EdgeDB","id":"next-generation--edgedb","i":6,"parent":true,"children":[]},{"depth":3,"text":"Key-Value 키-값 : Redis/async-redis","id":"key-value-키-값--redisasync-redis","i":7,"parent":true,"children":[]},{"depth":3,"text":"Document : MongoDB/Motor","id":"document--mongodbmotor","i":8,"parent":true,"children":[]},{"depth":3,"text":"Graph : Neo4j/aioneo4j","id":"graph--neo4jaioneo4j","i":9,"parent":true,"children":[]}]}]},"permanlink":"/python-async-db/","tags":["작성 중","비동기","파이썬","데이터베이스"]},{"slug":"what-is-asynchronous","frontmatter":{"title":"비동기(asynchronous)","excerpt":"비동기는 DB나 네트워크 요청 등을 차단 없이 처리할 수 있습니다. 개념을 설명하고, 흔한 오해를 풀어봅니다.","date":"2021-07-13T11:22:34.832910","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 비동기, 동시성, 병렬성, Blocking"},"html":"","data":{"tocTree":[]},"permanlink":"/what-is-asynchronous/","tags":["작성 중","비동기","동시성","병렬성","Blocking"]},{"slug":"hljs-elder-blog","frontmatter":{"title":"shiki로 elder.js 코드블럭 문법 강조하기","excerpt":"Elder.js 기본 템플릿에 내장된 shiki를 이용해서 코드블럭 문법 강조(syntax highlight)를 해봅시다.","date":"2021-07-11T13:27:22.262492","author":"탐정토끼(Taehee Kim)","tag":"작성 중, Elder.js, Blog, syntax highlighting"},"html":"<h2 id=\"elderconfigjs-에-shiki-테마-설정하기\">elder.config.js 에 shiki 테마 설정하기</h2>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-js\"><span class=\"line\"><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #FFCB6B\">plugins</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">@elderjs/plugin-markdown</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">: </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">      </span><span style=\"color: #545454\">///...</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      useSyntaxHighlighting</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        theme</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">material-theme-darker</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span></code></pre>\n","data":{"tocTree":[{"depth":2,"text":"elder.config.js 에 shiki 테마 설정하기","id":"elderconfigjs-에-shiki-테마-설정하기","i":0,"children":[]}]},"permanlink":"/hljs-elder-blog/","tags":["작성 중","Elder.js","Blog","syntax highlighting"]},{"slug":"category-for-functional","frontmatter":{"title":"함수형 프로그래밍을 위한 카테고리 이론","excerpt":"수학까지 해야하나? 함수형 프로그래밍의 근간이 되는 카테고리 이론과 학습 자료를 소개합니다.","date":"2021-07-10T10:03:01.321Z","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 함수형, 카테고리 이론"},"html":"<p>latex 테스트</p>\n<p>함수 합성</p>\n<p>ℎ ∘ (𝑔 ∘ 𝑓 ) = (ℎ ∘ 𝑔) ∘ 𝑓 = ℎ ∘ 𝑔 ∘ 𝑓</p>\n<h2 id=\"remark-math-katex\">remark math katex</h2>\n<p>$$</p>\n<p>h \\\\circ (g \\\\circ f) = (h \\\\circ g) \\\\circ f = h \\\\circ g \\\\circ f</p>\n<p>$$</p>\n","data":{"tocTree":[{"depth":2,"text":"remark math katex","id":"remark-math-katex","i":0,"children":[]}]},"permanlink":"/category-for-functional/","tags":["작성 중","함수형","카테고리 이론"]},{"slug":"string-std","frontmatter":{"title":"문자열 String std 파고들기","excerpt":"문자열은 대충 생각하면 문자의 배열이지만, 실제로는 더 복잡합니다. 문자열을 0101 이진수로 저장하는 방법. 유니코드, UTF-8와 같은 인코딩에 대해 알아봅니다.","date":"2021-07-08T15:26:07.156Z","author":"탐정토끼(Taehee Kim)","tag":"작성 중, std, 문자열, 표준 라이브러리"},"html":"<p>std 시리즈에서는 서로 다른 언어들의 표준 라이브러리와 자료형, 문법을 비교해보고자합니다.</p>\n<p>std는 standard 표준의 약자로, 보통 그 언어의 표준 라이브러리를 std라고 부릅니다. 언어마다 표준은 다르며, 각자 나름대로 그런 표준을 선택한 이유와 배경이 있습니다. 여기서는 다양한 언어들의 표준 라이브러리로 대표적인 작업을 처리하는 예시 코드를 보여드립니다. 직접 REPL 등에 하나씩 쳐보시면서 익혀보시면 더욱 좋겠죠.</p>\n<p>하지만 코드만 봐서는 원리는 알기 어렵습니다. 문자열은 언어마다 어떻게 구현되어 있으며, 이게 어떤 쓸모가 있을까요? 기본적으로는 재미로 알아 보자는 거지만. 이런 지식이 도움이 되는 때도 있을 겁니다.</p>\n<ul>\n<li><a href=\"/string-encoding/\">문자, 문자열, 한글 인코딩</a></li>\n<li><a href=\"/string-immutable/\">문자열은 왜 불변인가?</a></li>\n</ul>\n<h2 id=\"프로그래밍-언어별-string-표준-라이브러리\">프로그래밍 언어별 String 표준 라이브러리</h2>\n<h3 id=\"java-char-char-string\">Java: char, Char, String</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-java\"><span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">char</span><span style=\"color: #EEFFFF\"> f </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 글자와 String을 구분한다.</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> foo_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">입니다.</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 탐정토끼  &lt;- 원래 값은 불변</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo_copy</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 탐정토끼입니다. </span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 길이</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">charAt</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">substring</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">substring</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 마지막 인덱스 미포함</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">substring</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 마지막 2 글자</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 뒤집기</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">StringBuffer</span><span style=\"color: #EEFFFF\"> sb </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">StringBuffer</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">str</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> reversedFoo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> sb</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">reverse</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">reversedFoo</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 바꾸기</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">replaceAll</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014-02-14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 쪼개기</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">for</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> item</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)){</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">item</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">02</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]);</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">valueOf</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">24</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">24시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;1&quot; &lt; &quot;3&quot; &lt;- 비교 불가</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// error: bad operand types for binary operator &#39;&lt;&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 합치기</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #EEFFFF\"> arr </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">};</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> arr</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> html </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &lt;html&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;body&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">      &lt;p&gt;Hello, world&lt;/p&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">    &lt;/body&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &lt;/html&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 자바15부터 가능</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 주어진 문자열을 포함하는지?</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertTrue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 주어진 문자열로 시작하는지?</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertTrue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://twinstae.github.io/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">startswith</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 주어진 문자열로 끝나는지?</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertTrue</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">fiesta-izone.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">endswith</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 비어있는지?</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertFalse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">name</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">isBlank</span><span style=\"color: #89DDFF\">());</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">format</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, %s</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> name</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 소문자로</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">TAEhee Kim</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toLowerCase</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 공백 자르기</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">    내용     </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #89DDFF\">(),</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">내용</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 메소드 체이닝</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #EEFFFF\"> raw_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">         TeST HeLLo WORld      </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\\t</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #EEFFFF\"> expected </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">test</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">world</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">};</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">assertEqual</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">raw_text</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">toLowerCase</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">),</span><span style=\"color: #EEFFFF\"> expected</span><span style=\"color: #89DDFF\">);</span></span></code></pre>\n<h3 id=\"python-str\">Python: str</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-python\"><span class=\"line\"><span style=\"color: #EEFFFF\">foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 리터럴</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">type</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">type</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 글자 하나의 타입도 str</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &lt;class &#39;str&#39;&gt;</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #545454\"># 값을 복사</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">입니다.</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼&quot; 원래 값은 불변</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">foo_copy</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼입니다.&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">len</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 문자열의 길이</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 문자열[start : end : step]</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\"># 문자 가져오기</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 자르기. start 부터 끝까지</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\"># 마지막 인덱스는 미포함</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">[-</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">:]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\"># 마지막 2글자</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abcdefg</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">[::</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">aceg</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># step 2칸씩 </span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">foo</span><span style=\"color: #89DDFF\">[::-</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 뒤집기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;끼토정탐&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">replace</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014-02-14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 바꾸기</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">02</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 쪼개기</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">str</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">24</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># int와 문자열 합치기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;24시간이 모자라&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 비교 가능</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 합치기</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 이어붙이기</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">long_csv </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span><span style=\"color: #C3E88D\">12, 3, &quot;빨강&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">13, 2, &quot;파랑&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">14, 1, &quot;초록&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 여러 줄 문자열</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">long_csv</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 줄 단위로 자르기</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">in</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">True</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># foo가 &quot;탐정&quot;을 포함하는지? </span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 주어진 문자열로 시작하는지?</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://twinstae.github.io/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">startswith</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">True</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 주어진 문자열로 끝나는지?</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">fiesta-izone.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">endswith</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">str</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 타입힌트, &#39; 홑 따옴표도 상관 없다.</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">not</span><span style=\"color: #EEFFFF\"> name </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">False</span><span style=\"color: #EEFFFF\">;   </span><span style=\"color: #545454\"># 비어 있는지? PEP8 가이드 권장</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;name != &quot;&quot;               # 이렇게 할 수도 있긴 하다.</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello, %s</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">%</span><span style=\"color: #82AAFF\"> name</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># format</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;hello, kim&#39;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">f</span><span style=\"color: #C3E88D\">&#39;hello, </span><span style=\"color: #82AAFF\">{name}</span><span style=\"color: #C3E88D\">&#39;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\">   </span><span style=\"color: #545454\"># interpolation</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;hello, kim&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #82AAFF\">print</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">TAEhee Kim</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">lower</span><span style=\"color: #89DDFF\">())</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 소문자로</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;taehee kim&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #545454\">    내용     </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #545454\">   </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">strip</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\"># 공백 자르기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;내용&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 메소드 체이닝</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">         TeST HeLLo WORld      </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\\t</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">strip</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">lower</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&#39;test&#39;, &#39;hello&#39;, &#39;world&#39;]</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> re</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">search</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">([1-6])학년 ([0-9]{1,2})단원</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #82AAFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2학년 3단원</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">group</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2학년 3단원</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">group</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">assert</span><span style=\"color: #EEFFFF\"> m</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">group</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">3</span><span style=\"color: #89DDFF\">&#39;</span></span></code></pre>\n<h3 id=\"typescript-string\">TypeScript: string</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-typescript\"><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 글자 하나도 string</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;string&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> foo_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">입니다.</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(foo)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;탐정토끼&quot; 원래 값은 불변</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(foo_copy)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;탐정토끼입니다.&quot; 새로운 값만 변함</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">length </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">4</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 길이</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #EEFFFF\">] </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\">// 가져오기</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 자르기</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">정토</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 마지막 인덱스 미포함</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #EEFFFF\">(foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">length </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 마지막 2글자</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 문자열 뒤집기</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">([</span><span style=\"color: #89DDFF\">...</span><span style=\"color: #EEFFFF\">foo]</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">reverse</span><span style=\"color: #EEFFFF\">()</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #EEFFFF\">())</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;끼토정탐&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">replace</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #EEFFFF\">\\\\/</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #F78C6C\">g</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014-02-14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 모두 바꾸기</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #545454\">// 쪼개기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// [&quot;2014&quot;, &quot;02&quot;, &quot;14&quot;]</span></span>\n\n<span class=\"line\"><span style=\"color: #F78C6C\">24</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 자동 형변환</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &quot;24시간이 모자라&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 비교 가능</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// true</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 합치기</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">]</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 이어붙이기</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> long_csv </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">12, 3, &quot;빨강&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">13, 2, &quot;파랑&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">14, 1, &quot;초록&quot;</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 여러 줄 문자열</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> lines </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> long_csv</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">) # 줄 단위로 자르기</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">includes</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">)  </span></span>\n<span class=\"line\"><span style=\"color: #545454\">// true  주어진 문자열을 포함하는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://twinstae.github.io/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">startsWith</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// true  주어진 문자열로 시작하는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">fiesta-izone.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">endsWith</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// 주어진 문자열로 끝나는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> string </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 명시적 타입</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">!</span><span style=\"color: #EEFFFF\"> name</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\">   </span><span style=\"color: #545454\">// 비어 있는지?</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// false</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">name </span><span style=\"color: #89DDFF\">!==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #EEFFFF\">               </span><span style=\"color: #545454\">// 이렇게 할 수도 있긴 하다.</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">hello, </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #EEFFFF\">name</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #EEFFFF\">   </span><span style=\"color: #545454\">// interpolation</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &#39;hello, kim&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">TAEhee Kim</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toLowerCase</span><span style=\"color: #EEFFFF\">() </span><span style=\"color: #545454\">// 소문자로</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &#39;taehee kim&#39;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">    내용     </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #EEFFFF\">()  </span><span style=\"color: #545454\">// 앞뒤 공백 자르기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// &#39;내용&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 메소드 체이닝</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">         TeST HeLLo WORld      </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\\t</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #EEFFFF\">()</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toLowerCase</span><span style=\"color: #EEFFFF\">()</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">// [&#39;test&#39;, &#39;hello&#39;, &#39;world&#39;]</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2학년 3단원</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">match</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">([1-6])학년 ([0-9]{1,2})단원</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #EEFFFF\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">m[</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #EEFFFF\">] </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2학년 3단원</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">m[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\">] </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">2</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">m[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\">] </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">3</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #EEFFFF\">라벨</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> 학년</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> 단원</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> m</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 구조 분해 할당</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">라벨 </span><span style=\"color: #545454\">// &quot;2학년 3단원&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">학년 </span><span style=\"color: #545454\">// &quot;2&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">단원 </span><span style=\"color: #545454\">// &quot;3&quot;</span></span></code></pre>\n<h3 id=\"rust-str-stdstring\">Rust: str, std::String</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-rust\"><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">println!</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;{}&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">chars</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">rev</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">collect</span><span style=\"color: #89DDFF\">::&lt;</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">&gt;());</span></span></code></pre>\n<h3 id=\"clojure-javalangcharacter-javalangstring\">Clojure: java.lang.Character, java.lang.String</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-clojure\"><span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">require</span><span style=\"color: #EEFFFF\"> &#39;</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #EEFFFF\">clojure.string </span><span style=\"color: #89DDFF\">:as</span><span style=\"color: #EEFFFF\"> s</span><span style=\"color: #89DDFF\">])</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">def</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">count</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 길이</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; 4</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 문자 가져오기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; \\\\탐</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">subs</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 자르기. start 부터 끝까지</span></span>\n<span class=\"line\"><span style=\"color: #545454\">;&quot;정토끼&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">subs</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 마지막 인덱스는 미포함</span></span>\n<span class=\"line\"><span style=\"color: #545454\">;&quot;정토&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">subs</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">-</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">count</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 마지막 2글자</span></span>\n<span class=\"line\"><span style=\"color: #545454\">;&quot;토끼&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">print</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/reverse</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 뒤집기</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/replace</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">, </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 바꾸기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;2014-02-14&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/split</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">#&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 쪼개기 #은 정규표현식 표시</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; (&quot;2014&quot; &quot;02&quot; &quot;14&quot;)</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">def</span><span style=\"color: #EEFFFF\"> long-csv </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">12, 3, </span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">빨강</span><span style=\"color: #EEFFFF\">\\\\&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">13, 2, </span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">파랑</span><span style=\"color: #EEFFFF\">\\\\&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">14, 1, </span><span style=\"color: #EEFFFF\">\\\\&quot;</span><span style=\"color: #C3E88D\">초록</span><span style=\"color: #EEFFFF\">\\\\&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/split-lines</span><span style=\"color: #EEFFFF\"> long-csv</span><span style=\"color: #89DDFF\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/includes?</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; foo가 &quot;탐정&quot;을 포함하는지?</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/startswith?</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://twinstae.github.io/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 시작하는지?</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/ends-with?</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">fiesta-izone.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 끝나는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/blank?</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 비어있는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">str</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 합치기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;taehee kim&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">str</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">24</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; int와 문자열 합치기. 자동 형 변환.</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;24시간이 모자라&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">; (&lt; &quot;1&quot; &quot;3&quot;)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; 비교 불가 .String cannot be cast to class java.lang.Number</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/join</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">입니다.</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">])</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 붙이기</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;탐정 토끼 입니다.&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">format</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello, %s</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">; 포맷</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;hello, 탐정토끼&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/lower</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">TAEhee Kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;taehee kim&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/trim</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    내용     </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; &quot;내용&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">; 파이프</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">def</span><span style=\"color: #EEFFFF\"> raw_text </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\">         TeST HeLLo WORld      </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\n</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #EEFFFF\">\\\\t</span><span style=\"color: #C3E88D\">   </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">-&gt;</span><span style=\"color: #EEFFFF\"> raw_text s/trim s/lower-case </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">s/split</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">#&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">))</span></span>\n<span class=\"line\"><span style=\"color: #545454\">; [&quot;test&quot; &quot;hello&quot; &quot;world&quot;]</span></span></code></pre>\n<h3 id=\"elixir-stringgrapheme-stringt\">Elixir: String.grapheme(), String.t()</h3>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-elixir\"><span class=\"line\"><span style=\"color: #EEFFFF\">foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 리터럴</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">i </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># String 탐</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Term</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &quot;탐&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Data type</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  BitString</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Byte size</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  3</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Description</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  This is a string: a UTF-8 encoded binary. It&#39;s printed surrounded by</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &quot;double quotes&quot; because all UTF-8 encoded code points in it are printable.</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Raw representation</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  &lt;&lt;237, 131, 144&gt;&gt;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Reference modules</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  String, :binary</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Implemented protocols</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  Collectable, IEx.Info, Inspect, List.Chars, String.Chars</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">i </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">탐</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 글자 탐</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Term</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  [53456]</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Data type</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  List</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Reference modules</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  List</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">Implemented protocols</span></span>\n<span class=\"line\"><span style=\"color: #C3E88D\">  Collectable, Enumerable, IEx.Info, Inspect, List.Chars, String.Chars</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;&quot;&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> foo </span><span style=\"color: #545454\"># 값을 복사</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> foo_copy </span><span style=\"color: #89DDFF\">&lt;&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">입니다.</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼입니다.&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼&quot; 원래 값은 그대로</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">foo_copy</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼입니다.&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 문자열의 길이</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 4</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">byte_size</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 12 한글은 한 글자에 3바이트</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">codepoints</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">)</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">at</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 가져오기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 자르기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;정토끼&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 마지막 인덱스 포함한다!!!</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;정토끼&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">slice</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">..</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">length</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">))</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># range로 마지막 2글자</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;토끼&quot; </span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">reverse</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 뒤집기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;끼토정탐&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">replace</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 바꾸기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;2014-02-14&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2014/02/14</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 쪼개기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&quot;2014&quot;, &quot;02&quot;, &quot;14&quot;]</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">Integer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">to_string</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">24</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">시간이 모자라</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 명시적으로 형변환</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;24시간이 모자라&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 비교 가능</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># true</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">taehee kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 합치기</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">Enum</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">join</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">토끼</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 이어붙이기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;탐정토끼&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains?</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">foo</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">탐정</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># foo가 &quot;탐정&quot;을 포함하는지? </span></span>\n<span class=\"line\"><span style=\"color: #545454\"># true</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 주어진 문자열로 시작하는지?</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">starts_with?</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https://twinstae.github.io/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">https</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># true</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 주어진 문자열로 끝나는지?</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">ends_with?</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">fiesta-izone.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">.mp3</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># true</span></span>\n\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">name </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">kim</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">name != </span><span style=\"color: #89DDFF\">&quot;&quot;</span><span style=\"color: #C3E88D\"> #  비어 있는지?</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">hello</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">#{name}&quot;   # interpolation</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &#39;hello, kim&#39;</span></span>\n\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">downcase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">TAEhee Kim</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\"># 소문자로</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;taehee kim&quot;</span></span>\n<span class=\"line\"><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    내용     \\\n   </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\">  </span><span style=\"color: #545454\"># 공백 자르기</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;내용&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 파이프</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">    \\\n         TeST HeLLo WORld      \\\n \\\n \\\\t   </span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">raw_text </span><span style=\"color: #89DDFF\">|&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">trim</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">|&gt;</span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">downcase</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">|&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">String</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">split</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&quot;test&quot;, &quot;hello&quot;, &quot;world&quot;]</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">m </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">Regex</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">run</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">~r/</span><span style=\"color: #C3E88D\">([1-6])학년 ([0-9]{1,2})단원</span><span style=\"color: #89DDFF\">/</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">2학년 3단원</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># [&quot;2학년 3단원&quot;, &quot;2&quot;, &quot;3&quot;]</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">[</span><span style=\"color: #EEFFFF\">전체</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> 학년</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> 단원</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> m</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">학년</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;2&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">단원</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># &quot;3&quot;</span></span></code></pre>\n","data":{"tocTree":[{"depth":2,"text":"프로그래밍 언어별 String 표준 라이브러리","id":"프로그래밍-언어별-string-표준-라이브러리","i":0,"children":[{"depth":3,"text":"Java: char, Char, String","id":"java-char-char-string","i":1,"parent":true,"children":[]},{"depth":3,"text":"Python: str","id":"python-str","i":2,"parent":true,"children":[]},{"depth":3,"text":"TypeScript: string","id":"typescript-string","i":3,"parent":true,"children":[]},{"depth":3,"text":"Rust: str, std::String","id":"rust-str-stdstring","i":4,"parent":true,"children":[]},{"depth":3,"text":"Clojure: java.lang.Character, java.lang.String","id":"clojure-javalangcharacter-javalangstring","i":5,"parent":true,"children":[]},{"depth":3,"text":"Elixir: String.grapheme(), String.t()","id":"elixir-stringgrapheme-stringt","i":6,"parent":true,"children":[]}]}]},"permanlink":"/string-std/","tags":["작성 중","std","문자열","표준 라이브러리"]},{"slug":"brief-history-of-web-front","frontmatter":{"title":"웹 프런트 엔드의 간략한 역사","excerpt":"태초의 HTML 정적 파일부터, 템플릿 엔진, CSR, SPA, SSR, JAM Stack 에 이르기까지 웹 프런트 엔드가 진화해온 과정","date":"2021-07-08T07:30:58.196Z","author":"탐정토끼(Taehee Kim)","tag":"작성 중, front-end, CSR, SPA, SSR, JAM Stack"},"html":"<h2 id=\"static-file-정적-파일을-서빙하기---나모-웹-에디터\">Static File 정적 파일을 서빙하기 - 나모 웹 에디터</h2>\n<p>{{keyword}}Static File{{/keyword}} 을 서빙하기</p>\n<h3 id=\"웹-브라우저-주소-창에-url을-치면-일어나는-일\">웹 브라우저 주소 창에 URL을 치면 일어나는 일</h3>\n<h3 id=\"정적-파일static-file-html-css-js-이미지\">정적 파일(static file) HTML, CSS, JS, 이미지</h3>\n<h3 id=\"url과-폴더-기반-라우팅\">url과 폴더 기반 라우팅</h3>\n<h2 id=\"ssr-서버에서-템플릿-동적으로-렌더링하기---템플릿-엔진\">SSR 서버에서 템플릿 동적으로 렌더링하기 - 템플릿 엔진</h2>\n<p>{{keyword}}SSR{{/keyword}}이란...</p>\n<h3 id=\"실시간으로-변하는-상태state에-따라-다른-내용을-보여주고-싶다\">실시간으로 변하는 상태(state)에 따라 다른 내용을 보여주고 싶다.</h3>\n<h3 id=\"동적-dynamic-렌더링이란\">동적 (dynamic) 렌더링이란?</h3>\n<h2 id=\"csr-클라이언트에서-렌더링하기---jquery와-ajax-모던-js\">CSR 클라이언트에서 렌더링하기 - JQuery와 Ajax, 모던 JS</h2>\n<h3 id=\"사용자-동작에-따라-반응하게-만들고-싶다\">사용자 동작에 따라 반응하게 만들고 싶다.</h3>\n<h2 id=\"spa-웹-앱을-만들자---angular-vue-react\">SPA 웹 앱을 만들자 - Angular, Vue, React</h2>\n<h3 id=\"새로고침-없이-브라우저에서-동적으로-dom을-그리고-싶다\">새로고침 없이 브라우저에서 동적으로 dom을 그리고 싶다.</h3>\n<h2 id=\"ssr이-spa와-함께-부활하다---nextjs\">SSR이 SPA와 함께 부활하다 - Next.js</h2>\n<h3 id=\"빠르게-사이트를-보여주고-멍청한-검색엔진-크롤러에게-html을-보여주고-싶다\">빠르게 사이트를 보여주고, 멍청한 검색엔진 크롤러에게 HTML을 보여주고 싶다</h3>\n<h2 id=\"정적-파일이-현대-기술과-함께-돌아오다---jam\">정적 파일이 현대 기술과 함께 돌아오다 - JAM</h2>\n<h3 id=\"복잡한-webserver-없이-빠르게-웹-사이트를-보여주고-싶다\">복잡한 WebServer 없이 빠르게 웹 사이트를 보여주고 싶다.</h3>\n<blockquote>\n<ul>\n<li><a href=\"https://jamstack.org/\">잼스택 홍보 사이트</a></li>\n<li><a href=\"https://www.itworld.co.kr/news/156752\">잼스택, 웹 개발을 뒤집는 정적 웹사이트 혁명 : IT World 번역 기사</a></li>\n<li><a href=\"https://pks2974.medium.com/jam-stack-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC%ED%95%98%EA%B8%B0-17dd5c34edf7\">JAM Stack 개념 정리하기 : 박성룡님 블로그</a></li>\n</ul>\n</blockquote>\n<h2 id=\"진화는-일직선이-아니다\">진화는 일직선이 아니다.</h2>\n<h2 id=\"각-방식의-장-단점-총-정리\">각 방식의 장, 단점 총 정리</h2>\n","data":{"tocTree":[{"depth":2,"text":"Static File 정적 파일을 서빙하기 - 나모 웹 에디터","id":"static-file-정적-파일을-서빙하기---나모-웹-에디터","i":0,"children":[{"depth":3,"text":"웹 브라우저 주소 창에 URL을 치면 일어나는 일","id":"웹-브라우저-주소-창에-url을-치면-일어나는-일","i":1,"parent":true,"children":[]},{"depth":3,"text":"정적 파일(static file) HTML, CSS, JS, 이미지","id":"정적-파일static-file-html-css-js-이미지","i":2,"parent":true,"children":[]},{"depth":3,"text":"url과 폴더 기반 라우팅","id":"url과-폴더-기반-라우팅","i":3,"parent":true,"children":[]}]},{"depth":2,"text":"SSR 서버에서 템플릿 동적으로 렌더링하기 - 템플릿 엔진","id":"ssr-서버에서-템플릿-동적으로-렌더링하기---템플릿-엔진","i":4,"children":[{"depth":3,"text":"실시간으로 변하는 상태(state)에 따라 다른 내용을 보여주고 싶다.","id":"실시간으로-변하는-상태state에-따라-다른-내용을-보여주고-싶다","i":5,"parent":true,"children":[]},{"depth":3,"text":"동적 (dynamic) 렌더링이란?","id":"동적-dynamic-렌더링이란","i":6,"parent":true,"children":[]}]},{"depth":2,"text":"CSR 클라이언트에서 렌더링하기 - JQuery와 Ajax, 모던 JS","id":"csr-클라이언트에서-렌더링하기---jquery와-ajax-모던-js","i":7,"children":[{"depth":3,"text":"사용자 동작에 따라 반응하게 만들고 싶다.","id":"사용자-동작에-따라-반응하게-만들고-싶다","i":8,"parent":true,"children":[]}]},{"depth":2,"text":"SPA 웹 앱을 만들자 - Angular, Vue, React","id":"spa-웹-앱을-만들자---angular-vue-react","i":9,"children":[{"depth":3,"text":"새로고침 없이 브라우저에서 동적으로 dom을 그리고 싶다.","id":"새로고침-없이-브라우저에서-동적으로-dom을-그리고-싶다","i":10,"parent":true,"children":[]}]},{"depth":2,"text":"SSR이 SPA와 함께 부활하다 - Next.js","id":"ssr이-spa와-함께-부활하다---nextjs","i":11,"children":[{"depth":3,"text":"빠르게 사이트를 보여주고, 멍청한 검색엔진 크롤러에게 HTML을 보여주고 싶다","id":"빠르게-사이트를-보여주고-멍청한-검색엔진-크롤러에게-html을-보여주고-싶다","i":12,"parent":true,"children":[]}]},{"depth":2,"text":"정적 파일이 현대 기술과 함께 돌아오다 - JAM","id":"정적-파일이-현대-기술과-함께-돌아오다---jam","i":13,"children":[{"depth":3,"text":"복잡한 WebServer 없이 빠르게 웹 사이트를 보여주고 싶다.","id":"복잡한-webserver-없이-빠르게-웹-사이트를-보여주고-싶다","i":14,"parent":true,"children":[]}]},{"depth":2,"text":"진화는 일직선이 아니다.","id":"진화는-일직선이-아니다","i":15,"children":[]},{"depth":2,"text":"각 방식의 장, 단점 총 정리","id":"각-방식의-장-단점-총-정리","i":16,"children":[]}]},"permanlink":"/brief-history-of-web-front/","tags":["작성 중","front-end","CSR","SPA","SSR","JAM Stack"]},{"slug":"what-is-trade-off","frontmatter":{"title":"Trade Off 트레이드 오프","excerpt":"Trade Off란 교환 관계에 있다는 뜻이다. 즉 어떤 언어나 기술을 선택했을 때 얻는 게 있으면, 잃는 것도 있다는 뜻으로 쓴다.","date":"2021-07-08T07:20:00.196Z","author":"탐정토끼(Taehee Kim)","tag":"작성 중, 개념어, Trade Off"},"html":"<p>사전적 정의 : 교환, 마치 양팔 저울처럼 한 쪽을 늘리면, 다른 한 쪽을 잃게 된다는 뜻.\n여러 언어나 기술에는 각자 장, 단점이 있으니 내 상황에 맞게 올바른 기술을 선택해야한다는 뜻으로 쓰입니다.</p>\n","data":{"tocTree":[]},"permanlink":"/what-is-trade-off/","tags":["작성 중","개념어","Trade Off"]},{"slug":"customize-elder-blog","frontmatter":{"title":"Elder 블로그 커스터마이징 하기","excerpt":"Elder 기본 템플릿에 웹 폰트, 날짜 순 정렬, tooltip 같은 기능들을 추가해봅니다.","date":"2021-07-08T05:01:27.798Z","author":"탐정토끼(Taehee Kim)","tag":"작성 중, Svelte, Elder.js, Blog"},"html":"<p>이번에는 Elder.js의 구조를 살펴보고 간단하게 레이아웃을 수정해보겠습니다.</p>\n<p>저번에는 Elder.js 템플릿을 가져와서 GitHub Pages에 배포도 해봤습니다. 이제 템플릿을 커스텀해서, 나만의 블로그를 만들 시간입니다.</p>\n<p>일단 가볍게 전체 구조를 살펴보고, 기능들을 만들면서 하나씩 배워보겠습니다. 다음 프로젝트 구조를 구경만 해보세요. 이런 게 있구나 알아보시기만 하면 됩니다.</p>\n<h2 id=\"elderjs-프로젝트-구조\">Elder.js 프로젝트 구조</h2>\n<ul>\n<li>node_modules : 저희가 설치한 각종 모듈들</li>\n<li>assets : 전체 기본 css, 이미지, robots.txt 등이 들어갑니다.\n<ul>\n<li>style.css</li>\n</ul>\n</li>\n<li>src : 프로젝트 소스 파일\n<ul>\n<li>components : 스벨트 컴포넌트\n<ul>\n<li>BlogTeaser.svelte</li>\n<li>...</li>\n</ul>\n</li>\n<li>layouts : 기본 레이아웃. 틀</li>\n<li>routes : 파일 시스템 기반 URL\n<ul>\n<li>blog : 블로그 글\n<ul>\n<li>Blog.svelte : 블로그 페이지의 스벨트 컴포넌트</li>\n<li>route.js : url 과 데이터 설정</li>\n<li>&#x3C;글의 slug>.md : 마크다운으로 쓴 글 본문</li>\n</ul>\n</li>\n<li>home : 초기 화면\n<ul>\n<li>Home.svelte</li>\n<li>route.js</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>docs : 실제로 생성된 사이트 파일</li>\n<li>build.js</li>\n<li>cleanPublic.js : docs 폴더를 정리해줌</li>\n<li>hook.js</li>\n<li>server.js</li>\n<li>shortcodes.js</li>\n</ul>\n</li>\n<li>.gitignore : 저번에 만든 git에 올리지 않을 파일 목록</li>\n<li>.nojekyll : 깃허브에게 jekyll 을 쓰지 않는다고 알려주는 파일</li>\n<li>elder.config.js : 엘더 js 설정</li>\n<li>esbuild.js : esbuild 설정</li>\n<li>rollup.config.js : 롤업 설정</li>\n<li>svelte.config.js : 스벨트 설정</li>\n<li>package.json : 프로젝트 의존성, 스크립트 등 설정</li>\n</ul>\n<p>처음 배울 때에는 원래 정신이 없기 마련입니다. 일단 내게 필요한 기능을 만드는데 필요한 부분만 조금씩 배워보겠습니다.</p>\n<h2 id=\"새로운-글쓰기-불필요한-글-지우기\">새로운 글쓰기. 불필요한 글 지우기.</h2>\n<p>먼저 src/routes/blog/route.js 를 열어보면 다음과 같은 내용이 보이실 겁니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #89DDFF\">module.exports</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\"> </span><span style=\"color: #545454\">// 마크다운 플러그인이</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\"> </span><span style=\"color: #545454\">// data와 all의 내용을 채워준다는 설명</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">data</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{},</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #82AAFF\">all</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #EEFFFF\"> []</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">permalink</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">/:slug/</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">};</span></span></code></pre>\n<p>일단 permanent link는 앞으로 몇 년 동안 이 페이지로 접근할 수 있는 URL은 이곳임을 알려주는 표시입니다. 검색엔진은 이 URL을 믿고 사람들을 데려오기 때문에 때문에 마음대로 permalink가 바뀌면 안 됩니다. {{keyword}}SEO{{/keyword}}에 중요한 이유를 아시겠죠?</p>\n<p>여기서는 permanlink 가 /:slug/ 모양이라고 템플릿을 만들어놨습니다. 여기서 slug는 url에 쓸 수 있게 띄어쓰기 대신 - 등으로 연결한 글 제목인데요. 영어로 쓴 마크다운 파일 제목이 slug가 됩니다. 예를들어 <code>getting-started.md</code> 파일은 .md 확장자를 빼버리고 <code>/getting-started/</code>가 url이 됩니다. 중요한 건 파일 이름을 일단 영문 알파벳으로 해줘야한다는 점입니다.</p>\n<p>그러면 Blog.svelte를 살펴보러 가겠습니다. data와 all을 마크다운 플러그인이 어떻게 채워줬을까요?</p>\n<p>코드를 열어보시면 맨 위에 script가 있습니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-html\"><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">export</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> data</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> request</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// data의 내용은 markdown plugin이 외부에서 넣어줌.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #EEFFFF\"> html</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> frontmatter </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> data</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre>\n<p>export let 으로 data와 request를 선언해놓으면, 마크다운 플러그인이 값을 넣어줍니다. data를 구조 분해할당해서 html과 frontmatter 를 꺼내오는데요. 구조 분해 할당을 잘 모르신다면 다음과 같은 코드를 줄여 쓴거라고 생각하시면 됩니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #545454\">// 전통적인 방법.</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> html </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">html</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> frontmatter </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">html</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">// 구조 분해 할당</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #EEFFFF\"> html </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> frontmatter </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> data</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>그러면 html이랑 frontmatter는 어디서 왔을까요? 마크다운 플러그인이 blog 폴더에 있는 <code>.md</code> 파일들을 찾아서 변환한 겁니다.</p>\n<p><code>getting-started.md</code> 마크다운 파일을 하나 열어보면 이렇게 생겼습니다.</p>\n<p>위에 title부터 author 까지가 frontmatter입니다. 그 다음에 이어지는 본문 마크다운이 html로 변환됩니다. 마크다운은 html을 편리하게 쓰기 위한 문법입니다. 인터넷에 검색해보시면 마크다운 문법을 쓰는 방법을 설명한 글이 많으니, 잘 모르신다면 이번 기회에 한 번 배워보세요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-null\"><span class=\"line\"><span style=\"color: #EEFFFF\">---\ntitle: &#39;Getting Started with Elder.js&#39;\nexcerpt: &#39;You have the starter template of Elder.js running. So what is next? This guide will help you explore the project.&#39;\ndate: &#39;2020-03-16T05:35:07.322Z&#39;\nauthor: Nick Reese\n---\n\nSweet! So you&#39;ve got the Elder.js starter template up and running. What&#39;s next?\n\n## 4 Routes To Explore\n\nThis project is structured to follow the required Elder.js folder structure which you can see below, but in short you&#39;ve got several routes in the `./src/routes/` folder.</span></span></code></pre>\n<p>그러면 이렇게 변환한 html과 frontmatter로 뭘 어떻게 하는 걸까요? 다시 <code>Blog.svelte</code>로 돌아가 봅시다.</p>\n<p><code>&#x3C;style></code> 태그를 지나치면 <code>&#x3C;svelte:head></code>가 나옵니다. 이 친구는 역시 검색엔진에게 이런저런 정보를 알려주기 위한 정보를 html header에 추가해줍니다.</p>\n<p><code>&#x3C;title></code>은 말 그대로 글의 제목입니다. 탭에 제목이 뜨게 되고, frontmatter에 적어놨던 title을 가져옵니다. svelte에서는 html에 js 값을 넣을 때 {}로 감싸줍니다. 예를 들어 title에 값을 채워넣으면 다음과 같이 렌더링될 겁니다.</p>\n<p><code>&#x3C;title>Svelte Elder.js 블로그 만들기&#x3C;/title></code></p>\n<p>다음으로 <code>&#x3C;meta name=\"description\"</code>은 페이지가 어떤 내용인지 설명합니다. 여기서는 frontmatter에 적어놨던 excerpt를 가져옵니다. excerpt는 발췌라는 뜻인데. 보통 글의 첫 부분 내용을 가져옵니다. 검색엔진에 미리보기로 뜨는 그 내용입니다.</p>\n<p>마지막으로 <code>&#x3C;link></code>는 아까 정해뒀던 permanlink를 넣어줍니다. 검색엔진에게 premanlink는 이거라고 알려주는 부분입니다.</p>\n<p>그 다음은 이제 화면의 내용을 HTML로 본격적으로 그리게 됩니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-html\"><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">href</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">/</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">&amp;LeftArrow; Home</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\"> // 블로그 홈으로 돌아가기</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">title</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h1</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">{frontmatter.title}</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h1</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\"> // 제목</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  {#if frontmatter.author}</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">small</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">By {frontmatter.author}</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">small</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">{/if} // 글쓴이가 있으면 표시</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">{#if html} // html이 있으면</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  {@html html} // html을 표시</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">{:else}</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h1</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">Oops!! Markdown not found!</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h1</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">{/if}</span></span></code></pre>\n<p>여기서 중요한 친구는 {#if 조건} 내용 {/if} 구문입니다. 스벨트는 옛날 템플릿 언어들을 닮았습니다. html에 리액트처럼 ? 삼항 연산자나 &#x26;&#x26; 문을 쓰지 않고, 이렇게 if 템플릿 안에 html을 넣어줍니다.</p>\n<p>마찬가지로 frontmatter에서 title과 author를 꺼내서 넣었고요. 아까 같이 data에서 꺼냈던 html도 넣어줬습니다.</p>\n<p>@html 은 html을 있는 그대로 삽입하기 위한 명령어입니다. 시험삼아 @html을 지우고 npm run dev로 서버를 실행해보세요. 글로 들어가면 렌더링 되지 않은 HTML 코드 자체가 보일 겁니다. @html이 있어야 html을 내용 그대로 삽입할 수 있습니다.</p>\n<h2 id=\"게시글-목록-날짜-순으로-정렬하기\">게시글 목록 날짜 순으로 정렬하기</h2>\n<h2 id=\"게시글-목록에-날짜-달기\">게시글 목록에 날짜 달기</h2>\n","data":{"tocTree":[{"depth":2,"text":"Elder.js 프로젝트 구조","id":"elderjs-프로젝트-구조","i":0,"children":[]},{"depth":2,"text":"새로운 글쓰기. 불필요한 글 지우기.","id":"새로운-글쓰기-불필요한-글-지우기","i":1,"children":[]},{"depth":2,"text":"게시글 목록 날짜 순으로 정렬하기","id":"게시글-목록-날짜-순으로-정렬하기","i":2,"children":[]},{"depth":2,"text":"게시글 목록에 날짜 달기","id":"게시글-목록에-날짜-달기","i":3,"children":[]}]},"permanlink":"/customize-elder-blog/","tags":["작성 중","Svelte","Elder.js","Blog"]},{"slug":"svelte-elder-create-blog","frontmatter":{"title":"Svelte Elder.js 블로그 만들기","excerpt":"검색 엔진 최적화(SEO)된 Svelte 정적 페이지 생성기인 ElderJS로 블로그 만드는 과정을 설명합니다.","date":"2021-07-07T15:01:00.618Z","author":"탐정토끼(Taehee Kim)","tag":"Svelte, Elder.js, GitHub Pages, Blog"},"html":"<p>이 블로그는 <a href=\"https://svelte.dev/\">Svelte</a>와 <a href=\"https://elderguide.com/tech/elderjs/\">Elder.js</a>로 만들었습니다. 이 글에서는 여러분에게 Svelte와 Elder.js를 소개하고, 여러분도 비슷한 블로그를 만들 수 있게 도와드리려 합니다.</p>\n<h2 id=\"필요한-것--html-css-js--nodejs-설치--github-계정\">필요한 것 : HTML, CSS, JS / Node.js 설치 / GitHub 계정</h2>\n<p>제 블로그는 초보도 쉽게 따라할 수 있도록 자세하고 친절하게 쓰려 합니다. 이미 많이 알고 계시는 분들은 큰 제목 위주로 빠르게 읽어 내려가시면 되겠습니다.</p>\n<ul>\n<li>HTML, CSS, JS에 대해 기본적인 지식이 있어야합니다.\n<ul>\n<li>잘 모른다면 <a href=\"https://opentutorials.org/course/3083\">생활코딩 WEBn</a> 강좌로 시작하길 권해드립니다.</li>\n</ul>\n</li>\n<li><a href=\"https://nodejs.org/ko/download/\">Node.JS</a>가 설치되어 있고, NPM 을 사용할 수 있어야 합니다.\n<ul>\n<li><a href=\"https://opentutorials.org/course/3332/21029\">생활코딩 Node.js 설치</a> 강의 영상을 참고하세요.</li>\n</ul>\n</li>\n<li>GitHub 계정이 있고, Git을 사용할 줄 알아야 합니다.\n<ul>\n<li><a href=\"https://opentutorials.org/course/3837\">생활코딩 GIT1</a>, <a href=\"https://opentutorials.org/course/307/2475\">생활코딩 GitHub</a> 강좌도 있습니다. (없는 게 없네요!)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"이론--svelte-와-elderjs-를-소개합니다\">이론 : Svelte 와 Elder.js 를 소개합니다.</h2>\n<p>이 두 친구와 {{keyword}}SEO{{/keyword}}, {{keyword}}JAM Stack{{/keyword}} 등에 대해 이미 잘 알고 계신다면 바로 실전으로 넘어가셔도 됩니다.</p>\n<h3 id=\"svelte는-가상-돔-없이-바닐라js에-가깝게-개발할-수-있는-웹-프레임워크입니다\">Svelte는 가상 돔 없이 바닐라JS에 가깝게 개발할 수 있는 웹 프레임워크입니다.</h3>\n<p><img src=\"https://camo.githubusercontent.com/c0334ff12149f79bcf27d97aca688ddb72c989c09c3f6b9db0a93d59cb1bbc28/68747470733a2f2f7376656c74656a732e6769746875622e696f2f6173736574732f62616e6e65722e706e67\" alt=\"Svelte 로고가 들어간 배너\"></p>\n<blockquote>\n<p>출처 : Svelte 깃허브 배너</p>\n</blockquote>\n<p>Svelte는 요즘 유명해졌습니다. Angular, React, Vue 3대장을 이은 다크호스로 주목 받고 있죠. 물론 Svelte가 뭔지 모르시는 분도 있을 겁니다.</p>\n<p>Svelte가 도대체 뭐길래? 공식 홈페이지에서는 다음 3가지 특징을 밀고 있습니다.</p>\n<ul>\n<li>Write less code : HTML, CSS, {{keyword}}바닐라JS{{/keyword}}에 가깝게 코딩할 수 있고요. 복잡한 보일러 플레이트가 거의 없습니다.</li>\n<li>No virtual DOM : 가상 돔 같은 프레임워크 오버헤드 없이, 가벼운 바닐라 JS 코드로 컴파일됩니다. <a href=\"https://miro.medium.com/max/2000/1*6HK361f-UDqNpWuTA68jHw.png\">번들 용량이 놀라울 정도로 작습니다</a>.</li>\n<li>Truly reactive : 복잡한 상태 관리 라이브러리 없이도, 쉽게 상태를 관리하고, 변화에 '반응'해서 빠르고 정확하게 UI를 변경합니다.</li>\n</ul>\n<p>다음은 이 블로그 게시글 목록에 있는 카드를 만드는 스벨트 컴포넌트입니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-html\"><span class=\"line\"><span style=\"color: #EEFFFF\">// BlogTeaser.svelte</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">export</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> blog</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// 컴포넌트의 prop입니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">export</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> helpers</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #545454\">// ISO 포맷인 날짜를 사람이 읽을 수 있는 모양으로 변환합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> formattedDate </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">Intl</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">DateTimeFormat</span><span style=\"color: #EEFFFF\">(</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ko-KR</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">      </span><span style=\"color: #F07178\">dateStyle</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">long</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">      </span><span style=\"color: #F07178\">timeStyle</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">short</span><span style=\"color: #89DDFF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #EEFFFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">format</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">Date</span><span style=\"color: #EEFFFF\">(blog</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">frontmatter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">date))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\">&lt;!-- 리액트처럼 {} 안에 js 코드를 넣을 수 있습니다. --&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">href</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #C3E88D\">{helpers.permalinks.blog({</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">slug:</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">blog.slug</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">})}</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">entry card</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">h3</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">{blog.frontmatter.title}</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">h3</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #C792EA\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">date-badge</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    {formattedDate}</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">{blog.frontmatter.excerpt}</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">p</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">a</span><span style=\"color: #89DDFF\">&gt;</span></span>\n\n\n<span class=\"line\"><span style=\"color: #545454\">&lt;!--</span></span>\n<span class=\"line\"><span style=\"color: #545454\">css도 평범하게 사용하면 됩니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\">scope가 해당 컴포넌트 안으로 제한되기 때문에</span></span>\n<span class=\"line\"><span style=\"color: #545454\">복잡한 className 없이도 selector를 간단하게 유지할 수 있습니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\">--&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">style</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">span</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #FFCB6B\">date-badge</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">color</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> gray</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">font-size</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">80%</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">width</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> fit-content</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">h3</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">margin</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">color</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">var</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">--primary</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #FFCB6B\">p</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">margin</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">0.25rem</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    </span><span style=\"color: #B2CCD6\">color</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">var</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF\">--primary-text</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">style</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre>\n<p>Svelte 홈페이지에는 따로 설치 없이 바로 해볼 수 있는 <a href=\"https://svelte.dev/tutorial/basics\">영어 튜토리얼</a>이 있습니다.</p>\n<p>한국어 자료로는 <a href=\"https://heropy.blog/2019/09/29/svelte/\">Svete.js 완벽 가이드</a>도 있습니다. 저자 분이 인프런에서 유료 강의도 하고 계세요.</p>\n<h3 id=\"elderjs는-검색엔진에-최적화된-svelte-정적-사이트-생성기ssg입니다\">Elder.js는 검색엔진에 최적화된 Svelte 정적 사이트 생성기(SSG)입니다.</h3>\n<p><img src=\"https://github.com/elderjs/elderjs/raw/master/elderjs.png\" alt=\"할아버지를 그린 그림\"></p>\n<blockquote>\n<p>출처 : Elder.js 깃허브 배너. Elder.js는 노인 돌봄 서비스를 찾고 비교할 수 있는 https://elderguide.com 을 만들던 과정에서 탄생한 프레임워크다.</p>\n</blockquote>\n<p>Elder.js는 {{keyword}}CSR{{/keyword}}과 {{keyword}}SSR{{/keyword}}의 단점을 해결하기 위해 등장한 {{keyword}}JAM Stack{{/keyword}} 정적 사이트 생성기{{keyword}}SSG{{/keyword}}입니다. Elder.js 는 Svelte 앱을 정적인 HTML과 자그마한 컴포넌트로 분할해서 {{keyword}}Static File{{/keyword}}로 배포할 수 있게 해줍니다.</p>\n<p>{{keyword}}SEO{{/keyword}}는 블로그나 사이트를 만드는 사람이라면 신경 쓸 수 밖에 없죠. 구글이나 네이버의 크롤링 로봇들은 인터넷을 돌아다니면서 HTML 파일을 읽고 웹사이트에 어떤 내용이 있는지 정리합니다.</p>\n<p>하지만 React를 비롯한 {{keyword}}SPA{{/keyword}} 프레임워크들은 검색 엔진이 읽기 어려워합니다. 식당에서 음식을 고르려는데, 식재료와 레시피만 적혀 있는 것과 다르지 않습니다. 사용자의 웹 브라우저가 직접 html을 계산해야 하기 때문에 속도도 느리죠.</p>\n<p>그래서 서버에서 html을 렌더링하기도 합니다. 바로 {{keyword}}SSR{{/keyword}}이죠. React 기반인 Next.js가 대표적입니다. 하지만 SSR은 상대적으로 비싼 서버를 굴려야하기 때문에, 저희 같은 일반인은 물론이고 회사에게도 부담입니다.</p>\n<p>여기서 {{keyword}}JAM Stack{{/keyword}}이 등장합니다. 미리 가능한 페이지들을 정적(static) HTML 파일로 만들어서 CDN(콘텐츠 배달 네트워크)에 올려놓고, 추가로 필요한 데이터만 작은 API 서버에서 받아오게 하는 것이죠.</p>\n<p>이러면 Svelte나 React 같은 최신 프런트엔드 프레임워크를 사용하면서도, 가볍게 블로그나 사이트를 운영할 수 있습니다.</p>\n<p>이야기를 더 듣고 싶으시다면 <a href=\"https://twinstae.github.io/brief-history-of-web-front/\">웹 프런트 엔드의 간략한 역사</a>를 읽어주세요.</p>\n<p>Elder.js는 이러한 JAM 스택에서도 특히 SEO 전문가들이 만든 프레임워크입니다. 여러분의 블로그가 더 잘 검색될 수 있도록 사소한 것 하나하나 경고를 띄우고 Tip을 알려주죠. Sitemap등을 만들어주는 플러그인도 있습니다. 높은 조회수를 원하신다면, 정말 매력적인 셈이죠. :)</p>\n<p>이제 설명은 끝입니다. 실전으로 들어가보죠!</p>\n<h2 id=\"실전-elderjs-template-프로젝트-github-pages에-배포하기\">실전: Elder.js template 프로젝트 GitHub Pages에 배포하기</h2>\n<p>그러면 공식 가이드를 따라서, 프로젝트를 세팅해봅시다.</p>\n<p>앞서 말씀드렸듯 node.js와 함께 npm 이 설치되어 있어야합니다.</p>\n<p>잘 모르겠다면 명령 프롬프트나 터미널을 열고 다음 명령어를 쳐보세요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-null\"><span class=\"line\"><span style=\"color: #EEFFFF\">npx --version\n# 6.14.12 이런 식으로 나오면 설치가 되어 있는 겁니다.</span></span></code></pre>\n<h3 id=\"npx로-elderjstemplate-세팅하기\">npx로 Elderjs/template 세팅하기</h3>\n<p>npx는 프로젝트 템플릿을 다운 받아 세팅해줍니다. 다음 명령어를 입력하면 &#x3C;내 깃허브 아이디>.github.io 라는 이름의 폴더와 기본 파일들이 생성됩니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color: #EEFFFF\">npx degit Elderjs/template </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\">내 깃허브 아이디</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">.github.io</span></span></code></pre>\n<p>저는 깃허브 아이디가 <code>twinstae</code> 이기 때문에 <code>twinstae.github.io</code>로 만들었습니다.</p>\n<p>이제 다음 명령어들을 차례차례 입력합니다. # 은 주석이니 무시하셔도 됩니다. 잘 모르는 터미널 명령어가 있다면 인터넷에 더 자세한 내용을 검색해보세요.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color: #545454\"># cd는 change directory의 줄임말입니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># 방금 만든 프로젝트 폴더 안으로 이동합니다.</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">cd</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\">내 깃허브 아이디</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">.github.io</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># package.json 파일에 적혀 있는 라이브러리들을 다운 받습니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># svelte와 elder.js 등등의 모듈이 node_modules 폴더에 설치 됩니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># yarn 을 사용한다면 yarn install도 가능합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">npm install</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># package.json에 있는 start 스크립트를 실행합니다.</span></span>\n<span class=\"line\"><span style=\"color: #545454\"># dev 스크립트가 프로젝트를 빌드하고, 개발용 서버를 실행합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">npm start</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 웹 브라우저에서 http://localhost:3000 으로 들어가면 사이트를 볼 수 있습니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">open http://localhost:3000</span></span></code></pre>\n<p>정상적으로 프로젝트가 세팅이 되었다면, 웹 브라우저에서 다음과 같은 템플릿 사이트를 볼 수 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--A0xtvNLd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mksj4g4iuntzxkx5xdau.jpg\" alt=\"웹 브라우저에 Elder.js 템플릿 사이트가 열린 모습. Hello World: Welcome to Elder.js 라는 제목이 큰 글씨로 적혀 있다.\"></p>\n<p>개발용 localhost 서버는 내 컴퓨터에서만 볼 수 있습니다. 이제 저희 템플릿 프로젝트를 github pages에 올려서, 누구나 언제 어디서나 접속할 수 있게 만들어봅시다.</p>\n<p>영상이 편하신 분은 <a href=\"https://opentutorials.org/course/3084/18891\">생활코딩 WEBn 웹 호스팅</a> 강좌를 참고하세요. 약간 옛날 자료이긴 하지만 큰 개념을 잡는 데에는 무리가 없을 겁니다.</p>\n<h3 id=\"github-저장소-만들기\">github 저장소 만들기</h3>\n<p>깃허브에 가입하지 않으셨다면 먼저 <a href=\"https://github.com/signup\">회원가입</a>(Sign Up), 로그인(Sign In)을 해주세요.</p>\n<p>이제 저희 코드가 올라갈 클라우드 저장소(Repository)를 만들어야 합니다. 보통 줄여서 레포(Repo)라고도 부릅니다. 왼쪽 위에 보시면 다음과 같이 생긴 초록 버튼이 있습니다. 누르면 새 레포를 만드는 페이지가 나옵니다.</p>\n<p>{{githubNewRepoButton /}} 사실 이 버튼을 눌러도 바로 이동합니다.</p>\n<ol>\n<li>레포 이름은 앞서 정했던 <code>&#x3C;내 깃허브 아이디>.github.io</code> 로 합니다.</li>\n<li>Public과 Private가 있는데, Private로 하면 남들이 볼 수 없습니다. 사람들이 우리 사이트에 접속할 수 있게 하려면 Public을 선택합니다.</li>\n<li>README.md 파일이나 .gitignore 파일에 대해서는 다음 단계에서 설명합니다.</li>\n</ol>\n<p><img src=\"https://s3-ap-northeast-2.amazonaws.com/opentutorials-user-file/module/3135/7820.jpeg\" alt=\"깃허브 new repo 생성 페이지의 모습. repository name에 1, public/private 에 2, README 체크박스에 3이라는 번호가 적혀져 있다.\"></p>\n<h3 id=\"github-pages-설정하기\">github pages 설정하기</h3>\n<p>이제 저장소를 만들었으니, 저장소의 파일을 서빙하도록 설정해야 합니다.</p>\n<p>저장소 메뉴에 보면 Settings(설정)이 있습니다.\n<img src=\"https://docs.github.com/assets/images/help/repository/repo-actions-settings.png\" alt=\"GitHub 저장소 메뉴 사진. Settings 가 강조되어 있다.\"></p>\n<p>Pages 탭에 들어갑니다.</p>\n<p><img src=\"https://docs.github.com/assets/images/help/pages/pages-tab.png\" alt=\"설정의 메뉴 목록 사진. Pages가 강조되어 있다.\"></p>\n<p>Source 폴더를 <code>/(root)</code>에서 <code>/docs</code> 폴더로 바꾸고 저장(Save)해줍니다.</p>\n<p><img src=\"https://docs.github.com/assets/images/help/pages/publishing-source-folder-drop-down.png\" alt=\"source 폴더의 사진. 메뉴에 /root와 /docs가 있다.\"></p>\n<h3 id=\"gitignore로-용량이-큰-파일-보안에-민감한-파일-숨기기\">.gitignore로 용량이 큰 파일, 보안에 민감한 파일 숨기기</h3>\n<p>이제 아까 만들어둔 템플릿 프로젝트 폴더에 메모장이나 텍스트 에디터를 열고 <code>.gitignore</code> 라는 파일을 하나 만듭니다. txt 확장자로 저장하면 안 되고, 모든 파일 형식 으로 저장합니다.</p>\n<p>.gitignore에 적힌 파일이나 폴더는 remote 저장소에 올라가지 않게 됩니다. 저는 다음과 같이 3가지 폴더를 넣어주었습니다. 수정하고 저장합니다.</p>\n<ul>\n<li>node_modules는 용량이 크기 때문에</li>\n<li>___ELDER___는 컴파일된 중간 파일들이라서</li>\n<li>.env는 보안에 중요한 key 등이 들어가기 때문에 제외했습니다.</li>\n</ul>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-text\"><span class=\"line\"><span style=\"color: #EEFFFF\"># .gitignore 파일 내용\n\nnode_modules\n___ELDER___\n.env</span></span></code></pre>\n<h3 id=\"nojekyll-파일-넣어서-asset-서빙되게-하기\">.nojekyll 파일 넣어서 asset 서빙되게 하기</h3>\n<p>GitHub Pages는 원래 Jekyll 이라는 루비 정적 사이트 생성기를 사용하는 게 기본입니다. 저희는 Elder.js 를 쓰기 때문에 .nojekyll 설정을 해줘야 합니다. 이 설정을 안 해주면 사이트 css나 이미지 같은 asset을 불러오지 못하게 됩니다. 디자인이 모두 날아간 황량한 HTML을 보지 않으려면...</p>\n<p>.nojekyll 파일을 만들어줍시다. 메모장으로 파일을 만들고 저장하면 됩니다. 내용은 비어 있어도 상관 없습니다.</p>\n<h3 id=\"배포되는-public-폴더-이름을-docs로-바꾸기\">배포되는 public 폴더 이름을 docs로 바꾸기</h3>\n<p>github pages는 root 폴더나 docs 라는 이름을 가진 폴더만 서빙할 수 있습니다. elder.js 는 기본적으로 public 폴더에 빌드된 html 파일들이 들어갑니다. 그렇기 때문에 설정을 바꿔서 docs 폴더에 들어가게 해줘야 합니다.</p>\n<p><code>elder.config.js</code> 파일을 텍스트 편집기로 열어보세요. 설정이 많지만 저희가 신경 쓸 건 딱 두 가지, 'origin'과 'distDir'입니다.</p>\n<p><code>origin</code>은 비어 있을 겁니다. 내 사이트의 host 도메인을 넣어줘야 하는데요. <code>https://&#x3C;내 깃허브 아이디>.github.io</code>를 적어주면 됩니다.</p>\n<p><code>distDir</code>은 <code>public</code>으로 되어 있을 겁니다. <code>docs</code> 로 바꿔줍니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-javascript\"><span class=\"line\"><span style=\"color: #89DDFF\">module.exports</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">origin</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">https://&lt;내 깃허브 아이디&gt;.github.io</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// &lt;- 여기에 내 깃허브 pages 주소를 넣어줍니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">lang</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">ko-KR</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">srcDir</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">src</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  </span><span style=\"color: #F07178\">distDir</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">docs</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454\">// &lt;- 여기를 docs로 바꿔 줍니다.</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #545454\">// 길어서 생략</span></span></code></pre>\n<h3 id=\"원격-저장소에-push-하기\">원격 저장소에 push 하기</h3>\n<p>이제 git으로 저희의 github 원격(remote) 저장소에 프로젝트를 올려보겠습니다. 혹시 빼먹고 넘어간 건 없는지 한 번 점검해보세요.</p>\n<p>문제가 없는 것 같다면 이제 터미널을 열고, 아까 저희가 만들어둔 템플릿 프로젝트 폴더로 이동합니다. cd 명령어를 이용하면 됩니다. 잘 모르겠다면 <a href=\"https://www.google.com/search?q=cd+%EB%AA%85%EB%A0%B9%EC%96%B4\">cd 명령어를 검색</a>해보세요</p>\n<p>이제 다음 명령어를 차례대로 실행합니다.</p>\n<pre class=\"shiki\" style=\"background-color: #212121\"><code class=\"language-bash\"><span class=\"line\"><span style=\"color: #545454\"># 현재 폴더를 깃 프로젝트로 설정합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git init</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 현재 폴더의 모든 파일을 git stage로 올려서 선택합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git add </span><span style=\"color: #82AAFF\">.</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># stage에 선택된 파일들을 커밋해서 확정합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git commit -m </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">Initial commit</span><span style=\"color: #89DDFF\">&quot;</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># main 이라는 브랜치 버전을 만듭니다. </span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git branch -M main</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 내 깃허브 원격 저장소를 추가해서 연결합니다.</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git remote add origin https://github.com/</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\">내 깃허브 아이디</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">/</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #EEFFFF\">내 깃허브 아이디</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #EEFFFF\">.github.io.git</span></span>\n\n<span class=\"line\"><span style=\"color: #545454\"># 내 깃허브 원격 저장소에 커밋한 파일들을 올립니다!</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">git push -u origin main</span></span></code></pre>\n<p>성공적으로 push가 끝났으면, 내 github 페이지에 들어가서 파일이 잘 올라갔는지 확인합니다. 웹 브라우저 주소 창에 <code>https://&#x3C;내 깃허브 아이디>.github.io</code>를 치고 들어가면 됩니다.</p>\n<p>아까 localhost로 봤던 템플릿 사이트가 보이나요? 그러면 성공입니다!</p>\n<p>고생하셨습니다. 저희가 이번에 한 일을 정리해봅시다.</p>\n<ul>\n<li>Elder.js 템플릿 프로젝트를 세팅했습니다.</li>\n<li>템플릿 프로젝트를 GitHub 저장소에 올려서 배포했습니다.</li>\n</ul>\n<p>물론 이제 시작입니다. ;) 이제부터...</p>\n<ul>\n<li>블로그에 마크다운으로 글을 쓰는 방법</li>\n<li>내가 원하는대로 Layout, Home, Blog 의 디자인을 바꾸는 법</li>\n<li>다크모드, 날짜 순 정렬, 코드 문법 강조, Utterances 댓글 기능, 프로필 이미지 등을 넣는 법</li>\n<li>Elder.JS 의 작동 원리, 검색 엔진 최적화...</li>\n</ul>\n<p>그 밖에도 다양한 내용들을 차례차례 소개해보겠습니다. 궁금하신 게 있으면 댓글로 달아주세요.</p>\n","data":{"tocTree":[{"depth":2,"text":"필요한 것 : HTML, CSS, JS / Node.js 설치 / GitHub 계정","id":"필요한-것--html-css-js--nodejs-설치--github-계정","i":0,"children":[]},{"depth":2,"text":"이론 : Svelte 와 Elder.js 를 소개합니다.","id":"이론--svelte-와-elderjs-를-소개합니다","i":1,"children":[{"depth":3,"text":"Svelte는 가상 돔 없이 바닐라JS에 가깝게 개발할 수 있는 웹 프레임워크입니다.","id":"svelte는-가상-돔-없이-바닐라js에-가깝게-개발할-수-있는-웹-프레임워크입니다","i":2,"parent":true,"children":[]},{"depth":3,"text":"Elder.js는 검색엔진에 최적화된 Svelte 정적 사이트 생성기(SSG)입니다.","id":"elderjs는-검색엔진에-최적화된-svelte-정적-사이트-생성기ssg입니다","i":3,"parent":true,"children":[]}]},{"depth":2,"text":"실전: Elder.js template 프로젝트 GitHub Pages에 배포하기","id":"실전-elderjs-template-프로젝트-github-pages에-배포하기","i":4,"children":[{"depth":3,"text":"npx로 Elderjs/template 세팅하기","id":"npx로-elderjstemplate-세팅하기","i":5,"parent":true,"children":[]},{"depth":3,"text":"github 저장소 만들기","id":"github-저장소-만들기","i":6,"parent":true,"children":[]},{"depth":3,"text":"github pages 설정하기","id":"github-pages-설정하기","i":7,"parent":true,"children":[]},{"depth":3,"text":".gitignore로 용량이 큰 파일, 보안에 민감한 파일 숨기기","id":"gitignore로-용량이-큰-파일-보안에-민감한-파일-숨기기","i":8,"parent":true,"children":[]},{"depth":3,"text":".nojekyll 파일 넣어서 asset 서빙되게 하기","id":"nojekyll-파일-넣어서-asset-서빙되게-하기","i":9,"parent":true,"children":[]},{"depth":3,"text":"배포되는 public 폴더 이름을 docs로 바꾸기","id":"배포되는-public-폴더-이름을-docs로-바꾸기","i":10,"parent":true,"children":[]},{"depth":3,"text":"원격 저장소에 push 하기","id":"원격-저장소에-push-하기","i":11,"parent":true,"children":[]}]}]},"permanlink":"/svelte-elder-create-blog/","tags":["Svelte","Elder.js","GitHub Pages","Blog"]}]};